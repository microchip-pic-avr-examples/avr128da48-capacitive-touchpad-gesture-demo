
SnakeDemoAVRDA.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000033e  00804000  0000451c  000045b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000451c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000028c  0080433e  0080433e  000048ee  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  000048ee  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004950  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000558  00000000  00000000  00004990  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000acbb  00000000  00000000  00004ee8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000045c1  00000000  00000000  0000fba3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000343f  00000000  00000000  00014164  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000bdc  00000000  00000000  000175a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00005a46  00000000  00000000  00018180  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002d76  00000000  00000000  0001dbc6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000450  00000000  00000000  0002093c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 76 00 	jmp	0xec	; 0xec <__ctors_end>
       4:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
       8:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
       c:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__vector_3>
      10:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      14:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      18:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      1c:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      20:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      24:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      28:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      2c:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      30:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      34:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      38:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      3c:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      40:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      44:	0c 94 ae 0c 	jmp	0x195c	; 0x195c <__vector_17>
      48:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      4c:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      50:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      54:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      58:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      5c:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      60:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      64:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      68:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      6c:	0c 94 24 08 	jmp	0x1048	; 0x1048 <__vector_27>
      70:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      74:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      78:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      7c:	0c 94 9c 00 	jmp	0x138	; 0x138 <__vector_31>
      80:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      84:	0c 94 c4 00 	jmp	0x188	; 0x188 <__vector_33>
      88:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      8c:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      90:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      94:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      98:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      9c:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      a0:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      a4:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      a8:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      ac:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      b0:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      b4:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      b8:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      bc:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      c0:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      c4:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      c8:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      cc:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      d0:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      d4:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      d8:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      dc:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      e0:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      e4:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      e8:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>

000000ec <__ctors_end>:
      ec:	11 24       	eor	r1, r1
      ee:	1f be       	out	0x3f, r1	; 63
      f0:	cf ef       	ldi	r28, 0xFF	; 255
      f2:	cd bf       	out	0x3d, r28	; 61
      f4:	df e7       	ldi	r29, 0x7F	; 127
      f6:	de bf       	out	0x3e, r29	; 62

000000f8 <__do_copy_data>:
      f8:	13 e4       	ldi	r17, 0x43	; 67
      fa:	a0 e0       	ldi	r26, 0x00	; 0
      fc:	b0 e4       	ldi	r27, 0x40	; 64
      fe:	ec e1       	ldi	r30, 0x1C	; 28
     100:	f5 e4       	ldi	r31, 0x45	; 69
     102:	00 e0       	ldi	r16, 0x00	; 0
     104:	0b bf       	out	0x3b, r16	; 59
     106:	02 c0       	rjmp	.+4      	; 0x10c <__do_copy_data+0x14>
     108:	07 90       	elpm	r0, Z+
     10a:	0d 92       	st	X+, r0
     10c:	ae 33       	cpi	r26, 0x3E	; 62
     10e:	b1 07       	cpc	r27, r17
     110:	d9 f7       	brne	.-10     	; 0x108 <__do_copy_data+0x10>

00000112 <__do_clear_bss>:
     112:	25 e4       	ldi	r18, 0x45	; 69
     114:	ae e3       	ldi	r26, 0x3E	; 62
     116:	b3 e4       	ldi	r27, 0x43	; 67
     118:	01 c0       	rjmp	.+2      	; 0x11c <.do_clear_bss_start>

0000011a <.do_clear_bss_loop>:
     11a:	1d 92       	st	X+, r1

0000011c <.do_clear_bss_start>:
     11c:	aa 3c       	cpi	r26, 0xCA	; 202
     11e:	b2 07       	cpc	r27, r18
     120:	e1 f7       	brne	.-8      	; 0x11a <.do_clear_bss_loop>
     122:	0e 94 e7 01 	call	0x3ce	; 0x3ce <main>
     126:	0c 94 8c 22 	jmp	0x4518	; 0x4518 <_exit>

0000012a <__bad_interrupt>:
     12a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012e <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
     12e:	0e 94 1c 0a 	call	0x1438	; 0x1438 <system_init>

	touch_init();
     132:	0e 94 a4 06 	call	0xd48	; 0xd48 <touch_init>
     136:	08 95       	ret

00000138 <__vector_31>:

extern void TimeSchedulerHandler(void);

ISR(USART1_RXC_vect)

{
     138:	1f 92       	push	r1
     13a:	0f 92       	push	r0
     13c:	0f b6       	in	r0, 0x3f	; 63
     13e:	0f 92       	push	r0
     140:	11 24       	eor	r1, r1
     142:	0b b6       	in	r0, 0x3b	; 59
     144:	0f 92       	push	r0
     146:	2f 93       	push	r18
     148:	3f 93       	push	r19
     14a:	4f 93       	push	r20
     14c:	5f 93       	push	r21
     14e:	6f 93       	push	r22
     150:	7f 93       	push	r23
     152:	8f 93       	push	r24
     154:	9f 93       	push	r25
     156:	af 93       	push	r26
     158:	bf 93       	push	r27
     15a:	ef 93       	push	r30
     15c:	ff 93       	push	r31

	krono_rx_complete_callback();
     15e:	0e 94 36 06 	call	0xc6c	; 0xc6c <krono_rx_complete_callback>
}
     162:	ff 91       	pop	r31
     164:	ef 91       	pop	r30
     166:	bf 91       	pop	r27
     168:	af 91       	pop	r26
     16a:	9f 91       	pop	r25
     16c:	8f 91       	pop	r24
     16e:	7f 91       	pop	r23
     170:	6f 91       	pop	r22
     172:	5f 91       	pop	r21
     174:	4f 91       	pop	r20
     176:	3f 91       	pop	r19
     178:	2f 91       	pop	r18
     17a:	0f 90       	pop	r0
     17c:	0b be       	out	0x3b, r0	; 59
     17e:	0f 90       	pop	r0
     180:	0f be       	out	0x3f, r0	; 63
     182:	0f 90       	pop	r0
     184:	1f 90       	pop	r1
     186:	18 95       	reti

00000188 <__vector_33>:

ISR(USART1_TXC_vect)
{
     188:	1f 92       	push	r1
     18a:	0f 92       	push	r0
     18c:	0f b6       	in	r0, 0x3f	; 63
     18e:	0f 92       	push	r0
     190:	11 24       	eor	r1, r1
     192:	0b b6       	in	r0, 0x3b	; 59
     194:	0f 92       	push	r0
     196:	2f 93       	push	r18
     198:	3f 93       	push	r19
     19a:	4f 93       	push	r20
     19c:	5f 93       	push	r21
     19e:	6f 93       	push	r22
     1a0:	7f 93       	push	r23
     1a2:	8f 93       	push	r24
     1a4:	9f 93       	push	r25
     1a6:	af 93       	push	r26
     1a8:	bf 93       	push	r27
     1aa:	ef 93       	push	r30
     1ac:	ff 93       	push	r31

	krono_tx_complete_callback();
     1ae:	0e 94 18 06 	call	0xc30	; 0xc30 <krono_tx_complete_callback>
}
     1b2:	ff 91       	pop	r31
     1b4:	ef 91       	pop	r30
     1b6:	bf 91       	pop	r27
     1b8:	af 91       	pop	r26
     1ba:	9f 91       	pop	r25
     1bc:	8f 91       	pop	r24
     1be:	7f 91       	pop	r23
     1c0:	6f 91       	pop	r22
     1c2:	5f 91       	pop	r21
     1c4:	4f 91       	pop	r20
     1c6:	3f 91       	pop	r19
     1c8:	2f 91       	pop	r18
     1ca:	0f 90       	pop	r0
     1cc:	0b be       	out	0x3b, r0	; 59
     1ce:	0f 90       	pop	r0
     1d0:	0f be       	out	0x3f, r0	; 63
     1d2:	0f 90       	pop	r0
     1d4:	1f 90       	pop	r1
     1d6:	18 95       	reti

000001d8 <__vector_3>:

ISR(RTC_CNT_vect)
{
     1d8:	1f 92       	push	r1
     1da:	0f 92       	push	r0
     1dc:	0f b6       	in	r0, 0x3f	; 63
     1de:	0f 92       	push	r0
     1e0:	11 24       	eor	r1, r1
     1e2:	0b b6       	in	r0, 0x3b	; 59
     1e4:	0f 92       	push	r0
     1e6:	2f 93       	push	r18
     1e8:	3f 93       	push	r19
     1ea:	4f 93       	push	r20
     1ec:	5f 93       	push	r21
     1ee:	6f 93       	push	r22
     1f0:	7f 93       	push	r23
     1f2:	8f 93       	push	r24
     1f4:	9f 93       	push	r25
     1f6:	af 93       	push	r26
     1f8:	bf 93       	push	r27
     1fa:	ef 93       	push	r30
     1fc:	ff 93       	push	r31

	/* Insert your RTC Compare interrupt handling code */
	touch_timer_handler();
     1fe:	0e 94 ef 07 	call	0xfde	; 0xfde <touch_timer_handler>
	
	TimeSchedulerHandler();
     202:	0e 94 93 02 	call	0x526	; 0x526 <TimeSchedulerHandler>
	/* Compare interrupt flag has to be cleared manually */
	RTC.INTFLAGS = RTC_CMP_bm;
     206:	82 e0       	ldi	r24, 0x02	; 2
     208:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <__TEXT_REGION_LENGTH__+0x7e0143>
}
     20c:	ff 91       	pop	r31
     20e:	ef 91       	pop	r30
     210:	bf 91       	pop	r27
     212:	af 91       	pop	r26
     214:	9f 91       	pop	r25
     216:	8f 91       	pop	r24
     218:	7f 91       	pop	r23
     21a:	6f 91       	pop	r22
     21c:	5f 91       	pop	r21
     21e:	4f 91       	pop	r20
     220:	3f 91       	pop	r19
     222:	2f 91       	pop	r18
     224:	0f 90       	pop	r0
     226:	0b be       	out	0x3b, r0	; 59
     228:	0f 90       	pop	r0
     22a:	0f be       	out	0x3f, r0	; 63
     22c:	0f 90       	pop	r0
     22e:	1f 90       	pop	r1
     230:	18 95       	reti

00000232 <UpdateDisplay>:
Output : none
Notes  :
============================================================================*/
void UpdateDisplay(uint8_t Add, void *Data, uint8_t len)
{
	I2C_0_writeNBytes(Add, Data, len);
     232:	50 e0       	ldi	r21, 0x00	; 0
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	0e 94 d6 0c 	call	0x19ac	; 0x19ac <I2C_0_writeNBytes>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     23a:	2f ef       	ldi	r18, 0xFF	; 255
     23c:	82 e5       	ldi	r24, 0x52	; 82
     23e:	97 e0       	ldi	r25, 0x07	; 7
     240:	21 50       	subi	r18, 0x01	; 1
     242:	80 40       	sbci	r24, 0x00	; 0
     244:	90 40       	sbci	r25, 0x00	; 0
     246:	e1 f7       	brne	.-8      	; 0x240 <UpdateDisplay+0xe>
     248:	00 c0       	rjmp	.+0      	; 0x24a <UpdateDisplay+0x18>
     24a:	00 00       	nop
     24c:	08 95       	ret

0000024e <ClearDisplay>:
Input  : none
Output : none
Notes  :
============================================================================*/
void ClearDisplay(void)
{
     24e:	cf 93       	push	r28
     250:	df 93       	push	r29
     252:	cd b7       	in	r28, 0x3d	; 61
     254:	de b7       	in	r29, 0x3e	; 62
     256:	62 97       	sbiw	r28, 0x12	; 18
     258:	cd bf       	out	0x3d, r28	; 61
     25a:	de bf       	out	0x3e, r29	; 62
	uint8_t LEDClrArray[9][2]={1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 0x0C,0};
     25c:	82 e1       	ldi	r24, 0x12	; 18
     25e:	ef e7       	ldi	r30, 0x7F	; 127
     260:	f1 e4       	ldi	r31, 0x41	; 65
     262:	de 01       	movw	r26, r28
     264:	11 96       	adiw	r26, 0x01	; 1
     266:	01 90       	ld	r0, Z+
     268:	0d 92       	st	X+, r0
     26a:	8a 95       	dec	r24
     26c:	e1 f7       	brne	.-8      	; 0x266 <ClearDisplay+0x18>
	UpdateDisplay(I2C_ADD, LEDClrArray, 18);
     26e:	42 e1       	ldi	r20, 0x12	; 18
     270:	be 01       	movw	r22, r28
     272:	6f 5f       	subi	r22, 0xFF	; 255
     274:	7f 4f       	sbci	r23, 0xFF	; 255
     276:	80 e6       	ldi	r24, 0x60	; 96
     278:	0e 94 19 01 	call	0x232	; 0x232 <UpdateDisplay>
}
     27c:	62 96       	adiw	r28, 0x12	; 18
     27e:	cd bf       	out	0x3d, r28	; 61
     280:	de bf       	out	0x3e, r29	; 62
     282:	df 91       	pop	r29
     284:	cf 91       	pop	r28
     286:	08 95       	ret

00000288 <FillDisplay>:
Input  : none
Output : none
Notes  :
============================================================================*/
void FillDisplay(void)
{
     288:	cf 93       	push	r28
     28a:	df 93       	push	r29
     28c:	cd b7       	in	r28, 0x3d	; 61
     28e:	de b7       	in	r29, 0x3e	; 62
     290:	62 97       	sbiw	r28, 0x12	; 18
     292:	cd bf       	out	0x3d, r28	; 61
     294:	de bf       	out	0x3e, r29	; 62
	uint8_t LEDClrArray[9][2] = {1, 0xFF, 2, 0xFF, 3, 0xFF, 4, 0xFF, 5, 0xFF, 6, 0xFF, 7, 0xFF, 8, 0xFF, 0x0C, 0};
     296:	82 e1       	ldi	r24, 0x12	; 18
     298:	e1 e9       	ldi	r30, 0x91	; 145
     29a:	f1 e4       	ldi	r31, 0x41	; 65
     29c:	de 01       	movw	r26, r28
     29e:	11 96       	adiw	r26, 0x01	; 1
     2a0:	01 90       	ld	r0, Z+
     2a2:	0d 92       	st	X+, r0
     2a4:	8a 95       	dec	r24
     2a6:	e1 f7       	brne	.-8      	; 0x2a0 <FillDisplay+0x18>
	UpdateDisplay(I2C_ADD, LEDClrArray, 18);
     2a8:	42 e1       	ldi	r20, 0x12	; 18
     2aa:	be 01       	movw	r22, r28
     2ac:	6f 5f       	subi	r22, 0xFF	; 255
     2ae:	7f 4f       	sbci	r23, 0xFF	; 255
     2b0:	80 e6       	ldi	r24, 0x60	; 96
     2b2:	0e 94 19 01 	call	0x232	; 0x232 <UpdateDisplay>
}
     2b6:	62 96       	adiw	r28, 0x12	; 18
     2b8:	cd bf       	out	0x3d, r28	; 61
     2ba:	de bf       	out	0x3e, r29	; 62
     2bc:	df 91       	pop	r29
     2be:	cf 91       	pop	r28
     2c0:	08 95       	ret

000002c2 <BlinkDisplay>:
Input  : none
Output : none
Notes  :
============================================================================*/
void BlinkDisplay(uint8_t i)
{
     2c2:	cf 93       	push	r28
	while (i--)
     2c4:	88 23       	and	r24, r24
     2c6:	c9 f0       	breq	.+50     	; 0x2fa <BlinkDisplay+0x38>
     2c8:	c8 2f       	mov	r28, r24
	{
		ClearDisplay();
     2ca:	0e 94 27 01 	call	0x24e	; 0x24e <ClearDisplay>
     2ce:	2f ef       	ldi	r18, 0xFF	; 255
     2d0:	8e e9       	ldi	r24, 0x9E	; 158
     2d2:	94 e2       	ldi	r25, 0x24	; 36
     2d4:	21 50       	subi	r18, 0x01	; 1
     2d6:	80 40       	sbci	r24, 0x00	; 0
     2d8:	90 40       	sbci	r25, 0x00	; 0
     2da:	e1 f7       	brne	.-8      	; 0x2d4 <BlinkDisplay+0x12>
     2dc:	00 c0       	rjmp	.+0      	; 0x2de <BlinkDisplay+0x1c>
     2de:	00 00       	nop
		_delay_ms(500);
		FillDisplay();
     2e0:	0e 94 44 01 	call	0x288	; 0x288 <FillDisplay>
     2e4:	2f ef       	ldi	r18, 0xFF	; 255
     2e6:	8e e9       	ldi	r24, 0x9E	; 158
     2e8:	94 e2       	ldi	r25, 0x24	; 36
     2ea:	21 50       	subi	r18, 0x01	; 1
     2ec:	80 40       	sbci	r24, 0x00	; 0
     2ee:	90 40       	sbci	r25, 0x00	; 0
     2f0:	e1 f7       	brne	.-8      	; 0x2ea <BlinkDisplay+0x28>
     2f2:	00 c0       	rjmp	.+0      	; 0x2f4 <BlinkDisplay+0x32>
     2f4:	00 00       	nop
     2f6:	c1 50       	subi	r28, 0x01	; 1
Output : none
Notes  :
============================================================================*/
void BlinkDisplay(uint8_t i)
{
	while (i--)
     2f8:	41 f7       	brne	.-48     	; 0x2ca <BlinkDisplay+0x8>
		ClearDisplay();
		_delay_ms(500);
		FillDisplay();
		_delay_ms(500);
	}
}
     2fa:	cf 91       	pop	r28
     2fc:	08 95       	ret

000002fe <LoadLedMatrix>:
Input  : none
Output : none
Notes  :
============================================================================*/
void LoadLedMatrix(void)
{
     2fe:	cf 93       	push	r28
     300:	df 93       	push	r29
     302:	af e3       	ldi	r26, 0x3F	; 63
     304:	b3 e4       	ldi	r27, 0x43	; 67
     306:	80 e7       	ldi	r24, 0x70	; 112
     308:	93 e4       	ldi	r25, 0x43	; 67
     30a:	fd 01       	movw	r30, r26
	static PosBits Col;
	//Clean Array
	for(uint8_t i=0; i<sizeof(LEDMatrix); i++)
	{
		*((uint8_t *)(&LEDMatrix[0][0] + i)) = 0;
     30c:	11 92       	st	Z+, r1
============================================================================*/
void LoadLedMatrix(void)
{
	static PosBits Col;
	//Clean Array
	for(uint8_t i=0; i<sizeof(LEDMatrix); i++)
     30e:	e8 17       	cp	r30, r24
     310:	f9 07       	cpc	r31, r25
     312:	e1 f7       	brne	.-8      	; 0x30c <LoadLedMatrix+0xe>
	{
		*((uint8_t *)(&LEDMatrix[0][0] + i)) = 0;
	}
	
	//Load New Array
	for(uint8_t i=0; i<Snake.Len; i++)
     314:	20 91 71 43 	lds	r18, 0x4371	; 0x804371 <Snake+0x1>
     318:	22 23       	and	r18, r18
     31a:	c1 f0       	breq	.+48     	; 0x34c <LoadLedMatrix+0x4e>
     31c:	c2 e7       	ldi	r28, 0x72	; 114
     31e:	d3 e4       	ldi	r29, 0x43	; 67
     320:	21 50       	subi	r18, 0x01	; 1
     322:	30 e0       	ldi	r19, 0x00	; 0
     324:	22 0f       	add	r18, r18
     326:	33 1f       	adc	r19, r19
     328:	2c 58       	subi	r18, 0x8C	; 140
     32a:	3c 4b       	sbci	r19, 0xBC	; 188
	{
		LEDMatrix[Snake.Pos[i][0]][Snake.Pos[i][1]] = 1;
     32c:	91 e0       	ldi	r25, 0x01	; 1
     32e:	e8 81       	ld	r30, Y
     330:	89 81       	ldd	r24, Y+1	; 0x01
     332:	47 e0       	ldi	r20, 0x07	; 7
     334:	e4 9f       	mul	r30, r20
     336:	f0 01       	movw	r30, r0
     338:	11 24       	eor	r1, r1
     33a:	e1 5c       	subi	r30, 0xC1	; 193
     33c:	fc 4b       	sbci	r31, 0xBC	; 188
     33e:	e8 0f       	add	r30, r24
     340:	f1 1d       	adc	r31, r1
     342:	90 83       	st	Z, r25
     344:	22 96       	adiw	r28, 0x02	; 2
	{
		*((uint8_t *)(&LEDMatrix[0][0] + i)) = 0;
	}
	
	//Load New Array
	for(uint8_t i=0; i<Snake.Len; i++)
     346:	c2 17       	cp	r28, r18
     348:	d3 07       	cpc	r29, r19
     34a:	89 f7       	brne	.-30     	; 0x32e <LoadLedMatrix+0x30>
	{
		LEDMatrix[Snake.Pos[i][0]][Snake.Pos[i][1]] = 1;
	}
	
	//Load Food
	LEDMatrix[Food.PosX][Food.PosY] = 1;
     34c:	c0 e1       	ldi	r28, 0x10	; 16
     34e:	d4 e4       	ldi	r29, 0x44	; 68
     350:	e8 81       	ld	r30, Y
     352:	89 81       	ldd	r24, Y+1	; 0x01
     354:	97 e0       	ldi	r25, 0x07	; 7
     356:	e9 02       	muls	r30, r25
     358:	f0 01       	movw	r30, r0
     35a:	11 24       	eor	r1, r1
     35c:	e1 5c       	subi	r30, 0xC1	; 193
     35e:	fc 4b       	sbci	r31, 0xBC	; 188
     360:	e8 0f       	add	r30, r24
     362:	f1 1d       	adc	r31, r1
     364:	87 fd       	sbrc	r24, 7
     366:	fa 95       	dec	r31
     368:	81 e0       	ldi	r24, 0x01	; 1
     36a:	80 83       	st	Z, r24
     36c:	e4 e0       	ldi	r30, 0x04	; 4
     36e:	f0 e4       	ldi	r31, 0x40	; 64
     370:	97 e0       	ldi	r25, 0x07	; 7
	
	//Put Data on I2C Array
	for(uint8_t i=0; i<7; i++)
	{
		Col.PBits.B0 = LEDMatrix[0][i];
     372:	80 91 3e 43 	lds	r24, 0x433E	; 0x80433e <__data_end>
     376:	2c 91       	ld	r18, X
     378:	20 fb       	bst	r18, 0
     37a:	80 f9       	bld	r24, 0
		Col.PBits.B1 = LEDMatrix[1][i];
     37c:	17 96       	adiw	r26, 0x07	; 7
     37e:	2c 91       	ld	r18, X
     380:	17 97       	sbiw	r26, 0x07	; 7
     382:	20 fb       	bst	r18, 0
     384:	81 f9       	bld	r24, 1
		Col.PBits.B2 = LEDMatrix[2][i];
     386:	1e 96       	adiw	r26, 0x0e	; 14
     388:	2c 91       	ld	r18, X
     38a:	1e 97       	sbiw	r26, 0x0e	; 14
     38c:	20 fb       	bst	r18, 0
     38e:	82 f9       	bld	r24, 2
		Col.PBits.B3 = LEDMatrix[3][i];
     390:	55 96       	adiw	r26, 0x15	; 21
     392:	2c 91       	ld	r18, X
     394:	55 97       	sbiw	r26, 0x15	; 21
     396:	20 fb       	bst	r18, 0
     398:	83 f9       	bld	r24, 3
		Col.PBits.B4 = LEDMatrix[4][i];
     39a:	5c 96       	adiw	r26, 0x1c	; 28
     39c:	2c 91       	ld	r18, X
     39e:	5c 97       	sbiw	r26, 0x1c	; 28
     3a0:	20 fb       	bst	r18, 0
     3a2:	84 f9       	bld	r24, 4
		Col.PBits.B5 = LEDMatrix[5][i];
     3a4:	93 96       	adiw	r26, 0x23	; 35
     3a6:	2c 91       	ld	r18, X
     3a8:	93 97       	sbiw	r26, 0x23	; 35
     3aa:	20 fb       	bst	r18, 0
     3ac:	85 f9       	bld	r24, 5
		Col.PBits.B6 = LEDMatrix[6][i];
     3ae:	9a 96       	adiw	r26, 0x2a	; 42
     3b0:	2c 91       	ld	r18, X
     3b2:	9a 97       	sbiw	r26, 0x2a	; 42
     3b4:	20 fb       	bst	r18, 0
     3b6:	86 f9       	bld	r24, 6
     3b8:	80 93 3e 43 	sts	0x433E, r24	; 0x80433e <__data_end>
		I2CArray[i][1] = Col.PByte;
     3bc:	81 83       	std	Z+1, r24	; 0x01
     3be:	91 50       	subi	r25, 0x01	; 1
     3c0:	11 96       	adiw	r26, 0x01	; 1
     3c2:	32 96       	adiw	r30, 0x02	; 2
	
	//Load Food
	LEDMatrix[Food.PosX][Food.PosY] = 1;
	
	//Put Data on I2C Array
	for(uint8_t i=0; i<7; i++)
     3c4:	91 11       	cpse	r25, r1
     3c6:	d5 cf       	rjmp	.-86     	; 0x372 <LoadLedMatrix+0x74>
		Col.PBits.B4 = LEDMatrix[4][i];
		Col.PBits.B5 = LEDMatrix[5][i];
		Col.PBits.B6 = LEDMatrix[6][i];
		I2CArray[i][1] = Col.PByte;
	}
}
     3c8:	df 91       	pop	r29
     3ca:	cf 91       	pop	r28
     3cc:	08 95       	ret

000003ce <main>:


int main(void)
{
	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
     3ce:	0e 94 97 00 	call	0x12e	; 0x12e <atmel_start_init>
	
	BlinkDisplay(5);
     3d2:	85 e0       	ldi	r24, 0x05	; 5
     3d4:	0e 94 61 01 	call	0x2c2	; 0x2c2 <BlinkDisplay>
	SnakeInit();
     3d8:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <SnakeInit>
Notes  :
============================================================================*/
static void CheckTouchInput(void)
{
	//Decode touch Swipes
	if ((qtm_gestures_2d_control1.qtm_gestures_2d_data->gestures_which_gesture & 0xf0) == RIGHT_SWIPE)
     3dc:	0f 2e       	mov	r0, r31
     3de:	f7 e3       	ldi	r31, 0x37	; 55
     3e0:	cf 2e       	mov	r12, r31
     3e2:	f0 e4       	ldi	r31, 0x40	; 64
     3e4:	df 2e       	mov	r13, r31
     3e6:	f0 2d       	mov	r31, r0
	{
		Flags.SwUp = 1;
	}
	else if ((qtm_gestures_2d_control1.qtm_gestures_2d_data->gestures_which_gesture & 0xf0) == DOWN_SWIPE)
	{
		Flags.SwDown = 1;
     3e8:	c1 e8       	ldi	r28, 0x81	; 129
     3ea:	d4 e4       	ldi	r29, 0x44	; 68
	}
	
	//Give Snake commands depending on touch swipes
	if(Flags.SwUp)
	{
		if(Snake.Dir != DOWN)
     3ec:	0f 2e       	mov	r0, r31
     3ee:	f0 e7       	ldi	r31, 0x70	; 112
     3f0:	ef 2e       	mov	r14, r31
     3f2:	f3 e4       	ldi	r31, 0x43	; 67
     3f4:	ff 2e       	mov	r15, r31
     3f6:	f0 2d       	mov	r31, r0
	
	if(Flags.SwDown)
	{
		if(Snake.Dir != UP)
		{
			Snake.Dir = DOWN;
     3f8:	99 24       	eor	r9, r9
     3fa:	93 94       	inc	r9
	
	if(Flags.SwLeft)
	{
		if(Snake.Dir != RIGHT)
		{
			Snake.Dir = LEFT;
     3fc:	68 94       	set
     3fe:	bb 24       	eor	r11, r11
     400:	b1 f8       	bld	r11, 1
	
	if(Flags.SwRight)
	{
		if(Snake.Dir != LEFT)
		{
			Snake.Dir = RIGHT;
     402:	0f 2e       	mov	r0, r31
     404:	f3 e0       	ldi	r31, 0x03	; 3
     406:	af 2e       	mov	r10, r31
     408:	f0 2d       	mov	r31, r0
		//Process touch data
		touch_process();
		CheckTouchInput();
		qtm_gestures_2d_clearGesture();
		//1 sec time scheduler
		if(Flags.MCUSleep == 0)
     40a:	02 e8       	ldi	r16, 0x82	; 130
     40c:	14 e4       	ldi	r17, 0x44	; 68
	
	if(Flags.SwLeft)
	{
		if(Snake.Dir != RIGHT)
		{
			Snake.Dir = LEFT;
     40e:	8b 2c       	mov	r8, r11
	
	/* Replace with your application code */
	while (1) 
	{
		//Process touch data
		touch_process();
     410:	0e 94 4b 07 	call	0xe96	; 0xe96 <touch_process>
Notes  :
============================================================================*/
static void CheckTouchInput(void)
{
	//Decode touch Swipes
	if ((qtm_gestures_2d_control1.qtm_gestures_2d_data->gestures_which_gesture & 0xf0) == RIGHT_SWIPE)
     414:	d6 01       	movw	r26, r12
     416:	ed 91       	ld	r30, X+
     418:	fc 91       	ld	r31, X
     41a:	81 81       	ldd	r24, Z+1	; 0x01
     41c:	80 7f       	andi	r24, 0xF0	; 240
     41e:	80 31       	cpi	r24, 0x10	; 16
     420:	21 f4       	brne	.+8      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
	{
		Flags.SwRight = 1;
     422:	88 81       	ld	r24, Y
     424:	80 61       	ori	r24, 0x10	; 16
     426:	88 83       	st	Y, r24
     428:	11 c0       	rjmp	.+34     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
	}
	else if ((qtm_gestures_2d_control1.qtm_gestures_2d_data->gestures_which_gesture & 0xf0) == LEFT_SWIPE)
     42a:	80 32       	cpi	r24, 0x20	; 32
     42c:	21 f4       	brne	.+8      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
	{
		Flags.SwLeft = 1;
     42e:	88 81       	ld	r24, Y
     430:	88 60       	ori	r24, 0x08	; 8
     432:	88 83       	st	Y, r24
     434:	0b c0       	rjmp	.+22     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
	}
	else if ((qtm_gestures_2d_control1.qtm_gestures_2d_data->gestures_which_gesture & 0xf0) == UP_SWIPE)
     436:	80 33       	cpi	r24, 0x30	; 48
     438:	21 f4       	brne	.+8      	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
	{
		Flags.SwUp = 1;
     43a:	88 81       	ld	r24, Y
     43c:	80 62       	ori	r24, 0x20	; 32
     43e:	88 83       	st	Y, r24
     440:	05 c0       	rjmp	.+10     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
	}
	else if ((qtm_gestures_2d_control1.qtm_gestures_2d_data->gestures_which_gesture & 0xf0) == DOWN_SWIPE)
     442:	80 34       	cpi	r24, 0x40	; 64
     444:	19 f4       	brne	.+6      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
	{
		Flags.SwDown = 1;
     446:	88 81       	ld	r24, Y
     448:	80 64       	ori	r24, 0x40	; 64
     44a:	88 83       	st	Y, r24
	{
		//Flags.Tap = 1;
	}
	
	//Give Snake commands depending on touch swipes
	if(Flags.SwUp)
     44c:	88 81       	ld	r24, Y
     44e:	85 ff       	sbrs	r24, 5
     450:	08 c0       	rjmp	.+16     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
	{
		if(Snake.Dir != DOWN)
     452:	f7 01       	movw	r30, r14
     454:	80 81       	ld	r24, Z
     456:	81 30       	cpi	r24, 0x01	; 1
     458:	09 f0       	breq	.+2      	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
		{
			Snake.Dir = UP;
     45a:	10 82       	st	Z, r1
		}
		Flags.SwUp = 0;
     45c:	88 81       	ld	r24, Y
     45e:	8f 7d       	andi	r24, 0xDF	; 223
     460:	88 83       	st	Y, r24
	}
	
	if(Flags.SwDown)
     462:	88 81       	ld	r24, Y
     464:	86 ff       	sbrs	r24, 6
     466:	07 c0       	rjmp	.+14     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
	{
		if(Snake.Dir != UP)
     468:	d7 01       	movw	r26, r14
     46a:	8c 91       	ld	r24, X
     46c:	81 11       	cpse	r24, r1
		{
			Snake.Dir = DOWN;
     46e:	9c 92       	st	X, r9
		}
		Flags.SwDown = 0;
     470:	88 81       	ld	r24, Y
     472:	8f 7b       	andi	r24, 0xBF	; 191
     474:	88 83       	st	Y, r24
	}
	
	if(Flags.SwLeft)
     476:	88 81       	ld	r24, Y
     478:	83 ff       	sbrs	r24, 3
     47a:	08 c0       	rjmp	.+16     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
	{
		if(Snake.Dir != RIGHT)
     47c:	f7 01       	movw	r30, r14
     47e:	80 81       	ld	r24, Z
     480:	83 30       	cpi	r24, 0x03	; 3
     482:	09 f0       	breq	.+2      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
		{
			Snake.Dir = LEFT;
     484:	b0 82       	st	Z, r11
		}
		Flags.SwLeft = 0;
     486:	88 81       	ld	r24, Y
     488:	87 7f       	andi	r24, 0xF7	; 247
     48a:	88 83       	st	Y, r24
	}
	
	if(Flags.SwRight)
     48c:	88 81       	ld	r24, Y
     48e:	84 ff       	sbrs	r24, 4
     490:	08 c0       	rjmp	.+16     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
	{
		if(Snake.Dir != LEFT)
     492:	d7 01       	movw	r26, r14
     494:	8c 91       	ld	r24, X
     496:	82 30       	cpi	r24, 0x02	; 2
     498:	09 f0       	breq	.+2      	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
		{
			Snake.Dir = RIGHT;
     49a:	ac 92       	st	X, r10
		}
		Flags.SwRight = 0;
     49c:	88 81       	ld	r24, Y
     49e:	8f 7e       	andi	r24, 0xEF	; 239
     4a0:	88 83       	st	Y, r24
	while (1) 
	{
		//Process touch data
		touch_process();
		CheckTouchInput();
		qtm_gestures_2d_clearGesture();
     4a2:	0e 94 36 13 	call	0x266c	; 0x266c <qtm_gestures_2d_clearGesture>
		//1 sec time scheduler
		if(Flags.MCUSleep == 0)
     4a6:	f8 01       	movw	r30, r16
     4a8:	80 81       	ld	r24, Z
     4aa:	82 fd       	sbrc	r24, 2
     4ac:	1e c0       	rjmp	.+60     	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
		{
			if((Flags.Scheduler1s)&&(!Flags.GameOver))
     4ae:	88 81       	ld	r24, Y
     4b0:	80 ff       	sbrs	r24, 0
     4b2:	10 c0       	rjmp	.+32     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
     4b4:	88 81       	ld	r24, Y
     4b6:	81 fd       	sbrc	r24, 1
     4b8:	0d c0       	rjmp	.+26     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
			{
				AdvanceSnake();
     4ba:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <AdvanceSnake>
				LoadLedMatrix();
     4be:	0e 94 7f 01 	call	0x2fe	; 0x2fe <LoadLedMatrix>
				UpdateDisplay(I2C_ADD, I2CArray, 18);
     4c2:	42 e1       	ldi	r20, 0x12	; 18
     4c4:	64 e0       	ldi	r22, 0x04	; 4
     4c6:	70 e4       	ldi	r23, 0x40	; 64
     4c8:	80 e6       	ldi	r24, 0x60	; 96
     4ca:	0e 94 19 01 	call	0x232	; 0x232 <UpdateDisplay>
				Flags.Scheduler1s = 0;
     4ce:	88 81       	ld	r24, Y
     4d0:	8e 7f       	andi	r24, 0xFE	; 254
     4d2:	88 83       	st	Y, r24
			}
			if(Flags.GameOver)
     4d4:	88 81       	ld	r24, Y
     4d6:	81 ff       	sbrs	r24, 1
     4d8:	08 c0       	rjmp	.+16     	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
			{
				BlinkDisplay(2);
     4da:	88 2d       	mov	r24, r8
     4dc:	0e 94 61 01 	call	0x2c2	; 0x2c2 <BlinkDisplay>
				SnakeInit();
     4e0:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <SnakeInit>
				Flags.GameOver = 0;
     4e4:	88 81       	ld	r24, Y
     4e6:	8d 7f       	andi	r24, 0xFD	; 253
     4e8:	88 83       	st	Y, r24
			}
		}
		if(Flags.Sleep)
     4ea:	d8 01       	movw	r26, r16
     4ec:	8c 91       	ld	r24, X
     4ee:	80 ff       	sbrs	r24, 0
     4f0:	09 c0       	rjmp	.+18     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
		{
			ClearDisplay();
     4f2:	0e 94 27 01 	call	0x24e	; 0x24e <ClearDisplay>
			Flags.MCUSleep = 1;
     4f6:	f8 01       	movw	r30, r16
     4f8:	80 81       	ld	r24, Z
     4fa:	84 60       	ori	r24, 0x04	; 4
     4fc:	80 83       	st	Z, r24
			Flags.Sleep = 0;
     4fe:	80 81       	ld	r24, Z
     500:	8e 7f       	andi	r24, 0xFE	; 254
     502:	80 83       	st	Z, r24
		}
		if(Flags.WakeUp)
     504:	d8 01       	movw	r26, r16
     506:	8c 91       	ld	r24, X
     508:	81 ff       	sbrs	r24, 1
     50a:	82 cf       	rjmp	.-252    	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
		{
			BlinkDisplay(2);
     50c:	8b 2d       	mov	r24, r11
     50e:	0e 94 61 01 	call	0x2c2	; 0x2c2 <BlinkDisplay>
			SnakeInit();
     512:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <SnakeInit>
			Flags.WakeUp = 0;
     516:	f8 01       	movw	r30, r16
     518:	80 81       	ld	r24, Z
     51a:	8d 7f       	andi	r24, 0xFD	; 253
     51c:	80 83       	st	Z, r24
			Flags.MCUSleep = 0;
     51e:	80 81       	ld	r24, Z
     520:	8b 7f       	andi	r24, 0xFB	; 251
     522:	80 83       	st	Z, r24
     524:	75 cf       	rjmp	.-278    	; 0x410 <__LOCK_REGION_LENGTH__+0x10>

00000526 <TimeSchedulerHandler>:
Output : none
Notes  :
============================================================================*/
void TimeSchedulerHandler(void)
{	
	if(TimCount++ >= 25)
     526:	80 91 80 44 	lds	r24, 0x4480	; 0x804480 <TimCount>
     52a:	91 e0       	ldi	r25, 0x01	; 1
     52c:	98 0f       	add	r25, r24
     52e:	90 93 80 44 	sts	0x4480, r25	; 0x804480 <TimCount>
     532:	89 31       	cpi	r24, 0x19	; 25
     534:	38 f0       	brcs	.+14     	; 0x544 <TimeSchedulerHandler+0x1e>
	{
		Flags.Scheduler1s = 1;
     536:	e1 e8       	ldi	r30, 0x81	; 129
     538:	f4 e4       	ldi	r31, 0x44	; 68
     53a:	80 81       	ld	r24, Z
     53c:	81 60       	ori	r24, 0x01	; 1
     53e:	80 83       	st	Z, r24
		TimCount = 0;
     540:	10 92 80 44 	sts	0x4480, r1	; 0x804480 <TimCount>
     544:	08 95       	ret

00000546 <Krono_UpdateBuffer>:
void SetIRQPin(void)
{
}

void ClearIRQPin(void)
{
     546:	0f 93       	push	r16
     548:	1f 93       	push	r17
     54a:	cf 93       	push	r28
     54c:	df 93       	push	r29
     54e:	80 91 d6 43 	lds	r24, 0x43D6	; 0x8043d6 <initialized.5667>
     552:	81 11       	cpse	r24, r1
     554:	18 c0       	rjmp	.+48     	; 0x586 <Krono_UpdateBuffer+0x40>
     556:	ec e2       	ldi	r30, 0x2C	; 44
     558:	f0 e4       	ldi	r31, 0x40	; 64
     55a:	81 e0       	ldi	r24, 0x01	; 1
     55c:	90 e0       	ldi	r25, 0x00	; 0
     55e:	00 90 02 41 	lds	r0, 0x4102	; 0x804102 <ptc_seq_node_cfg1+0x63>
     562:	02 c0       	rjmp	.+4      	; 0x568 <Krono_UpdateBuffer+0x22>
     564:	88 0f       	add	r24, r24
     566:	99 1f       	adc	r25, r25
     568:	0a 94       	dec	r0
     56a:	e2 f7       	brpl	.-8      	; 0x564 <Krono_UpdateBuffer+0x1e>
     56c:	82 83       	std	Z+2, r24	; 0x02
     56e:	ae e6       	ldi	r26, 0x6E	; 110
     570:	b0 e4       	ldi	r27, 0x40	; 64
     572:	1c 96       	adiw	r26, 0x0c	; 12
     574:	8c 91       	ld	r24, X
     576:	1c 97       	sbiw	r26, 0x0c	; 12
     578:	83 83       	std	Z+3, r24	; 0x03
     57a:	8c 91       	ld	r24, X
     57c:	84 83       	std	Z+4, r24	; 0x04
     57e:	81 e0       	ldi	r24, 0x01	; 1
     580:	80 93 d6 43 	sts	0x43D6, r24	; 0x8043d6 <initialized.5667>
     584:	ac c0       	rjmp	.+344    	; 0x6de <Krono_UpdateBuffer+0x198>
     586:	80 91 05 44 	lds	r24, 0x4405	; 0x804405 <writeback_req>
     58a:	88 23       	and	r24, r24
     58c:	09 f4       	brne	.+2      	; 0x590 <Krono_UpdateBuffer+0x4a>
     58e:	a7 c0       	rjmp	.+334    	; 0x6de <Krono_UpdateBuffer+0x198>
     590:	80 91 2e 40 	lds	r24, 0x402E	; 0x80402e <cfgRam+0x2>
     594:	48 2f       	mov	r20, r24
     596:	50 e0       	ldi	r21, 0x00	; 0
     598:	21 e0       	ldi	r18, 0x01	; 1
     59a:	30 e0       	ldi	r19, 0x00	; 0
     59c:	00 90 02 41 	lds	r0, 0x4102	; 0x804102 <ptc_seq_node_cfg1+0x63>
     5a0:	02 c0       	rjmp	.+4      	; 0x5a6 <Krono_UpdateBuffer+0x60>
     5a2:	22 0f       	add	r18, r18
     5a4:	33 1f       	adc	r19, r19
     5a6:	0a 94       	dec	r0
     5a8:	e2 f7       	brpl	.-8      	; 0x5a2 <Krono_UpdateBuffer+0x5c>
     5aa:	33 27       	eor	r19, r19
     5ac:	42 17       	cp	r20, r18
     5ae:	53 07       	cpc	r21, r19
     5b0:	09 f4       	brne	.+2      	; 0x5b4 <Krono_UpdateBuffer+0x6e>
     5b2:	39 c1       	rjmp	.+626    	; 0x826 <Krono_UpdateBuffer+0x2e0>
     5b4:	47 e0       	ldi	r20, 0x07	; 7
     5b6:	50 e0       	ldi	r21, 0x00	; 0
     5b8:	90 e0       	ldi	r25, 0x00	; 0
     5ba:	61 e0       	ldi	r22, 0x01	; 1
     5bc:	70 e0       	ldi	r23, 0x00	; 0
     5be:	9b 01       	movw	r18, r22
     5c0:	04 2e       	mov	r0, r20
     5c2:	02 c0       	rjmp	.+4      	; 0x5c8 <Krono_UpdateBuffer+0x82>
     5c4:	22 0f       	add	r18, r18
     5c6:	33 1f       	adc	r19, r19
     5c8:	0a 94       	dec	r0
     5ca:	e2 f7       	brpl	.-8      	; 0x5c4 <Krono_UpdateBuffer+0x7e>
     5cc:	28 23       	and	r18, r24
     5ce:	19 f0       	breq	.+6      	; 0x5d6 <Krono_UpdateBuffer+0x90>
     5d0:	87 e0       	ldi	r24, 0x07	; 7
     5d2:	89 1b       	sub	r24, r25
     5d4:	05 c0       	rjmp	.+10     	; 0x5e0 <Krono_UpdateBuffer+0x9a>
     5d6:	9f 5f       	subi	r25, 0xFF	; 255
     5d8:	41 50       	subi	r20, 0x01	; 1
     5da:	51 09       	sbc	r21, r1
     5dc:	98 30       	cpi	r25, 0x08	; 8
     5de:	79 f7       	brne	.-34     	; 0x5be <Krono_UpdateBuffer+0x78>
     5e0:	87 30       	cpi	r24, 0x07	; 7
     5e2:	08 f0       	brcs	.+2      	; 0x5e6 <Krono_UpdateBuffer+0xa0>
     5e4:	86 e0       	ldi	r24, 0x06	; 6
     5e6:	cc e2       	ldi	r28, 0x2C	; 44
     5e8:	d0 e4       	ldi	r29, 0x40	; 64
     5ea:	91 e0       	ldi	r25, 0x01	; 1
     5ec:	08 2e       	mov	r0, r24
     5ee:	01 c0       	rjmp	.+2      	; 0x5f2 <Krono_UpdateBuffer+0xac>
     5f0:	99 0f       	add	r25, r25
     5f2:	0a 94       	dec	r0
     5f4:	ea f7       	brpl	.-6      	; 0x5f0 <Krono_UpdateBuffer+0xaa>
     5f6:	9a 83       	std	Y+2, r25	; 0x02
     5f8:	ef e9       	ldi	r30, 0x9F	; 159
     5fa:	f0 e4       	ldi	r31, 0x40	; 64
     5fc:	80 93 02 41 	sts	0x4102, r24	; 0x804102 <ptc_seq_node_cfg1+0x63>
     600:	80 93 16 41 	sts	0x4116, r24	; 0x804116 <ptc_seq_node_cfg1+0x77>
     604:	80 93 2a 41 	sts	0x412A, r24	; 0x80412a <ptc_seq_node_cfg1+0x8b>
     608:	80 93 3e 41 	sts	0x413E, r24	; 0x80413e <ptc_seq_node_cfg1+0x9f>
     60c:	83 8b       	std	Z+19, r24	; 0x13
     60e:	87 a3       	std	Z+39, r24	; 0x27
     610:	83 af       	std	Z+59, r24	; 0x3b
     612:	80 93 ee 40 	sts	0x40EE, r24	; 0x8040ee <ptc_seq_node_cfg1+0x4f>
     616:	0e 94 a4 06 	call	0xd48	; 0xd48 <touch_init>
     61a:	8b 81       	ldd	r24, Y+3	; 0x03
     61c:	90 91 7a 40 	lds	r25, 0x407A	; 0x80407a <qtlib_key_configs_set1+0xc>
     620:	89 17       	cp	r24, r25
     622:	09 f4       	brne	.+2      	; 0x626 <Krono_UpdateBuffer+0xe0>
     624:	07 c1       	rjmp	.+526    	; 0x834 <Krono_UpdateBuffer+0x2ee>
     626:	ee e6       	ldi	r30, 0x6E	; 110
     628:	f0 e4       	ldi	r31, 0x40	; 64
     62a:	84 87       	std	Z+12, r24	; 0x0c
     62c:	87 87       	std	Z+15, r24	; 0x0f
     62e:	82 8b       	std	Z+18, r24	; 0x12
     630:	85 8b       	std	Z+21, r24	; 0x15
     632:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <cfgRam+0x4>
     636:	90 91 6e 40 	lds	r25, 0x406E	; 0x80406e <qtlib_key_configs_set1>
     63a:	89 17       	cp	r24, r25
     63c:	31 f0       	breq	.+12     	; 0x64a <Krono_UpdateBuffer+0x104>
     63e:	ee e6       	ldi	r30, 0x6E	; 110
     640:	f0 e4       	ldi	r31, 0x40	; 64
     642:	80 83       	st	Z, r24
     644:	83 83       	std	Z+3, r24	; 0x03
     646:	86 83       	std	Z+6, r24	; 0x06
     648:	81 87       	std	Z+9, r24	; 0x09
     64a:	80 91 35 40 	lds	r24, 0x4035	; 0x804035 <cfgRam+0x9>
     64e:	e0 91 57 40 	lds	r30, 0x4057	; 0x804057 <qtm_surface_cs_control1+0x2>
     652:	f0 91 58 40 	lds	r31, 0x4058	; 0x804058 <qtm_surface_cs_control1+0x3>
     656:	96 81       	ldd	r25, Z+6	; 0x06
     658:	29 2f       	mov	r18, r25
     65a:	22 95       	swap	r18
     65c:	2f 70       	andi	r18, 0x0F	; 15
     65e:	82 17       	cp	r24, r18
     660:	29 f0       	breq	.+10     	; 0x66c <Krono_UpdateBuffer+0x126>
     662:	9f 70       	andi	r25, 0x0F	; 15
     664:	82 95       	swap	r24
     666:	80 7f       	andi	r24, 0xF0	; 240
     668:	89 2b       	or	r24, r25
     66a:	86 83       	std	Z+6, r24	; 0x06
     66c:	e0 91 39 40 	lds	r30, 0x4039	; 0x804039 <qtm_gestures_2d_control1+0x2>
     670:	f0 91 3a 40 	lds	r31, 0x403A	; 0x80403a <qtm_gestures_2d_control1+0x3>
     674:	ae e1       	ldi	r26, 0x1E	; 30
     676:	b0 e4       	ldi	r27, 0x40	; 64
     678:	8c 91       	ld	r24, X
     67a:	85 87       	std	Z+13, r24	; 0x0d
     67c:	11 96       	adiw	r26, 0x01	; 1
     67e:	8c 91       	ld	r24, X
     680:	11 97       	sbiw	r26, 0x01	; 1
     682:	86 87       	std	Z+14, r24	; 0x0e
     684:	12 96       	adiw	r26, 0x02	; 2
     686:	8c 91       	ld	r24, X
     688:	12 97       	sbiw	r26, 0x02	; 2
     68a:	87 87       	std	Z+15, r24	; 0x0f
     68c:	13 96       	adiw	r26, 0x03	; 3
     68e:	8c 91       	ld	r24, X
     690:	13 97       	sbiw	r26, 0x03	; 3
     692:	80 8b       	std	Z+16, r24	; 0x10
     694:	14 96       	adiw	r26, 0x04	; 4
     696:	8c 91       	ld	r24, X
     698:	14 97       	sbiw	r26, 0x04	; 4
     69a:	81 8b       	std	Z+17, r24	; 0x11
     69c:	15 96       	adiw	r26, 0x05	; 5
     69e:	8c 91       	ld	r24, X
     6a0:	15 97       	sbiw	r26, 0x05	; 5
     6a2:	82 8b       	std	Z+18, r24	; 0x12
     6a4:	16 96       	adiw	r26, 0x06	; 6
     6a6:	8c 91       	ld	r24, X
     6a8:	16 97       	sbiw	r26, 0x06	; 6
     6aa:	83 8b       	std	Z+19, r24	; 0x13
     6ac:	17 96       	adiw	r26, 0x07	; 7
     6ae:	8c 91       	ld	r24, X
     6b0:	17 97       	sbiw	r26, 0x07	; 7
     6b2:	84 8b       	std	Z+20, r24	; 0x14
     6b4:	18 96       	adiw	r26, 0x08	; 8
     6b6:	8c 91       	ld	r24, X
     6b8:	18 97       	sbiw	r26, 0x08	; 8
     6ba:	85 8b       	std	Z+21, r24	; 0x15
     6bc:	19 96       	adiw	r26, 0x09	; 9
     6be:	8c 91       	ld	r24, X
     6c0:	19 97       	sbiw	r26, 0x09	; 9
     6c2:	86 8b       	std	Z+22, r24	; 0x16
     6c4:	1a 96       	adiw	r26, 0x0a	; 10
     6c6:	8c 91       	ld	r24, X
     6c8:	1a 97       	sbiw	r26, 0x0a	; 10
     6ca:	87 8b       	std	Z+23, r24	; 0x17
     6cc:	1b 96       	adiw	r26, 0x0b	; 11
     6ce:	8c 91       	ld	r24, X
     6d0:	1b 97       	sbiw	r26, 0x0b	; 11
     6d2:	80 8f       	std	Z+24, r24	; 0x18
     6d4:	1c 96       	adiw	r26, 0x0c	; 12
     6d6:	8c 91       	ld	r24, X
     6d8:	81 8f       	std	Z+25, r24	; 0x19
     6da:	10 92 05 44 	sts	0x4405, r1	; 0x804405 <writeback_req>
     6de:	af ef       	ldi	r26, 0xFF	; 255
     6e0:	b3 e4       	ldi	r27, 0x43	; 67
     6e2:	e9 e8       	ldi	r30, 0x89	; 137
     6e4:	f5 e4       	ldi	r31, 0x45	; 69
     6e6:	82 81       	ldd	r24, Z+2	; 0x02
     6e8:	15 96       	adiw	r26, 0x05	; 5
     6ea:	8c 93       	st	X, r24
     6ec:	15 97       	sbiw	r26, 0x05	; 5
     6ee:	81 81       	ldd	r24, Z+1	; 0x01
     6f0:	14 96       	adiw	r26, 0x04	; 4
     6f2:	8c 93       	st	X, r24
     6f4:	14 97       	sbiw	r26, 0x04	; 4
     6f6:	1c 92       	st	X, r1
     6f8:	80 81       	ld	r24, Z
     6fa:	88 23       	and	r24, r24
     6fc:	19 f0       	breq	.+6      	; 0x704 <Krono_UpdateBuffer+0x1be>
     6fe:	82 e0       	ldi	r24, 0x02	; 2
     700:	80 93 ff 43 	sts	0x43FF, r24	; 0x8043ff <touchRam>
     704:	e0 91 55 40 	lds	r30, 0x4055	; 0x804055 <qtm_surface_cs_control1>
     708:	f0 91 56 40 	lds	r31, 0x4056	; 0x804056 <qtm_surface_cs_control1+0x1>
     70c:	80 81       	ld	r24, Z
     70e:	80 ff       	sbrs	r24, 0
     710:	06 c0       	rjmp	.+12     	; 0x71e <Krono_UpdateBuffer+0x1d8>
     712:	ef ef       	ldi	r30, 0xFF	; 255
     714:	f3 e4       	ldi	r31, 0x43	; 67
     716:	80 81       	ld	r24, Z
     718:	81 60       	ori	r24, 0x01	; 1
     71a:	80 83       	st	Z, r24
     71c:	05 c0       	rjmp	.+10     	; 0x728 <Krono_UpdateBuffer+0x1e2>
     71e:	ef ef       	ldi	r30, 0xFF	; 255
     720:	f3 e4       	ldi	r31, 0x43	; 67
     722:	80 81       	ld	r24, Z
     724:	8e 7f       	andi	r24, 0xFE	; 254
     726:	80 83       	st	Z, r24
     728:	80 91 d5 43 	lds	r24, 0x43D5	; 0x8043d5 <frameCount.5668>
     72c:	ef ef       	ldi	r30, 0xFF	; 255
     72e:	f3 e4       	ldi	r31, 0x43	; 67
     730:	90 81       	ld	r25, Z
     732:	98 2b       	or	r25, r24
     734:	90 83       	st	Z, r25
     736:	80 5f       	subi	r24, 0xF0	; 240
     738:	80 93 d5 43 	sts	0x43D5, r24	; 0x8043d5 <frameCount.5668>
     73c:	ab e3       	ldi	r26, 0x3B	; 59
     73e:	b0 e4       	ldi	r27, 0x40	; 64
     740:	cd 91       	ld	r28, X+
     742:	dc 91       	ld	r29, X
     744:	11 97       	sbiw	r26, 0x01	; 1
     746:	28 81       	ld	r18, Y
     748:	39 81       	ldd	r19, Y+1	; 0x01
     74a:	c9 01       	movw	r24, r18
     74c:	92 95       	swap	r25
     74e:	82 95       	swap	r24
     750:	8f 70       	andi	r24, 0x0F	; 15
     752:	89 27       	eor	r24, r25
     754:	9f 70       	andi	r25, 0x0F	; 15
     756:	89 27       	eor	r24, r25
     758:	81 83       	std	Z+1, r24	; 0x01
     75a:	12 96       	adiw	r26, 0x02	; 2
     75c:	0d 90       	ld	r0, X+
     75e:	bc 91       	ld	r27, X
     760:	a0 2d       	mov	r26, r0
     762:	8d 91       	ld	r24, X+
     764:	9c 91       	ld	r25, X
     766:	ac 01       	movw	r20, r24
     768:	52 95       	swap	r21
     76a:	42 95       	swap	r20
     76c:	4f 70       	andi	r20, 0x0F	; 15
     76e:	45 27       	eor	r20, r21
     770:	5f 70       	andi	r21, 0x0F	; 15
     772:	45 27       	eor	r20, r21
     774:	42 83       	std	Z+2, r20	; 0x02
     776:	22 95       	swap	r18
     778:	20 7f       	andi	r18, 0xF0	; 240
     77a:	8f 70       	andi	r24, 0x0F	; 15
     77c:	82 2b       	or	r24, r18
     77e:	83 83       	std	Z+3, r24	; 0x03
     780:	27 ef       	ldi	r18, 0xF7	; 247
     782:	33 e4       	ldi	r19, 0x43	; 67
     784:	e6 e7       	ldi	r30, 0x76	; 118
     786:	f5 e4       	ldi	r31, 0x45	; 69
     788:	c7 ee       	ldi	r28, 0xE7	; 231
     78a:	d3 e4       	ldi	r29, 0x43	; 67
     78c:	07 ed       	ldi	r16, 0xD7	; 215
     78e:	13 e4       	ldi	r17, 0x43	; 67
     790:	80 e0       	ldi	r24, 0x00	; 0
     792:	84 30       	cpi	r24, 0x04	; 4
     794:	b8 f4       	brcc	.+46     	; 0x7c4 <Krono_UpdateBuffer+0x27e>
     796:	40 a9       	ldd	r20, Z+48	; 0x30
     798:	51 a9       	ldd	r21, Z+49	; 0x31
     79a:	da 01       	movw	r26, r20
     79c:	11 96       	adiw	r26, 0x01	; 1
     79e:	4d 91       	ld	r20, X+
     7a0:	5c 91       	ld	r21, X
     7a2:	12 97       	sbiw	r26, 0x02	; 2
     7a4:	48 83       	st	Y, r20
     7a6:	59 83       	std	Y+1, r21	; 0x01
     7a8:	62 a9       	ldd	r22, Z+50	; 0x32
     7aa:	73 a9       	ldd	r23, Z+51	; 0x33
     7ac:	d8 01       	movw	r26, r16
     7ae:	6d 93       	st	X+, r22
     7b0:	7c 93       	st	X, r23
     7b2:	64 17       	cp	r22, r20
     7b4:	75 07       	cpc	r23, r21
     7b6:	10 f4       	brcc	.+4      	; 0x7bc <Krono_UpdateBuffer+0x276>
     7b8:	46 1b       	sub	r20, r22
     7ba:	01 c0       	rjmp	.+2      	; 0x7be <Krono_UpdateBuffer+0x278>
     7bc:	40 e0       	ldi	r20, 0x00	; 0
     7be:	d9 01       	movw	r26, r18
     7c0:	4c 93       	st	X, r20
     7c2:	16 c0       	rjmp	.+44     	; 0x7f0 <Krono_UpdateBuffer+0x2aa>
     7c4:	40 81       	ld	r20, Z
     7c6:	51 81       	ldd	r21, Z+1	; 0x01
     7c8:	da 01       	movw	r26, r20
     7ca:	11 96       	adiw	r26, 0x01	; 1
     7cc:	4d 91       	ld	r20, X+
     7ce:	5c 91       	ld	r21, X
     7d0:	12 97       	sbiw	r26, 0x02	; 2
     7d2:	48 83       	st	Y, r20
     7d4:	59 83       	std	Y+1, r21	; 0x01
     7d6:	62 81       	ldd	r22, Z+2	; 0x02
     7d8:	73 81       	ldd	r23, Z+3	; 0x03
     7da:	d8 01       	movw	r26, r16
     7dc:	6d 93       	st	X+, r22
     7de:	7c 93       	st	X, r23
     7e0:	64 17       	cp	r22, r20
     7e2:	75 07       	cpc	r23, r21
     7e4:	10 f4       	brcc	.+4      	; 0x7ea <Krono_UpdateBuffer+0x2a4>
     7e6:	46 1b       	sub	r20, r22
     7e8:	01 c0       	rjmp	.+2      	; 0x7ec <Krono_UpdateBuffer+0x2a6>
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	d9 01       	movw	r26, r18
     7ee:	4c 93       	st	X, r20
     7f0:	8f 5f       	subi	r24, 0xFF	; 255
     7f2:	2f 5f       	subi	r18, 0xFF	; 255
     7f4:	3f 4f       	sbci	r19, 0xFF	; 255
     7f6:	36 96       	adiw	r30, 0x06	; 6
     7f8:	22 96       	adiw	r28, 0x02	; 2
     7fa:	0e 5f       	subi	r16, 0xFE	; 254
     7fc:	1f 4f       	sbci	r17, 0xFF	; 255
     7fe:	88 30       	cpi	r24, 0x08	; 8
     800:	41 f6       	brne	.-112    	; 0x792 <Krono_UpdateBuffer+0x24c>
     802:	80 91 1a 40 	lds	r24, 0x401A	; 0x80401a <coreRam+0x4>
     806:	80 ff       	sbrs	r24, 0
     808:	07 c0       	rjmp	.+14     	; 0x818 <Krono_UpdateBuffer+0x2d2>
     80a:	0e 94 a4 06 	call	0xd48	; 0xd48 <touch_init>
     80e:	e6 e1       	ldi	r30, 0x16	; 22
     810:	f0 e4       	ldi	r31, 0x40	; 64
     812:	84 81       	ldd	r24, Z+4	; 0x04
     814:	8e 7f       	andi	r24, 0xFE	; 254
     816:	84 83       	std	Z+4, r24	; 0x04
     818:	0e 94 e5 04 	call	0x9ca	; 0x9ca <uart_send_touch_gesture_data>
     81c:	80 91 39 45 	lds	r24, 0x4539	; 0x804539 <qtm_surface_cs_data1>
     820:	80 93 d4 43 	sts	0x43D4, r24	; 0x8043d4 <previousSurfaceStatus.5669>
     824:	0e c0       	rjmp	.+28     	; 0x842 <Krono_UpdateBuffer+0x2fc>
     826:	80 91 2f 40 	lds	r24, 0x402F	; 0x80402f <cfgRam+0x3>
     82a:	90 91 7a 40 	lds	r25, 0x407A	; 0x80407a <qtlib_key_configs_set1+0xc>
     82e:	98 13       	cpse	r25, r24
     830:	fa ce       	rjmp	.-524    	; 0x626 <Krono_UpdateBuffer+0xe0>
     832:	ff ce       	rjmp	.-514    	; 0x632 <Krono_UpdateBuffer+0xec>
     834:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <cfgRam+0x4>
     838:	90 91 6e 40 	lds	r25, 0x406E	; 0x80406e <qtlib_key_configs_set1>
     83c:	89 13       	cpse	r24, r25
     83e:	ff ce       	rjmp	.-514    	; 0x63e <Krono_UpdateBuffer+0xf8>
     840:	04 cf       	rjmp	.-504    	; 0x64a <Krono_UpdateBuffer+0x104>
     842:	df 91       	pop	r29
     844:	cf 91       	pop	r28
     846:	1f 91       	pop	r17
     848:	0f 91       	pop	r16
     84a:	08 95       	ret

0000084c <Krono_memory_map_read>:
{
	uint16_t temp_read_16bit;
	uint8_t  temp_addr_calc;
	uint8_t  return_this_byte = 0u;

	if (mem_map_address < (VADDR_CORERAM + CORERAM_SIZE)) {
     84c:	88 30       	cpi	r24, 0x08	; 8
     84e:	30 f4       	brcc	.+12     	; 0x85c <Krono_memory_map_read+0x10>
		return_this_byte = coreRam[mem_map_address];
     850:	e8 2f       	mov	r30, r24
     852:	f0 e0       	ldi	r31, 0x00	; 0
     854:	ea 5e       	subi	r30, 0xEA	; 234
     856:	ff 4b       	sbci	r31, 0xBF	; 191
     858:	80 81       	ld	r24, Z
     85a:	08 95       	ret
	} else if ((mem_map_address >= VADDR_TOUCHRAM) && (mem_map_address < (VADDR_TOUCHRAM + TOUCHRAM_SIZE))) {
     85c:	90 ef       	ldi	r25, 0xF0	; 240
     85e:	98 0f       	add	r25, r24
     860:	96 30       	cpi	r25, 0x06	; 6
     862:	30 f4       	brcc	.+12     	; 0x870 <Krono_memory_map_read+0x24>
		return_this_byte = touchRam[mem_map_address - VADDR_TOUCHRAM];
     864:	e8 2f       	mov	r30, r24
     866:	f0 e0       	ldi	r31, 0x00	; 0
     868:	e1 51       	subi	r30, 0x11	; 17
     86a:	fc 4b       	sbci	r31, 0xBC	; 188
     86c:	80 81       	ld	r24, Z
     86e:	08 95       	ret
	} else if ((mem_map_address >= VADDR_CFGRAM) && (mem_map_address < (VADDR_CFGRAM + CFGRAM_SIZE))) {
     870:	90 ee       	ldi	r25, 0xE0	; 224
     872:	98 0f       	add	r25, r24
     874:	9a 30       	cpi	r25, 0x0A	; 10
     876:	30 f4       	brcc	.+12     	; 0x884 <Krono_memory_map_read+0x38>
		return_this_byte = cfgRam[mem_map_address - VADDR_CFGRAM];
     878:	e8 2f       	mov	r30, r24
     87a:	f0 e0       	ldi	r31, 0x00	; 0
     87c:	e4 5f       	subi	r30, 0xF4	; 244
     87e:	ff 4b       	sbci	r31, 0xBF	; 191
     880:	80 81       	ld	r24, Z
     882:	08 95       	ret
	}
#if (KRONO_GESTURE_ENABLE == 1u)
	else if ((mem_map_address >= VADDR_GESTURECFGRAM)
     884:	99 ec       	ldi	r25, 0xC9	; 201
     886:	98 0f       	add	r25, r24
     888:	9e 30       	cpi	r25, 0x0E	; 14
     88a:	30 f4       	brcc	.+12     	; 0x898 <Krono_memory_map_read+0x4c>
	         && (mem_map_address < (VADDR_GESTURECFGRAM + GESTURECFGRAM_SIZE))) {
		return_this_byte = gestureCfgRam[mem_map_address - VADDR_GESTURECFGRAM];
     88c:	e8 2f       	mov	r30, r24
     88e:	f0 e0       	ldi	r31, 0x00	; 0
     890:	e9 51       	subi	r30, 0x19	; 25
     892:	f0 4c       	sbci	r31, 0xC0	; 192
     894:	80 81       	ld	r24, Z
     896:	08 95       	ret
	}
#endif
	else if ((mem_map_address >= VADDR_SVRAM)
     898:	94 e7       	ldi	r25, 0x74	; 116
     89a:	98 0f       	add	r25, r24
     89c:	98 30       	cpi	r25, 0x08	; 8
     89e:	30 f4       	brcc	.+12     	; 0x8ac <Krono_memory_map_read+0x60>
	         && (mem_map_address < (VADDR_SVRAM + (SURFACE_CS_NUM_KEYS_V + SURFACE_CS_NUM_KEYS_H)))) {
		return_this_byte = touchDelta[mem_map_address - VADDR_SVRAM];
     8a0:	e8 2f       	mov	r30, r24
     8a2:	f0 e0       	ldi	r31, 0x00	; 0
     8a4:	e5 59       	subi	r30, 0x95	; 149
     8a6:	fc 4b       	sbci	r31, 0xBC	; 188
     8a8:	80 81       	ld	r24, Z
     8aa:	08 95       	ret
	} else if ((mem_map_address >= VADDR_RAWVALUES)
	           && (mem_map_address < (VADDR_RAWVALUES + ((SURFACE_CS_NUM_KEYS_V + SURFACE_CS_NUM_KEYS_H) << 1u)))) {
     8ac:	9d e5       	ldi	r25, 0x5D	; 93
     8ae:	98 0f       	add	r25, r24
	}
#endif
	else if ((mem_map_address >= VADDR_SVRAM)
	         && (mem_map_address < (VADDR_SVRAM + (SURFACE_CS_NUM_KEYS_V + SURFACE_CS_NUM_KEYS_H)))) {
		return_this_byte = touchDelta[mem_map_address - VADDR_SVRAM];
	} else if ((mem_map_address >= VADDR_RAWVALUES)
     8b0:	90 31       	cpi	r25, 0x10	; 16
     8b2:	68 f4       	brcc	.+26     	; 0x8ce <Krono_memory_map_read+0x82>
	           && (mem_map_address < (VADDR_RAWVALUES + ((SURFACE_CS_NUM_KEYS_V + SURFACE_CS_NUM_KEYS_H) << 1u)))) {
		temp_addr_calc  = mem_map_address - VADDR_RAWVALUES;
		temp_read_16bit = touchRaw[temp_addr_calc >> 1u];
     8b4:	e9 2f       	mov	r30, r25
     8b6:	e6 95       	lsr	r30
     8b8:	f0 e0       	ldi	r31, 0x00	; 0
     8ba:	ee 0f       	add	r30, r30
     8bc:	ff 1f       	adc	r31, r31
     8be:	e9 51       	subi	r30, 0x19	; 25
     8c0:	fc 4b       	sbci	r31, 0xBC	; 188
     8c2:	20 81       	ld	r18, Z
     8c4:	81 81       	ldd	r24, Z+1	; 0x01
		if (0u == (temp_addr_calc % 2)) {
     8c6:	90 fd       	sbrc	r25, 0
     8c8:	15 c0       	rjmp	.+42     	; 0x8f4 <Krono_memory_map_read+0xa8>
			/* Even number -> LSB */
			return_this_byte = (uint8_t)(temp_read_16bit & 0x00FFu);
     8ca:	82 2f       	mov	r24, r18
     8cc:	08 95       	ret
		} else {
			/* Odd number -> MSB */
			return_this_byte = (uint8_t)((temp_read_16bit & 0xFF00u) >> 8u);
		}
	} else if ((mem_map_address >= VADDR_BASEVALUES)
	           && (mem_map_address < (VADDR_BASEVALUES + ((SURFACE_CS_NUM_KEYS_V + SURFACE_CS_NUM_KEYS_H) << 1u)))) {
     8ce:	ef e2       	ldi	r30, 0x2F	; 47
     8d0:	e8 0f       	add	r30, r24
			return_this_byte = (uint8_t)(temp_read_16bit & 0x00FFu);
		} else {
			/* Odd number -> MSB */
			return_this_byte = (uint8_t)((temp_read_16bit & 0xFF00u) >> 8u);
		}
	} else if ((mem_map_address >= VADDR_BASEVALUES)
     8d2:	e0 31       	cpi	r30, 0x10	; 16
     8d4:	70 f4       	brcc	.+28     	; 0x8f2 <Krono_memory_map_read+0xa6>
	           && (mem_map_address < (VADDR_BASEVALUES + ((SURFACE_CS_NUM_KEYS_V + SURFACE_CS_NUM_KEYS_H) << 1u)))) {
		temp_addr_calc  = mem_map_address - VADDR_BASEVALUES;
		temp_read_16bit = touchRef[temp_addr_calc >> 1u];
     8d6:	ae 2f       	mov	r26, r30
     8d8:	a6 95       	lsr	r26
     8da:	b0 e0       	ldi	r27, 0x00	; 0
     8dc:	aa 0f       	add	r26, r26
     8de:	bb 1f       	adc	r27, r27
     8e0:	a9 52       	subi	r26, 0x29	; 41
     8e2:	bc 4b       	sbci	r27, 0xBC	; 188
     8e4:	9c 91       	ld	r25, X
     8e6:	11 96       	adiw	r26, 0x01	; 1
     8e8:	8c 91       	ld	r24, X
		if (0u == (temp_addr_calc % 2)) {
     8ea:	e0 fd       	sbrc	r30, 0
     8ec:	03 c0       	rjmp	.+6      	; 0x8f4 <Krono_memory_map_read+0xa8>
			/* Even number -> LSB */
			return_this_byte = (uint8_t)(temp_read_16bit & 0x00FFu);
     8ee:	89 2f       	mov	r24, r25
     8f0:	08 95       	ret

uint8_t Krono_memory_map_read(uint8_t mem_map_address)
{
	uint16_t temp_read_16bit;
	uint8_t  temp_addr_calc;
	uint8_t  return_this_byte = 0u;
     8f2:	80 e0       	ldi	r24, 0x00	; 0
	} else {
		/* Address not valid */
	}

	return return_this_byte;
}
     8f4:	08 95       	ret

000008f6 <Krono_memory_map_write>:
uint8_t Krono_memory_map_write(uint8_t mem_map_address, uint8_t write_what)
{
	uint8_t return_this_byte = 0u;

	/* CMD Byte */
	if (mem_map_address == 4u) {
     8f6:	84 30       	cpi	r24, 0x04	; 4
     8f8:	19 f4       	brne	.+6      	; 0x900 <Krono_memory_map_write+0xa>
		coreRam[mem_map_address] = write_what;
     8fa:	60 93 1a 40 	sts	0x401A, r22	; 0x80401a <coreRam+0x4>
     8fe:	16 c0       	rjmp	.+44     	; 0x92c <Krono_memory_map_write+0x36>
	}
	/* Touch Config - No access to NUM_KEYS_V or NUM_KEYS_H */
	else if ((mem_map_address >= (VADDR_CFGRAM + 2u)) && (mem_map_address < (VADDR_CFGRAM + CFGRAM_SIZE))) {
     900:	9e ed       	ldi	r25, 0xDE	; 222
     902:	98 0f       	add	r25, r24
     904:	98 30       	cpi	r25, 0x08	; 8
     906:	30 f4       	brcc	.+12     	; 0x914 <Krono_memory_map_write+0x1e>
		cfgRam[mem_map_address - VADDR_CFGRAM] = write_what;
     908:	e8 2f       	mov	r30, r24
     90a:	f0 e0       	ldi	r31, 0x00	; 0
     90c:	e4 5f       	subi	r30, 0xF4	; 244
     90e:	ff 4b       	sbci	r31, 0xBF	; 191
     910:	60 83       	st	Z, r22
     912:	0c c0       	rjmp	.+24     	; 0x92c <Krono_memory_map_write+0x36>
	}
#if (KRONO_GESTURE_ENABLE == 1u)
	/* Gesture Config - All access */
	else if ((mem_map_address >= VADDR_GESTURECFGRAM)
     914:	99 ec       	ldi	r25, 0xC9	; 201
     916:	98 0f       	add	r25, r24
     918:	9e 30       	cpi	r25, 0x0E	; 14
     91a:	30 f4       	brcc	.+12     	; 0x928 <Krono_memory_map_write+0x32>
	         && (mem_map_address < (VADDR_GESTURECFGRAM + GESTURECFGRAM_SIZE))) {
		gestureCfgRam[mem_map_address - VADDR_GESTURECFGRAM] = write_what;
     91c:	e8 2f       	mov	r30, r24
     91e:	f0 e0       	ldi	r31, 0x00	; 0
     920:	e9 51       	subi	r30, 0x19	; 25
     922:	f0 4c       	sbci	r31, 0xC0	; 192
     924:	60 83       	st	Z, r22
     926:	02 c0       	rjmp	.+4      	; 0x92c <Krono_memory_map_write+0x36>
	}
#endif
	else {
		/* Address not valid */
		return_this_byte = 1u;
     928:	81 e0       	ldi	r24, 0x01	; 1
     92a:	08 95       	ret
	}

	if (0u == return_this_byte) {
		writeback_req = 1u;
     92c:	81 e0       	ldi	r24, 0x01	; 1
     92e:	80 93 05 44 	sts	0x4405, r24	; 0x804405 <writeback_req>
     932:	80 e0       	ldi	r24, 0x00	; 0
	}

	return return_this_byte;
}
     934:	08 95       	ret

00000936 <uart_get_char>:

uint8_t uart_runtime_data[UART_GES_LEN + UART_SIG_LEN + UART_DELTA_LEN + (UART_FIXED)*3];

uint8_t uart_get_char(void)
{
	uint8_t data = read_buffer[read_buf_read_ptr];
     936:	90 91 a0 44 	lds	r25, 0x44A0	; 0x8044a0 <read_buf_read_ptr>
     93a:	e9 2f       	mov	r30, r25
     93c:	f0 e0       	ldi	r31, 0x00	; 0
     93e:	e4 57       	subi	r30, 0x74	; 116
     940:	fb 4b       	sbci	r31, 0xBB	; 187
     942:	80 81       	ld	r24, Z
	read_buf_read_ptr++;
     944:	9f 5f       	subi	r25, 0xFF	; 255
	if (read_buf_read_ptr == UART_RX_BUF_LEN) {
     946:	94 31       	cpi	r25, 0x14	; 20
     948:	19 f0       	breq	.+6      	; 0x950 <uart_get_char+0x1a>
uint8_t uart_runtime_data[UART_GES_LEN + UART_SIG_LEN + UART_DELTA_LEN + (UART_FIXED)*3];

uint8_t uart_get_char(void)
{
	uint8_t data = read_buffer[read_buf_read_ptr];
	read_buf_read_ptr++;
     94a:	90 93 a0 44 	sts	0x44A0, r25	; 0x8044a0 <read_buf_read_ptr>
     94e:	08 95       	ret
	if (read_buf_read_ptr == UART_RX_BUF_LEN) {
		read_buf_read_ptr = 0;
     950:	10 92 a0 44 	sts	0x44A0, r1	; 0x8044a0 <read_buf_read_ptr>
	}
	return data;
}
     954:	08 95       	ret

00000956 <uart_send_data_wait>:

void uart_send_data_wait(uint8_t data)
{
	uart_tx_in_progress  = 1;
     956:	91 e0       	ldi	r25, 0x01	; 1
     958:	90 93 05 45 	sts	0x4505, r25	; 0x804505 <uart_tx_in_progress>
	USART_Module.TXDATAL = data;
     95c:	80 93 22 08 	sts	0x0822, r24	; 0x800822 <__TEXT_REGION_LENGTH__+0x7e0822>
	while (uart_tx_in_progress == 1)
     960:	80 91 05 45 	lds	r24, 0x4505	; 0x804505 <uart_tx_in_progress>
     964:	81 30       	cpi	r24, 0x01	; 1
     966:	e1 f3       	breq	.-8      	; 0x960 <uart_send_data_wait+0xa>
		;
}
     968:	08 95       	ret

0000096a <uart_send_data>:

void uart_send_data(void)
{
	if (uart_tx_in_progress == 0) {
     96a:	80 91 05 45 	lds	r24, 0x4505	; 0x804505 <uart_tx_in_progress>
     96e:	81 11       	cpse	r24, r1
     970:	09 c0       	rjmp	.+18     	; 0x984 <uart_send_data+0x1a>
		uart_tx_in_progress  = 1;
     972:	81 e0       	ldi	r24, 0x01	; 1
     974:	80 93 05 45 	sts	0x4505, r24	; 0x804505 <uart_tx_in_progress>
		write_buf_read_ptr   = 0;
		USART_Module.TXDATAL = uart_runtime_data[write_buf_read_ptr++];
     978:	80 93 84 44 	sts	0x4484, r24	; 0x804484 <write_buf_read_ptr>
     97c:	80 91 06 45 	lds	r24, 0x4506	; 0x804506 <uart_runtime_data>
     980:	80 93 22 08 	sts	0x0822, r24	; 0x800822 <__TEXT_REGION_LENGTH__+0x7e0822>
     984:	08 95       	ret

00000986 <uart_init_debug_data>:
	}
}

void uart_init_debug_data(void)
{
	uart_runtime_data[0]            = UART_HEADER;
     986:	e6 e0       	ldi	r30, 0x06	; 6
     988:	f5 e4       	ldi	r31, 0x45	; 69
     98a:	2d ea       	ldi	r18, 0xAD	; 173
     98c:	20 83       	st	Z, r18
	uart_runtime_data[1]            = UART_GES_LEN - 1 + UART_FIXED - 2;
     98e:	8a e0       	ldi	r24, 0x0A	; 10
     990:	81 83       	std	Z+1, r24	; 0x01
	uart_runtime_data[2]            = UART_GES_ID;
     992:	12 82       	std	Z+2, r1	; 0x02
	uart_runtime_data[3]            = 0x01;
     994:	81 e0       	ldi	r24, 0x01	; 1
     996:	83 83       	std	Z+3, r24	; 0x03
	uart_runtime_data[4]            = 0x00;
     998:	14 82       	std	Z+4, r1	; 0x04
	uart_runtime_data[5]            = UART_GES_ADDR;
     99a:	90 e1       	ldi	r25, 0x10	; 16
     99c:	95 83       	std	Z+5, r25	; 0x05
	uart_runtime_data[UART_GES_END] = UART_FOOTER;
     99e:	9a ed       	ldi	r25, 0xDA	; 218
     9a0:	94 87       	std	Z+12, r25	; 0x0c

	uart_runtime_data[UART_SIG_POS + 0] = UART_HEADER;
     9a2:	25 87       	std	Z+13, r18	; 0x0d
	uart_runtime_data[UART_SIG_POS + 1] = UART_SIG_LEN - 1 + UART_FIXED - 2;
     9a4:	34 e1       	ldi	r19, 0x14	; 20
     9a6:	36 87       	std	Z+14, r19	; 0x0e
	uart_runtime_data[UART_SIG_POS + 2] = UART_SIG_ID;
     9a8:	87 87       	std	Z+15, r24	; 0x0f
	uart_runtime_data[UART_SIG_POS + 3] = 0x01;
     9aa:	80 8b       	std	Z+16, r24	; 0x10
	uart_runtime_data[UART_SIG_POS + 4] = 0x00;
     9ac:	11 8a       	std	Z+17, r1	; 0x11
	uart_runtime_data[UART_SIG_POS + 5] = UART_SIG_ADDR;
     9ae:	33 ea       	ldi	r19, 0xA3	; 163
     9b0:	32 8b       	std	Z+18, r19	; 0x12
	uart_runtime_data[UART_SIG_END]     = UART_FOOTER;
     9b2:	93 a3       	std	Z+35, r25	; 0x23

	uart_runtime_data[UART_DELTA_POS + 0] = UART_HEADER;
     9b4:	24 a3       	std	Z+36, r18	; 0x24
	uart_runtime_data[UART_DELTA_POS + 1] = UART_DELTA_LEN - 1 + UART_FIXED - 2;
     9b6:	2c e0       	ldi	r18, 0x0C	; 12
     9b8:	25 a3       	std	Z+37, r18	; 0x25
	uart_runtime_data[UART_DELTA_POS + 2] = UART_DELTA_ID;
     9ba:	25 e0       	ldi	r18, 0x05	; 5
     9bc:	26 a3       	std	Z+38, r18	; 0x26
	uart_runtime_data[UART_DELTA_POS + 3] = 0x01;
     9be:	87 a3       	std	Z+39, r24	; 0x27
	uart_runtime_data[UART_DELTA_POS + 4] = 0x00;
     9c0:	10 a6       	std	Z+40, r1	; 0x28
	uart_runtime_data[UART_DELTA_POS + 5] = UART_DELTA_ADDR;
     9c2:	8c e8       	ldi	r24, 0x8C	; 140
     9c4:	81 a7       	std	Z+41, r24	; 0x29
	uart_runtime_data[UART_DELTA_END]     = UART_FOOTER;
     9c6:	92 ab       	std	Z+50, r25	; 0x32
     9c8:	08 95       	ret

000009ca <uart_send_touch_gesture_data>:
}

void uart_send_touch_gesture_data(void)
{
     9ca:	ef 92       	push	r14
     9cc:	ff 92       	push	r15
     9ce:	0f 93       	push	r16
     9d0:	1f 93       	push	r17
     9d2:	cf 93       	push	r28
	uint8_t *dest_ptr;

	if (uart_runtime_data[0] == 0) {
     9d4:	80 91 06 45 	lds	r24, 0x4506	; 0x804506 <uart_runtime_data>
     9d8:	81 11       	cpse	r24, r1
     9da:	02 c0       	rjmp	.+4      	; 0x9e0 <uart_send_touch_gesture_data+0x16>
		uart_init_debug_data();
     9dc:	0e 94 c3 04 	call	0x986	; 0x986 <uart_init_debug_data>
	}

	if (uart_send_ges_data_flag == 1 && uart_tx_in_progress == 0) {
     9e0:	80 91 36 40 	lds	r24, 0x4036	; 0x804036 <uart_send_ges_data_flag>
     9e4:	81 30       	cpi	r24, 0x01	; 1
     9e6:	c1 f5       	brne	.+112    	; 0xa58 <uart_send_touch_gesture_data+0x8e>
     9e8:	80 91 05 45 	lds	r24, 0x4505	; 0x804505 <uart_tx_in_progress>
     9ec:	81 11       	cpse	r24, r1
     9ee:	34 c0       	rjmp	.+104    	; 0xa58 <uart_send_touch_gesture_data+0x8e>
     9f0:	0c e0       	ldi	r16, 0x0C	; 12
     9f2:	15 e4       	ldi	r17, 0x45	; 69
     9f4:	c0 e1       	ldi	r28, 0x10	; 16
		dest_ptr = &uart_runtime_data[UART_GES_DATA_POS];
		for (uint8_t cnt = 0; cnt < UART_GES_LEN; cnt++) {
			*dest_ptr++ = Krono_memory_map_read(VADDR_TOUCHRAM + cnt);
     9f6:	8c 2f       	mov	r24, r28
     9f8:	0e 94 26 04 	call	0x84c	; 0x84c <Krono_memory_map_read>
     9fc:	f8 01       	movw	r30, r16
     9fe:	81 93       	st	Z+, r24
     a00:	8f 01       	movw	r16, r30
     a02:	cf 5f       	subi	r28, 0xFF	; 255
		uart_init_debug_data();
	}

	if (uart_send_ges_data_flag == 1 && uart_tx_in_progress == 0) {
		dest_ptr = &uart_runtime_data[UART_GES_DATA_POS];
		for (uint8_t cnt = 0; cnt < UART_GES_LEN; cnt++) {
     a04:	c6 31       	cpi	r28, 0x16	; 22
     a06:	b9 f7       	brne	.-18     	; 0x9f6 <uart_send_touch_gesture_data+0x2c>
     a08:	09 e1       	ldi	r16, 0x19	; 25
     a0a:	15 e4       	ldi	r17, 0x45	; 69
     a0c:	0f 2e       	mov	r0, r31
     a0e:	f9 e2       	ldi	r31, 0x29	; 41
     a10:	ef 2e       	mov	r14, r31
     a12:	f5 e4       	ldi	r31, 0x45	; 69
     a14:	ff 2e       	mov	r15, r31
     a16:	f0 2d       	mov	r31, r0
     a18:	c3 ea       	ldi	r28, 0xA3	; 163
			*dest_ptr++ = Krono_memory_map_read(VADDR_TOUCHRAM + cnt);
		}

		dest_ptr = &uart_runtime_data[UART_SIG_DATA_POS];
		for (uint8_t cnt = 0; cnt < UART_SIG_LEN; cnt++) {
			*dest_ptr++ = Krono_memory_map_read(VADDR_RAWVALUES + cnt);
     a1a:	8c 2f       	mov	r24, r28
     a1c:	0e 94 26 04 	call	0x84c	; 0x84c <Krono_memory_map_read>
     a20:	f8 01       	movw	r30, r16
     a22:	81 93       	st	Z+, r24
     a24:	8f 01       	movw	r16, r30
     a26:	cf 5f       	subi	r28, 0xFF	; 255
		for (uint8_t cnt = 0; cnt < UART_GES_LEN; cnt++) {
			*dest_ptr++ = Krono_memory_map_read(VADDR_TOUCHRAM + cnt);
		}

		dest_ptr = &uart_runtime_data[UART_SIG_DATA_POS];
		for (uint8_t cnt = 0; cnt < UART_SIG_LEN; cnt++) {
     a28:	ee 16       	cp	r14, r30
     a2a:	ff 06       	cpc	r15, r31
     a2c:	b1 f7       	brne	.-20     	; 0xa1a <uart_send_touch_gesture_data+0x50>
     a2e:	00 e3       	ldi	r16, 0x30	; 48
     a30:	15 e4       	ldi	r17, 0x45	; 69
     a32:	cc e8       	ldi	r28, 0x8C	; 140
			*dest_ptr++ = Krono_memory_map_read(VADDR_RAWVALUES + cnt);
		}

		dest_ptr = &uart_runtime_data[UART_DELTA_DATA_POS];
		for (uint8_t cnt = 0; cnt < UART_DELTA_LEN; cnt++) {
			*dest_ptr++ = Krono_memory_map_read(VADDR_SVRAM + cnt);
     a34:	8c 2f       	mov	r24, r28
     a36:	0e 94 26 04 	call	0x84c	; 0x84c <Krono_memory_map_read>
     a3a:	f8 01       	movw	r30, r16
     a3c:	81 93       	st	Z+, r24
     a3e:	8f 01       	movw	r16, r30
     a40:	cf 5f       	subi	r28, 0xFF	; 255
		for (uint8_t cnt = 0; cnt < UART_SIG_LEN; cnt++) {
			*dest_ptr++ = Krono_memory_map_read(VADDR_RAWVALUES + cnt);
		}

		dest_ptr = &uart_runtime_data[UART_DELTA_DATA_POS];
		for (uint8_t cnt = 0; cnt < UART_DELTA_LEN; cnt++) {
     a42:	c4 39       	cpi	r28, 0x94	; 148
     a44:	b9 f7       	brne	.-18     	; 0xa34 <uart_send_touch_gesture_data+0x6a>
			*dest_ptr++ = Krono_memory_map_read(VADDR_SVRAM + cnt);
		}

		if (uart_command_info.header_status != HEADER_RECEIVED) {
     a46:	80 91 85 44 	lds	r24, 0x4485	; 0x804485 <uart_command_info>
     a4a:	81 30       	cpi	r24, 0x01	; 1
     a4c:	19 f0       	breq	.+6      	; 0xa54 <uart_send_touch_gesture_data+0x8a>
			uart_new_data_available = 1;
     a4e:	81 e0       	ldi	r24, 0x01	; 1
     a50:	80 93 07 44 	sts	0x4407, r24	; 0x804407 <uart_new_data_available>
		}

#if (KRONO_GESTURE_ENABLE == 1u)
		qtm_gestures_2d_clearGesture();
     a54:	0e 94 36 13 	call	0x266c	; 0x266c <qtm_gestures_2d_clearGesture>
#endif
	}
}
     a58:	cf 91       	pop	r28
     a5a:	1f 91       	pop	r17
     a5c:	0f 91       	pop	r16
     a5e:	ff 90       	pop	r15
     a60:	ef 90       	pop	r14
     a62:	08 95       	ret

00000a64 <uart_min_num_bytes_received>:

uint8_t uart_min_num_bytes_received(void)
{
	if (read_buf_write_ptr >= read_buf_read_ptr) {
     a64:	80 91 83 44 	lds	r24, 0x4483	; 0x804483 <read_buf_write_ptr>
     a68:	90 91 a0 44 	lds	r25, 0x44A0	; 0x8044a0 <read_buf_read_ptr>
     a6c:	89 17       	cp	r24, r25
     a6e:	10 f0       	brcs	.+4      	; 0xa74 <uart_min_num_bytes_received+0x10>
		return (read_buf_write_ptr - read_buf_read_ptr);
     a70:	89 1b       	sub	r24, r25
     a72:	08 95       	ret
	} else {
		return ((read_buf_write_ptr + UART_RX_BUF_LEN) - read_buf_read_ptr);
     a74:	8c 5e       	subi	r24, 0xEC	; 236
     a76:	89 1b       	sub	r24, r25
	}
}
     a78:	08 95       	ret

00000a7a <uart_send_header>:

uint8_t uart_tx_len = 0;

void uart_send_header(uint8_t len, uint8_t id, uint8_t address)
{
     a7a:	1f 93       	push	r17
     a7c:	cf 93       	push	r28
     a7e:	df 93       	push	r29
     a80:	c8 2f       	mov	r28, r24
     a82:	16 2f       	mov	r17, r22
     a84:	d4 2f       	mov	r29, r20
	write_buf_write_ptr = 0;
     a86:	10 92 8b 44 	sts	0x448B, r1	; 0x80448b <write_buf_write_ptr>
	uart_tx_len         = len + 5;
     a8a:	85 e0       	ldi	r24, 0x05	; 5
     a8c:	8c 0f       	add	r24, r28
     a8e:	80 93 06 44 	sts	0x4406, r24	; 0x804406 <uart_tx_len>

	uart_send_data_wait(UART_HEADER);
     a92:	8d ea       	ldi	r24, 0xAD	; 173
     a94:	0e 94 ab 04 	call	0x956	; 0x956 <uart_send_data_wait>
	uart_send_data_wait(len + 4);
     a98:	84 e0       	ldi	r24, 0x04	; 4
     a9a:	8c 0f       	add	r24, r28
     a9c:	0e 94 ab 04 	call	0x956	; 0x956 <uart_send_data_wait>
	uart_send_data_wait(id);
     aa0:	81 2f       	mov	r24, r17
     aa2:	0e 94 ab 04 	call	0x956	; 0x956 <uart_send_data_wait>
	uart_send_data_wait(0x01); // fixed
     aa6:	81 e0       	ldi	r24, 0x01	; 1
     aa8:	0e 94 ab 04 	call	0x956	; 0x956 <uart_send_data_wait>
	uart_send_data_wait(0x00); // fixed
     aac:	80 e0       	ldi	r24, 0x00	; 0
     aae:	0e 94 ab 04 	call	0x956	; 0x956 <uart_send_data_wait>
	uart_send_data_wait(address);
     ab2:	8d 2f       	mov	r24, r29
     ab4:	0e 94 ab 04 	call	0x956	; 0x956 <uart_send_data_wait>
}
     ab8:	df 91       	pop	r29
     aba:	cf 91       	pop	r28
     abc:	1f 91       	pop	r17
     abe:	08 95       	ret

00000ac0 <uart_process>:

void uart_process(void)
{
     ac0:	ef 92       	push	r14
     ac2:	ff 92       	push	r15
     ac4:	1f 93       	push	r17
     ac6:	cf 93       	push	r28
     ac8:	df 93       	push	r29
	uint8_t l_trans_id = 0, l_addr = 0, l_len = 0;

	if (uart_new_data_available == 1) {
     aca:	80 91 07 44 	lds	r24, 0x4407	; 0x804407 <uart_new_data_available>
     ace:	81 30       	cpi	r24, 0x01	; 1
     ad0:	21 f4       	brne	.+8      	; 0xada <uart_process+0x1a>
		uart_new_data_available = 0;
     ad2:	10 92 07 44 	sts	0x4407, r1	; 0x804407 <uart_new_data_available>
		uart_send_data();
     ad6:	0e 94 b5 04 	call	0x96a	; 0x96a <uart_send_data>
	}

	if (uart_min_num_bytes_received() > 4) {
     ada:	0e 94 32 05 	call	0xa64	; 0xa64 <uart_min_num_bytes_received>
     ade:	85 30       	cpi	r24, 0x05	; 5
     ae0:	08 f4       	brcc	.+2      	; 0xae4 <uart_process+0x24>
     ae2:	a0 c0       	rjmp	.+320    	; 0xc24 <uart_process+0x164>
		if (uart_get_char() == UART_HEADER) {
     ae4:	0e 94 9b 04 	call	0x936	; 0x936 <uart_get_char>
     ae8:	8d 3a       	cpi	r24, 0xAD	; 173
     aea:	09 f0       	breq	.+2      	; 0xaee <uart_process+0x2e>
     aec:	9b c0       	rjmp	.+310    	; 0xc24 <uart_process+0x164>
			// received some data process it
			if (uart_command_info.header_status == HEADER_AWAITING) {
     aee:	80 91 85 44 	lds	r24, 0x4485	; 0x804485 <uart_command_info>
     af2:	81 11       	cpse	r24, r1
     af4:	1c c0       	rjmp	.+56     	; 0xb2e <uart_process+0x6e>
				if (uart_min_num_bytes_received() > 3) {
     af6:	0e 94 32 05 	call	0xa64	; 0xa64 <uart_min_num_bytes_received>
     afa:	84 30       	cpi	r24, 0x04	; 4
     afc:	08 f4       	brcc	.+2      	; 0xb00 <uart_process+0x40>
     afe:	92 c0       	rjmp	.+292    	; 0xc24 <uart_process+0x164>
					l_trans_id                      = uart_get_char();
     b00:	0e 94 9b 04 	call	0x936	; 0x936 <uart_get_char>
     b04:	18 2f       	mov	r17, r24
					uart_command_info.command_id    = uart_get_char();
     b06:	0e 94 9b 04 	call	0x936	; 0x936 <uart_get_char>
     b0a:	0f 2e       	mov	r0, r31
     b0c:	f5 e8       	ldi	r31, 0x85	; 133
     b0e:	ef 2e       	mov	r14, r31
     b10:	f4 e4       	ldi	r31, 0x44	; 68
     b12:	ff 2e       	mov	r15, r31
     b14:	f0 2d       	mov	r31, r0
     b16:	f7 01       	movw	r30, r14
     b18:	82 83       	std	Z+2, r24	; 0x02
					l_addr                          = uart_get_char();
     b1a:	0e 94 9b 04 	call	0x936	; 0x936 <uart_get_char>
     b1e:	c8 2f       	mov	r28, r24
					l_len                           = uart_get_char();
     b20:	0e 94 9b 04 	call	0x936	; 0x936 <uart_get_char>
     b24:	d8 2f       	mov	r29, r24
					uart_command_info.header_status = HEADER_RECEIVED;
     b26:	81 e0       	ldi	r24, 0x01	; 1
     b28:	f7 01       	movw	r30, r14
     b2a:	80 83       	st	Z, r24
     b2c:	06 c0       	rjmp	.+12     	; 0xb3a <uart_process+0x7a>
				}
			}

			if (uart_command_info.header_status == HEADER_RECEIVED) {
     b2e:	81 30       	cpi	r24, 0x01	; 1
     b30:	09 f0       	breq	.+2      	; 0xb34 <uart_process+0x74>
     b32:	78 c0       	rjmp	.+240    	; 0xc24 <uart_process+0x164>
	uart_send_data_wait(address);
}

void uart_process(void)
{
	uint8_t l_trans_id = 0, l_addr = 0, l_len = 0;
     b34:	d0 e0       	ldi	r29, 0x00	; 0
     b36:	c0 e0       	ldi	r28, 0x00	; 0
     b38:	10 e0       	ldi	r17, 0x00	; 0
					uart_command_info.header_status = HEADER_RECEIVED;
				}
			}

			if (uart_command_info.header_status == HEADER_RECEIVED) {
				read_buf_write_ptr = 0;
     b3a:	10 92 83 44 	sts	0x4483, r1	; 0x804483 <read_buf_write_ptr>
				read_buf_read_ptr  = 0;
     b3e:	10 92 a0 44 	sts	0x44A0, r1	; 0x8044a0 <read_buf_read_ptr>
				if (uart_command_info.command_id != COMMAND_INFO_PC_TO_MCU) {
     b42:	80 91 87 44 	lds	r24, 0x4487	; 0x804487 <uart_command_info+0x2>
     b46:	80 38       	cpi	r24, 0x80	; 128
     b48:	09 f4       	brne	.+2      	; 0xb4c <uart_process+0x8c>
     b4a:	6a c0       	rjmp	.+212    	; 0xc20 <uart_process+0x160>
					if (uart_command_info.command_id == COMMAND_INFO_MCU_TO_PC) // 0x81
     b4c:	81 38       	cpi	r24, 0x81	; 129
     b4e:	e9 f4       	brne	.+58     	; 0xb8a <uart_process+0xca>
					{
						while (uart_tx_in_progress == 1)
     b50:	80 91 05 45 	lds	r24, 0x4505	; 0x804505 <uart_tx_in_progress>
     b54:	81 30       	cpi	r24, 0x01	; 1
     b56:	e1 f3       	breq	.-8      	; 0xb50 <uart_process+0x90>
							;
						uart_send_ges_data_flag = 0;
     b58:	10 92 36 40 	sts	0x4036, r1	; 0x804036 <uart_send_ges_data_flag>
						uart_send_header(l_len, l_trans_id, l_addr);
     b5c:	4c 2f       	mov	r20, r28
     b5e:	61 2f       	mov	r22, r17
     b60:	8d 2f       	mov	r24, r29
     b62:	0e 94 3d 05 	call	0xa7a	; 0xa7a <uart_send_header>
						for (uint8_t cnt = 0; cnt < l_len; cnt++) {
     b66:	dd 23       	and	r29, r29
     b68:	49 f0       	breq	.+18     	; 0xb7c <uart_process+0xbc>
     b6a:	dc 0f       	add	r29, r28
							uart_send_data_wait(Krono_memory_map_read(l_addr + cnt));
     b6c:	8c 2f       	mov	r24, r28
     b6e:	0e 94 26 04 	call	0x84c	; 0x84c <Krono_memory_map_read>
     b72:	0e 94 ab 04 	call	0x956	; 0x956 <uart_send_data_wait>
     b76:	cf 5f       	subi	r28, 0xFF	; 255
					{
						while (uart_tx_in_progress == 1)
							;
						uart_send_ges_data_flag = 0;
						uart_send_header(l_len, l_trans_id, l_addr);
						for (uint8_t cnt = 0; cnt < l_len; cnt++) {
     b78:	dc 13       	cpse	r29, r28
     b7a:	f8 cf       	rjmp	.-16     	; 0xb6c <uart_process+0xac>
							uart_send_data_wait(Krono_memory_map_read(l_addr + cnt));
						}
						uart_send_data_wait(UART_FOOTER);
     b7c:	8a ed       	ldi	r24, 0xDA	; 218
     b7e:	0e 94 ab 04 	call	0x956	; 0x956 <uart_send_data_wait>
						uart_send_ges_data_flag = 1;
     b82:	81 e0       	ldi	r24, 0x01	; 1
     b84:	80 93 36 40 	sts	0x4036, r24	; 0x804036 <uart_send_ges_data_flag>
     b88:	48 c0       	rjmp	.+144    	; 0xc1a <uart_process+0x15a>
					} else if (uart_command_info.command_id == COMMAND_DATA_MCU_TO_PC) // 0x01
     b8a:	81 30       	cpi	r24, 0x01	; 1
     b8c:	61 f5       	brne	.+88     	; 0xbe6 <uart_process+0x126>
					{
						while (uart_tx_in_progress == 1)
     b8e:	80 91 05 45 	lds	r24, 0x4505	; 0x804505 <uart_tx_in_progress>
     b92:	81 30       	cpi	r24, 0x01	; 1
     b94:	e1 f3       	breq	.-8      	; 0xb8e <uart_process+0xce>
							;
						uart_send_ges_data_flag = 0;
     b96:	10 92 36 40 	sts	0x4036, r1	; 0x804036 <uart_send_ges_data_flag>
						uart_send_header(l_len, l_trans_id, l_addr);
     b9a:	4c 2f       	mov	r20, r28
     b9c:	61 2f       	mov	r22, r17
     b9e:	8d 2f       	mov	r24, r29
     ba0:	0e 94 3d 05 	call	0xa7a	; 0xa7a <uart_send_header>
						if (l_addr != 0) {
     ba4:	cc 23       	and	r28, r28
     ba6:	61 f0       	breq	.+24     	; 0xbc0 <uart_process+0x100>
							for (uint8_t cnt = 0; cnt < l_len; cnt++) {
     ba8:	dd 23       	and	r29, r29
     baa:	b1 f0       	breq	.+44     	; 0xbd8 <uart_process+0x118>
     bac:	dc 0f       	add	r29, r28
								uart_send_data_wait(Krono_memory_map_read(l_addr + cnt));
     bae:	8c 2f       	mov	r24, r28
     bb0:	0e 94 26 04 	call	0x84c	; 0x84c <Krono_memory_map_read>
     bb4:	0e 94 ab 04 	call	0x956	; 0x956 <uart_send_data_wait>
     bb8:	cf 5f       	subi	r28, 0xFF	; 255
						while (uart_tx_in_progress == 1)
							;
						uart_send_ges_data_flag = 0;
						uart_send_header(l_len, l_trans_id, l_addr);
						if (l_addr != 0) {
							for (uint8_t cnt = 0; cnt < l_len; cnt++) {
     bba:	cd 13       	cpse	r28, r29
     bbc:	f8 cf       	rjmp	.-16     	; 0xbae <uart_process+0xee>
     bbe:	0c c0       	rjmp	.+24     	; 0xbd8 <uart_process+0x118>
								uart_send_data_wait(Krono_memory_map_read(l_addr + cnt));
							}
						} else {
							uart_send_data_wait(0x00);
     bc0:	80 e0       	ldi	r24, 0x00	; 0
     bc2:	0e 94 ab 04 	call	0x956	; 0x956 <uart_send_data_wait>
							uart_send_data_wait(0x00);
     bc6:	80 e0       	ldi	r24, 0x00	; 0
     bc8:	0e 94 ab 04 	call	0x956	; 0x956 <uart_send_data_wait>
							uart_send_data_wait(0x00);
     bcc:	80 e0       	ldi	r24, 0x00	; 0
     bce:	0e 94 ab 04 	call	0x956	; 0x956 <uart_send_data_wait>
							uart_send_data_wait(0x50); // FIRMWARE INFORMATION
     bd2:	80 e5       	ldi	r24, 0x50	; 80
     bd4:	0e 94 ab 04 	call	0x956	; 0x956 <uart_send_data_wait>
						}
						uart_send_data_wait(UART_FOOTER);
     bd8:	8a ed       	ldi	r24, 0xDA	; 218
     bda:	0e 94 ab 04 	call	0x956	; 0x956 <uart_send_data_wait>
						uart_send_ges_data_flag = 1;
     bde:	81 e0       	ldi	r24, 0x01	; 1
     be0:	80 93 36 40 	sts	0x4036, r24	; 0x804036 <uart_send_ges_data_flag>
     be4:	1a c0       	rjmp	.+52     	; 0xc1a <uart_process+0x15a>
					} else if (uart_command_info.command_id == COMMAND_DATA_PC_TO_MCU) // 0x00
     be6:	81 11       	cpse	r24, r1
     be8:	18 c0       	rjmp	.+48     	; 0xc1a <uart_process+0x15a>
					{
						while (uart_tx_in_progress == 1)
     bea:	80 91 05 45 	lds	r24, 0x4505	; 0x804505 <uart_tx_in_progress>
     bee:	81 30       	cpi	r24, 0x01	; 1
     bf0:	e1 f3       	breq	.-8      	; 0xbea <uart_process+0x12a>
							;
						uart_send_ges_data_flag = 0;
     bf2:	10 92 36 40 	sts	0x4036, r1	; 0x804036 <uart_send_ges_data_flag>
						uint8_t value           = l_len;
						Krono_memory_map_write(l_addr, value);
     bf6:	6d 2f       	mov	r22, r29
     bf8:	8c 2f       	mov	r24, r28
     bfa:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <Krono_memory_map_write>
						l_len = 1;
						uart_send_header(l_len, l_trans_id, l_addr);
     bfe:	4c 2f       	mov	r20, r28
     c00:	61 2f       	mov	r22, r17
     c02:	81 e0       	ldi	r24, 0x01	; 1
     c04:	0e 94 3d 05 	call	0xa7a	; 0xa7a <uart_send_header>
						uart_send_data_wait(value);
     c08:	8d 2f       	mov	r24, r29
     c0a:	0e 94 ab 04 	call	0x956	; 0x956 <uart_send_data_wait>
						uart_send_data_wait(UART_FOOTER);
     c0e:	8a ed       	ldi	r24, 0xDA	; 218
     c10:	0e 94 ab 04 	call	0x956	; 0x956 <uart_send_data_wait>
						uart_send_ges_data_flag = 1;
     c14:	81 e0       	ldi	r24, 0x01	; 1
     c16:	80 93 36 40 	sts	0x4036, r24	; 0x804036 <uart_send_ges_data_flag>
					}

					uart_command_info.header_status = HEADER_AWAITING;
     c1a:	10 92 85 44 	sts	0x4485, r1	; 0x804485 <uart_command_info>
     c1e:	02 c0       	rjmp	.+4      	; 0xc24 <uart_process+0x164>
				} else {
					uart_command_info.header_status = HEADER_AWAITING;
     c20:	10 92 85 44 	sts	0x4485, r1	; 0x804485 <uart_command_info>
				}
			}
		}
	}
}
     c24:	df 91       	pop	r29
     c26:	cf 91       	pop	r28
     c28:	1f 91       	pop	r17
     c2a:	ff 90       	pop	r15
     c2c:	ef 90       	pop	r14
     c2e:	08 95       	ret

00000c30 <krono_tx_complete_callback>:

void krono_tx_complete_callback(void)
{
#if (KRONOCOMM_UART == 1u)
	// USART TX complete interrupt
	USART_Module.STATUS |= (1 << 6);
     c30:	e0 e2       	ldi	r30, 0x20	; 32
     c32:	f8 e0       	ldi	r31, 0x08	; 8
     c34:	84 81       	ldd	r24, Z+4	; 0x04
     c36:	80 64       	ori	r24, 0x40	; 64
     c38:	84 83       	std	Z+4, r24	; 0x04

	if (uart_send_ges_data_flag != 1) {
     c3a:	80 91 36 40 	lds	r24, 0x4036	; 0x804036 <uart_send_ges_data_flag>
     c3e:	81 30       	cpi	r24, 0x01	; 1
     c40:	19 f0       	breq	.+6      	; 0xc48 <krono_tx_complete_callback+0x18>
		uart_tx_in_progress = 0;
     c42:	10 92 05 45 	sts	0x4505, r1	; 0x804505 <uart_tx_in_progress>
     c46:	08 95       	ret
	} else {
		if (write_buf_read_ptr < (UART_GES_LEN + UART_SIG_LEN + UART_DELTA_LEN + UART_FIXED * 3)) {
     c48:	80 91 84 44 	lds	r24, 0x4484	; 0x804484 <write_buf_read_ptr>
     c4c:	83 33       	cpi	r24, 0x33	; 51
     c4e:	58 f4       	brcc	.+22     	; 0xc66 <krono_tx_complete_callback+0x36>
			USART_Module.TXDATAL = uart_runtime_data[write_buf_read_ptr];
     c50:	e8 2f       	mov	r30, r24
     c52:	f0 e0       	ldi	r31, 0x00	; 0
     c54:	ea 5f       	subi	r30, 0xFA	; 250
     c56:	fa 4b       	sbci	r31, 0xBA	; 186
     c58:	90 81       	ld	r25, Z
     c5a:	90 93 22 08 	sts	0x0822, r25	; 0x800822 <__TEXT_REGION_LENGTH__+0x7e0822>
			write_buf_read_ptr++;
     c5e:	8f 5f       	subi	r24, 0xFF	; 255
     c60:	80 93 84 44 	sts	0x4484, r24	; 0x804484 <write_buf_read_ptr>
     c64:	08 95       	ret
		} else {
			uart_tx_in_progress = 0;
     c66:	10 92 05 45 	sts	0x4505, r1	; 0x804505 <uart_tx_in_progress>
     c6a:	08 95       	ret

00000c6c <krono_rx_complete_callback>:
}

void krono_rx_complete_callback(void)
{
#if (KRONOCOMM_UART == 1u)
	read_buffer[read_buf_write_ptr] = USART_Module.RXDATAL;
     c6c:	80 91 83 44 	lds	r24, 0x4483	; 0x804483 <read_buf_write_ptr>
     c70:	90 91 20 08 	lds	r25, 0x0820	; 0x800820 <__TEXT_REGION_LENGTH__+0x7e0820>
     c74:	e8 2f       	mov	r30, r24
     c76:	f0 e0       	ldi	r31, 0x00	; 0
     c78:	e4 57       	subi	r30, 0x74	; 116
     c7a:	fb 4b       	sbci	r31, 0xBB	; 187
     c7c:	90 83       	st	Z, r25
	read_buf_write_ptr++;
     c7e:	8f 5f       	subi	r24, 0xFF	; 255
	if (read_buf_write_ptr == UART_RX_BUF_LEN) {
     c80:	84 31       	cpi	r24, 0x14	; 20
     c82:	19 f0       	breq	.+6      	; 0xc8a <krono_rx_complete_callback+0x1e>

void krono_rx_complete_callback(void)
{
#if (KRONOCOMM_UART == 1u)
	read_buffer[read_buf_write_ptr] = USART_Module.RXDATAL;
	read_buf_write_ptr++;
     c84:	80 93 83 44 	sts	0x4483, r24	; 0x804483 <read_buf_write_ptr>
     c88:	08 95       	ret
	if (read_buf_write_ptr == UART_RX_BUF_LEN) {
		read_buf_write_ptr = 0;
     c8a:	10 92 83 44 	sts	0x4483, r1	; 0x804483 <read_buf_write_ptr>
     c8e:	08 95       	ret

00000c90 <qtm_measure_complete_callback>:
{
	/* Calibrate Node */
	qtm_calibrate_sensor_node(&qtlib_acq_set1, sensor_node);
	/* Initialize key */
	qtm_init_sensor_key(&qtlib_key_set1, sensor_node, &ptc_qtlib_node_stat1[sensor_node]);
}
     c90:	81 e0       	ldi	r24, 0x01	; 1
     c92:	80 93 0e 44 	sts	0x440E, r24	; 0x80440e <touch_postprocess_request>
     c96:	08 95       	ret

00000c98 <Timer_set_period>:
     c98:	9c 01       	movw	r18, r24
     c9a:	89 2b       	or	r24, r25
     c9c:	69 f0       	breq	.+26     	; 0xcb8 <Timer_set_period+0x20>
     c9e:	e0 e4       	ldi	r30, 0x40	; 64
     ca0:	f1 e0       	ldi	r31, 0x01	; 1
     ca2:	91 81       	ldd	r25, Z+1	; 0x01
     ca4:	92 fd       	sbrc	r25, 2
     ca6:	fd cf       	rjmp	.-6      	; 0xca2 <Timer_set_period+0xa>
     ca8:	e0 e4       	ldi	r30, 0x40	; 64
     caa:	f1 e0       	ldi	r31, 0x01	; 1
     cac:	22 87       	std	Z+10, r18	; 0x0a
     cae:	33 87       	std	Z+11, r19	; 0x0b
     cb0:	82 81       	ldd	r24, Z+2	; 0x02
     cb2:	82 60       	ori	r24, 0x02	; 2
     cb4:	82 83       	std	Z+2, r24	; 0x02
     cb6:	05 c0       	rjmp	.+10     	; 0xcc2 <Timer_set_period+0x2a>
     cb8:	e0 e4       	ldi	r30, 0x40	; 64
     cba:	f1 e0       	ldi	r31, 0x01	; 1
     cbc:	82 81       	ldd	r24, Z+2	; 0x02
     cbe:	8d 7f       	andi	r24, 0xFD	; 253
     cc0:	82 83       	std	Z+2, r24	; 0x02
     cc2:	e0 e4       	ldi	r30, 0x40	; 64
     cc4:	f1 e0       	ldi	r31, 0x01	; 1
     cc6:	81 81       	ldd	r24, Z+1	; 0x01
     cc8:	81 fd       	sbrc	r24, 1
     cca:	fd cf       	rjmp	.-6      	; 0xcc6 <Timer_set_period+0x2e>
     ccc:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <__TEXT_REGION_LENGTH__+0x7e0148>
     cd0:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <__TEXT_REGION_LENGTH__+0x7e0149>
     cd4:	08 95       	ret

00000cd6 <touch_disable_lowpower_measurement>:
     cd6:	e0 e0       	ldi	r30, 0x00	; 0
     cd8:	f2 e0       	ldi	r31, 0x02	; 2
     cda:	15 a6       	std	Z+45, r1	; 0x2d
     cdc:	11 8a       	std	Z+17, r1	; 0x11
     cde:	e0 e4       	ldi	r30, 0x40	; 64
     ce0:	f1 e0       	ldi	r31, 0x01	; 1
     ce2:	81 81       	ldd	r24, Z+1	; 0x01
     ce4:	81 11       	cpse	r24, r1
     ce6:	fd cf       	rjmp	.-6      	; 0xce2 <touch_disable_lowpower_measurement+0xc>
     ce8:	80 e8       	ldi	r24, 0x80	; 128
     cea:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <__TEXT_REGION_LENGTH__+0x7e0140>
     cee:	e0 e4       	ldi	r30, 0x40	; 64
     cf0:	f1 e0       	ldi	r31, 0x01	; 1
     cf2:	81 89       	ldd	r24, Z+17	; 0x11
     cf4:	81 11       	cpse	r24, r1
     cf6:	fd cf       	rjmp	.-6      	; 0xcf2 <touch_disable_lowpower_measurement+0x1c>
     cf8:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <__TEXT_REGION_LENGTH__+0x7e0150>
     cfc:	84 e1       	ldi	r24, 0x14	; 20
     cfe:	90 e0       	ldi	r25, 0x00	; 0
     d00:	80 93 08 44 	sts	0x4408, r24	; 0x804408 <measurement_period_store>
     d04:	90 93 09 44 	sts	0x4409, r25	; 0x804409 <measurement_period_store+0x1>
     d08:	0e 94 4c 06 	call	0xc98	; 0xc98 <Timer_set_period>
     d0c:	e0 e4       	ldi	r30, 0x40	; 64
     d0e:	f1 e0       	ldi	r31, 0x01	; 1
     d10:	81 81       	ldd	r24, Z+1	; 0x01
     d12:	81 11       	cpse	r24, r1
     d14:	fd cf       	rjmp	.-6      	; 0xd10 <touch_disable_lowpower_measurement+0x3a>
     d16:	81 e8       	ldi	r24, 0x81	; 129
     d18:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <__TEXT_REGION_LENGTH__+0x7e0140>
     d1c:	08 95       	ret

00000d1e <touch_measure_wcomp_match>:
     d1e:	80 91 08 44 	lds	r24, 0x4408	; 0x804408 <measurement_period_store>
     d22:	90 91 09 44 	lds	r25, 0x4409	; 0x804409 <measurement_period_store+0x1>
     d26:	44 97       	sbiw	r24, 0x14	; 20
     d28:	71 f0       	breq	.+28     	; 0xd46 <touch_measure_wcomp_match+0x28>
     d2a:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <touch_disable_lowpower_measurement>
     d2e:	81 e0       	ldi	r24, 0x01	; 1
     d30:	80 93 0f 44 	sts	0x440F, r24	; 0x80440f <time_to_measure_touch_flag>
     d34:	10 92 0a 44 	sts	0x440A, r1	; 0x80440a <time_since_touch>
     d38:	10 92 0b 44 	sts	0x440B, r1	; 0x80440b <time_since_touch+0x1>
     d3c:	e2 e8       	ldi	r30, 0x82	; 130
     d3e:	f4 e4       	ldi	r31, 0x44	; 68
     d40:	80 81       	ld	r24, Z
     d42:	82 60       	ori	r24, 0x02	; 2
     d44:	80 83       	st	Z, r24
     d46:	08 95       	ret

00000d48 <touch_init>:
     d48:	0f 93       	push	r16
     d4a:	1f 93       	push	r17
     d4c:	cf 93       	push	r28
     d4e:	df 93       	push	r29
     d50:	84 e1       	ldi	r24, 0x14	; 20
     d52:	90 e0       	ldi	r25, 0x00	; 0
     d54:	0e 94 4c 06 	call	0xc98	; 0xc98 <Timer_set_period>
     d58:	e5 e7       	ldi	r30, 0x75	; 117
     d5a:	f4 e0       	ldi	r31, 0x04	; 4
     d5c:	80 81       	ld	r24, Z
     d5e:	87 7f       	andi	r24, 0xF7	; 247
     d60:	80 83       	st	Z, r24
     d62:	80 81       	ld	r24, Z
     d64:	88 7f       	andi	r24, 0xF8	; 248
     d66:	84 60       	ori	r24, 0x04	; 4
     d68:	80 83       	st	Z, r24
     d6a:	e0 e7       	ldi	r30, 0x70	; 112
     d6c:	f4 e0       	ldi	r31, 0x04	; 4
     d6e:	80 81       	ld	r24, Z
     d70:	87 7f       	andi	r24, 0xF7	; 247
     d72:	80 83       	st	Z, r24
     d74:	80 81       	ld	r24, Z
     d76:	88 7f       	andi	r24, 0xF8	; 248
     d78:	84 60       	ori	r24, 0x04	; 4
     d7a:	80 83       	st	Z, r24
     d7c:	e6 e1       	ldi	r30, 0x16	; 22
     d7e:	f4 e0       	ldi	r31, 0x04	; 4
     d80:	80 81       	ld	r24, Z
     d82:	87 7f       	andi	r24, 0xF7	; 247
     d84:	80 83       	st	Z, r24
     d86:	80 81       	ld	r24, Z
     d88:	88 7f       	andi	r24, 0xF8	; 248
     d8a:	84 60       	ori	r24, 0x04	; 4
     d8c:	80 83       	st	Z, r24
     d8e:	e1 e7       	ldi	r30, 0x71	; 113
     d90:	f4 e0       	ldi	r31, 0x04	; 4
     d92:	80 81       	ld	r24, Z
     d94:	87 7f       	andi	r24, 0xF7	; 247
     d96:	80 83       	st	Z, r24
     d98:	80 81       	ld	r24, Z
     d9a:	88 7f       	andi	r24, 0xF8	; 248
     d9c:	84 60       	ori	r24, 0x04	; 4
     d9e:	80 83       	st	Z, r24
     da0:	e6 e7       	ldi	r30, 0x76	; 118
     da2:	f4 e0       	ldi	r31, 0x04	; 4
     da4:	80 81       	ld	r24, Z
     da6:	87 7f       	andi	r24, 0xF7	; 247
     da8:	80 83       	st	Z, r24
     daa:	80 81       	ld	r24, Z
     dac:	88 7f       	andi	r24, 0xF8	; 248
     dae:	84 60       	ori	r24, 0x04	; 4
     db0:	80 83       	st	Z, r24
     db2:	e5 e1       	ldi	r30, 0x15	; 21
     db4:	f4 e0       	ldi	r31, 0x04	; 4
     db6:	80 81       	ld	r24, Z
     db8:	87 7f       	andi	r24, 0xF7	; 247
     dba:	80 83       	st	Z, r24
     dbc:	80 81       	ld	r24, Z
     dbe:	88 7f       	andi	r24, 0xF8	; 248
     dc0:	84 60       	ori	r24, 0x04	; 4
     dc2:	80 83       	st	Z, r24
     dc4:	e7 e7       	ldi	r30, 0x77	; 119
     dc6:	f4 e0       	ldi	r31, 0x04	; 4
     dc8:	80 81       	ld	r24, Z
     dca:	87 7f       	andi	r24, 0xF7	; 247
     dcc:	80 83       	st	Z, r24
     dce:	80 81       	ld	r24, Z
     dd0:	88 7f       	andi	r24, 0xF8	; 248
     dd2:	84 60       	ori	r24, 0x04	; 4
     dd4:	80 83       	st	Z, r24
     dd6:	e4 e1       	ldi	r30, 0x14	; 20
     dd8:	f4 e0       	ldi	r31, 0x04	; 4
     dda:	80 81       	ld	r24, Z
     ddc:	87 7f       	andi	r24, 0xF7	; 247
     dde:	80 83       	st	Z, r24
     de0:	80 81       	ld	r24, Z
     de2:	88 7f       	andi	r24, 0xF8	; 248
     de4:	84 60       	ori	r24, 0x04	; 4
     de6:	80 83       	st	Z, r24
     de8:	e2 e9       	ldi	r30, 0x92	; 146
     dea:	f4 e0       	ldi	r31, 0x04	; 4
     dec:	80 81       	ld	r24, Z
     dee:	87 7f       	andi	r24, 0xF7	; 247
     df0:	80 83       	st	Z, r24
     df2:	80 81       	ld	r24, Z
     df4:	88 7f       	andi	r24, 0xF8	; 248
     df6:	84 60       	ori	r24, 0x04	; 4
     df8:	80 83       	st	Z, r24
     dfa:	e3 e9       	ldi	r30, 0x93	; 147
     dfc:	f4 e0       	ldi	r31, 0x04	; 4
     dfe:	80 81       	ld	r24, Z
     e00:	87 7f       	andi	r24, 0xF7	; 247
     e02:	80 83       	st	Z, r24
     e04:	80 81       	ld	r24, Z
     e06:	88 7f       	andi	r24, 0xF8	; 248
     e08:	84 60       	ori	r24, 0x04	; 4
     e0a:	80 83       	st	Z, r24
     e0c:	e4 eb       	ldi	r30, 0xB4	; 180
     e0e:	f4 e0       	ldi	r31, 0x04	; 4
     e10:	80 81       	ld	r24, Z
     e12:	87 7f       	andi	r24, 0xF7	; 247
     e14:	80 83       	st	Z, r24
     e16:	80 81       	ld	r24, Z
     e18:	88 7f       	andi	r24, 0xF8	; 248
     e1a:	84 60       	ori	r24, 0x04	; 4
     e1c:	80 83       	st	Z, r24
     e1e:	e5 eb       	ldi	r30, 0xB5	; 181
     e20:	f4 e0       	ldi	r31, 0x04	; 4
     e22:	80 81       	ld	r24, Z
     e24:	87 7f       	andi	r24, 0xF7	; 247
     e26:	80 83       	st	Z, r24
     e28:	80 81       	ld	r24, Z
     e2a:	88 7f       	andi	r24, 0xF8	; 248
     e2c:	84 60       	ori	r24, 0x04	; 4
     e2e:	80 83       	st	Z, r24
     e30:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <touch_disable_lowpower_measurement>
     e34:	89 e9       	ldi	r24, 0x99	; 153
     e36:	90 e4       	ldi	r25, 0x40	; 64
     e38:	0e 94 98 1e 	call	0x3d30	; 0x3d30 <qtm_ptc_init_acquisition_module>
     e3c:	87 e7       	ldi	r24, 0x77	; 119
     e3e:	95 e4       	ldi	r25, 0x45	; 69
     e40:	0e 94 4f 1f 	call	0x3e9e	; 0x3e9e <qtm_ptc_qtlib_assign_signal_memory>
     e44:	c0 e0       	ldi	r28, 0x00	; 0
     e46:	d0 e0       	ldi	r29, 0x00	; 0
     e48:	be 01       	movw	r22, r28
     e4a:	89 e9       	ldi	r24, 0x99	; 153
     e4c:	90 e4       	ldi	r25, 0x40	; 64
     e4e:	0e 94 c9 1f 	call	0x3f92	; 0x3f92 <qtm_enable_sensor_node>
     e52:	be 01       	movw	r22, r28
     e54:	89 e9       	ldi	r24, 0x99	; 153
     e56:	90 e4       	ldi	r25, 0x40	; 64
     e58:	0e 94 e8 1f 	call	0x3fd0	; 0x3fd0 <qtm_calibrate_sensor_node>
     e5c:	21 96       	adiw	r28, 0x01	; 1
     e5e:	c9 30       	cpi	r28, 0x09	; 9
     e60:	d1 05       	cpc	r29, r1
     e62:	91 f7       	brne	.-28     	; 0xe48 <touch_init+0x100>
     e64:	0a e4       	ldi	r16, 0x4A	; 74
     e66:	15 e4       	ldi	r17, 0x45	; 69
     e68:	c0 e0       	ldi	r28, 0x00	; 0
     e6a:	a8 01       	movw	r20, r16
     e6c:	6c 2f       	mov	r22, r28
     e6e:	86 e6       	ldi	r24, 0x66	; 102
     e70:	90 e4       	ldi	r25, 0x40	; 64
     e72:	0e 94 ab 0d 	call	0x1b56	; 0x1b56 <qtm_init_sensor_key>
     e76:	cf 5f       	subi	r28, 0xFF	; 255
     e78:	0b 5f       	subi	r16, 0xFB	; 251
     e7a:	1f 4f       	sbci	r17, 0xFF	; 255
     e7c:	c9 30       	cpi	r28, 0x09	; 9
     e7e:	a9 f7       	brne	.-22     	; 0xe6a <touch_init+0x122>
     e80:	85 e5       	ldi	r24, 0x55	; 85
     e82:	90 e4       	ldi	r25, 0x40	; 64
     e84:	0e 94 a4 1a 	call	0x3548	; 0x3548 <qtm_init_surface_cs>
     e88:	0e 94 3b 13 	call	0x2676	; 0x2676 <qtm_init_gestures_2d>
     e8c:	df 91       	pop	r29
     e8e:	cf 91       	pop	r28
     e90:	1f 91       	pop	r17
     e92:	0f 91       	pop	r16
     e94:	08 95       	ret

00000e96 <touch_process>:
     e96:	80 91 0f 44 	lds	r24, 0x440F	; 0x80440f <time_to_measure_touch_flag>
     e9a:	81 30       	cpi	r24, 0x01	; 1
     e9c:	51 f4       	brne	.+20     	; 0xeb2 <touch_process+0x1c>
     e9e:	68 e4       	ldi	r22, 0x48	; 72
     ea0:	76 e0       	ldi	r23, 0x06	; 6
     ea2:	89 e9       	ldi	r24, 0x99	; 153
     ea4:	90 e4       	ldi	r25, 0x40	; 64
     ea6:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <qtm_ptc_start_measurement_seq>
     eaa:	81 11       	cpse	r24, r1
     eac:	02 c0       	rjmp	.+4      	; 0xeb2 <touch_process+0x1c>
     eae:	10 92 0f 44 	sts	0x440F, r1	; 0x80440f <time_to_measure_touch_flag>
     eb2:	80 91 0e 44 	lds	r24, 0x440E	; 0x80440e <touch_postprocess_request>
     eb6:	81 30       	cpi	r24, 0x01	; 1
     eb8:	09 f0       	breq	.+2      	; 0xebc <touch_process+0x26>
     eba:	8e c0       	rjmp	.+284    	; 0xfd8 <touch_process+0x142>
     ebc:	10 92 0e 44 	sts	0x440E, r1	; 0x80440e <touch_postprocess_request>
     ec0:	0e 94 3f 1c 	call	0x387e	; 0x387e <qtm_acquisition_process>
     ec4:	81 11       	cpse	r24, r1
     ec6:	1c c0       	rjmp	.+56     	; 0xf00 <touch_process+0x6a>
     ec8:	86 e6       	ldi	r24, 0x66	; 102
     eca:	90 e4       	ldi	r25, 0x40	; 64
     ecc:	0e 94 ca 0d 	call	0x1b94	; 0x1b94 <qtm_key_sensors_process>
     ed0:	88 23       	and	r24, r24
     ed2:	19 f0       	breq	.+6      	; 0xeda <touch_process+0x44>
     ed4:	82 e0       	ldi	r24, 0x02	; 2
     ed6:	80 93 0c 44 	sts	0x440C, r24	; 0x80440c <module_error_code>
     eda:	85 e5       	ldi	r24, 0x55	; 85
     edc:	90 e4       	ldi	r25, 0x40	; 64
     ede:	0e 94 1b 18 	call	0x3036	; 0x3036 <qtm_surface_cs_process>
     ee2:	88 23       	and	r24, r24
     ee4:	19 f0       	breq	.+6      	; 0xeec <touch_process+0x56>
     ee6:	83 e0       	ldi	r24, 0x03	; 3
     ee8:	80 93 0c 44 	sts	0x440C, r24	; 0x80440c <module_error_code>
     eec:	87 e3       	ldi	r24, 0x37	; 55
     eee:	90 e4       	ldi	r25, 0x40	; 64
     ef0:	0e 94 5e 13 	call	0x26bc	; 0x26bc <qtm_gestures_2d_process>
     ef4:	88 23       	and	r24, r24
     ef6:	39 f0       	breq	.+14     	; 0xf06 <touch_process+0x70>
     ef8:	84 e0       	ldi	r24, 0x04	; 4
     efa:	80 93 0c 44 	sts	0x440C, r24	; 0x80440c <module_error_code>
     efe:	03 c0       	rjmp	.+6      	; 0xf06 <touch_process+0x70>
     f00:	81 e0       	ldi	r24, 0x01	; 1
     f02:	80 93 0c 44 	sts	0x440C, r24	; 0x80440c <module_error_code>
     f06:	e0 91 66 40 	lds	r30, 0x4066	; 0x804066 <qtlib_key_set1>
     f0a:	f0 91 67 40 	lds	r31, 0x4067	; 0x804067 <qtlib_key_set1+0x1>
     f0e:	80 81       	ld	r24, Z
     f10:	88 23       	and	r24, r24
     f12:	24 f4       	brge	.+8      	; 0xf1c <touch_process+0x86>
     f14:	81 e0       	ldi	r24, 0x01	; 1
     f16:	80 93 0f 44 	sts	0x440F, r24	; 0x80440f <time_to_measure_touch_flag>
     f1a:	5a c0       	rjmp	.+180    	; 0xfd0 <touch_process+0x13a>
     f1c:	81 e0       	ldi	r24, 0x01	; 1
     f1e:	80 93 0d 44 	sts	0x440D, r24	; 0x80440d <measurement_done_touch>
     f22:	80 91 44 45 	lds	r24, 0x4544	; 0x804544 <qtlib_key_grp_data_set1>
     f26:	80 ff       	sbrs	r24, 0
     f28:	05 c0       	rjmp	.+10     	; 0xf34 <touch_process+0x9e>
     f2a:	10 92 0a 44 	sts	0x440A, r1	; 0x80440a <time_since_touch>
     f2e:	10 92 0b 44 	sts	0x440B, r1	; 0x80440b <time_since_touch+0x1>
     f32:	44 c0       	rjmp	.+136    	; 0xfbc <touch_process+0x126>
     f34:	80 91 0a 44 	lds	r24, 0x440A	; 0x80440a <time_since_touch>
     f38:	90 91 0b 44 	lds	r25, 0x440B	; 0x80440b <time_since_touch+0x1>
     f3c:	80 32       	cpi	r24, 0x20	; 32
     f3e:	9e 44       	sbci	r25, 0x4E	; 78
     f40:	08 f4       	brcc	.+2      	; 0xf44 <touch_process+0xae>
     f42:	3c c0       	rjmp	.+120    	; 0xfbc <touch_process+0x126>
     f44:	6f e8       	ldi	r22, 0x8F	; 143
     f46:	76 e0       	ldi	r23, 0x06	; 6
     f48:	83 e9       	ldi	r24, 0x93	; 147
     f4a:	90 e4       	ldi	r25, 0x40	; 64
     f4c:	0e 94 29 20 	call	0x4052	; 0x4052 <qtm_autoscan_sensor_node>
     f50:	20 91 08 44 	lds	r18, 0x4408	; 0x804408 <measurement_period_store>
     f54:	30 91 09 44 	lds	r19, 0x4409	; 0x804409 <measurement_period_store+0x1>
     f58:	20 32       	cpi	r18, 0x20	; 32
     f5a:	3e 44       	sbci	r19, 0x4E	; 78
     f5c:	c9 f1       	breq	.+114    	; 0xfd0 <touch_process+0x13a>
     f5e:	81 11       	cpse	r24, r1
     f60:	37 c0       	rjmp	.+110    	; 0xfd0 <touch_process+0x13a>
     f62:	e0 e0       	ldi	r30, 0x00	; 0
     f64:	f2 e0       	ldi	r31, 0x02	; 2
     f66:	8b e0       	ldi	r24, 0x0B	; 11
     f68:	81 8b       	std	Z+17, r24	; 0x11
     f6a:	82 e0       	ldi	r24, 0x02	; 2
     f6c:	85 a7       	std	Z+45, r24	; 0x2d
     f6e:	e0 e4       	ldi	r30, 0x40	; 64
     f70:	f1 e0       	ldi	r31, 0x01	; 1
     f72:	81 81       	ldd	r24, Z+1	; 0x01
     f74:	81 11       	cpse	r24, r1
     f76:	fd cf       	rjmp	.-6      	; 0xf72 <touch_process+0xdc>
     f78:	80 e8       	ldi	r24, 0x80	; 128
     f7a:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <__TEXT_REGION_LENGTH__+0x7e0140>
     f7e:	e0 e4       	ldi	r30, 0x40	; 64
     f80:	f1 e0       	ldi	r31, 0x01	; 1
     f82:	81 89       	ldd	r24, Z+17	; 0x11
     f84:	81 11       	cpse	r24, r1
     f86:	fd cf       	rjmp	.-6      	; 0xf82 <touch_process+0xec>
     f88:	85 e1       	ldi	r24, 0x15	; 21
     f8a:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <__TEXT_REGION_LENGTH__+0x7e0150>
     f8e:	80 e2       	ldi	r24, 0x20	; 32
     f90:	9e e4       	ldi	r25, 0x4E	; 78
     f92:	80 93 08 44 	sts	0x4408, r24	; 0x804408 <measurement_period_store>
     f96:	90 93 09 44 	sts	0x4409, r25	; 0x804409 <measurement_period_store+0x1>
     f9a:	0e 94 4c 06 	call	0xc98	; 0xc98 <Timer_set_period>
     f9e:	e0 e4       	ldi	r30, 0x40	; 64
     fa0:	f1 e0       	ldi	r31, 0x01	; 1
     fa2:	81 81       	ldd	r24, Z+1	; 0x01
     fa4:	81 11       	cpse	r24, r1
     fa6:	fd cf       	rjmp	.-6      	; 0xfa2 <touch_process+0x10c>
     fa8:	81 e8       	ldi	r24, 0x81	; 129
     faa:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <__TEXT_REGION_LENGTH__+0x7e0140>
     fae:	e2 e8       	ldi	r30, 0x82	; 130
     fb0:	f4 e4       	ldi	r31, 0x44	; 68
     fb2:	80 81       	ld	r24, Z
     fb4:	81 60       	ori	r24, 0x01	; 1
     fb6:	80 83       	st	Z, r24
     fb8:	88 95       	sleep
     fba:	0a c0       	rjmp	.+20     	; 0xfd0 <touch_process+0x13a>
     fbc:	80 91 08 44 	lds	r24, 0x4408	; 0x804408 <measurement_period_store>
     fc0:	90 91 09 44 	lds	r25, 0x4409	; 0x804409 <measurement_period_store+0x1>
     fc4:	44 97       	sbiw	r24, 0x14	; 20
     fc6:	21 f0       	breq	.+8      	; 0xfd0 <touch_process+0x13a>
     fc8:	0e 94 b1 20 	call	0x4162	; 0x4162 <qtm_autoscan_node_cancel>
     fcc:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <touch_disable_lowpower_measurement>
     fd0:	f8 94       	cli
     fd2:	0e 94 a3 02 	call	0x546	; 0x546 <Krono_UpdateBuffer>
     fd6:	78 94       	sei
     fd8:	0e 94 60 05 	call	0xac0	; 0xac0 <uart_process>
     fdc:	08 95       	ret

00000fde <touch_timer_handler>:
     fde:	81 e0       	ldi	r24, 0x01	; 1
     fe0:	80 93 0f 44 	sts	0x440F, r24	; 0x80440f <time_to_measure_touch_flag>
     fe4:	80 91 08 44 	lds	r24, 0x4408	; 0x804408 <measurement_period_store>
     fe8:	90 91 09 44 	lds	r25, 0x4409	; 0x804409 <measurement_period_store+0x1>
     fec:	0e 94 a0 0d 	call	0x1b40	; 0x1b40 <qtm_update_qtlib_timer>
     ff0:	20 91 08 44 	lds	r18, 0x4408	; 0x804408 <measurement_period_store>
     ff4:	30 91 09 44 	lds	r19, 0x4409	; 0x804409 <measurement_period_store+0x1>
     ff8:	ad ec       	ldi	r26, 0xCD	; 205
     ffa:	bc ec       	ldi	r27, 0xCC	; 204
     ffc:	0e 94 7c 21 	call	0x42f8	; 0x42f8 <__umulhisi3>
    1000:	96 95       	lsr	r25
    1002:	87 95       	ror	r24
    1004:	96 95       	lsr	r25
    1006:	87 95       	ror	r24
    1008:	96 95       	lsr	r25
    100a:	87 95       	ror	r24
    100c:	0e 94 51 13 	call	0x26a2	; 0x26a2 <qtm_update_gesture_2d_timer>
    1010:	20 91 08 44 	lds	r18, 0x4408	; 0x804408 <measurement_period_store>
    1014:	30 91 09 44 	lds	r19, 0x4409	; 0x804409 <measurement_period_store+0x1>
    1018:	80 91 0a 44 	lds	r24, 0x440A	; 0x80440a <time_since_touch>
    101c:	90 91 0b 44 	lds	r25, 0x440B	; 0x80440b <time_since_touch+0x1>
    1020:	a9 01       	movw	r20, r18
    1022:	40 95       	com	r20
    1024:	50 95       	com	r21
    1026:	84 17       	cp	r24, r20
    1028:	95 07       	cpc	r25, r21
    102a:	38 f4       	brcc	.+14     	; 0x103a <touch_timer_handler+0x5c>
    102c:	82 0f       	add	r24, r18
    102e:	93 1f       	adc	r25, r19
    1030:	80 93 0a 44 	sts	0x440A, r24	; 0x80440a <time_since_touch>
    1034:	90 93 0b 44 	sts	0x440B, r25	; 0x80440b <time_since_touch+0x1>
    1038:	08 95       	ret
    103a:	8f ef       	ldi	r24, 0xFF	; 255
    103c:	9f ef       	ldi	r25, 0xFF	; 255
    103e:	80 93 0a 44 	sts	0x440A, r24	; 0x80440a <time_since_touch>
    1042:	90 93 0b 44 	sts	0x440B, r25	; 0x80440b <time_since_touch+0x1>
    1046:	08 95       	ret

00001048 <__vector_27>:
#if defined(__ICCAVR__)
ISR(QTML_PTC_vect_iar)
#else
ISR(QTML_PTC_vect)
#endif
{
    1048:	1f 92       	push	r1
    104a:	0f 92       	push	r0
    104c:	0f b6       	in	r0, 0x3f	; 63
    104e:	0f 92       	push	r0
    1050:	11 24       	eor	r1, r1
    1052:	0b b6       	in	r0, 0x3b	; 59
    1054:	0f 92       	push	r0
    1056:	2f 93       	push	r18
    1058:	3f 93       	push	r19
    105a:	4f 93       	push	r20
    105c:	5f 93       	push	r21
    105e:	6f 93       	push	r22
    1060:	7f 93       	push	r23
    1062:	8f 93       	push	r24
    1064:	9f 93       	push	r25
    1066:	af 93       	push	r26
    1068:	bf 93       	push	r27
    106a:	ef 93       	push	r30
    106c:	ff 93       	push	r31
	qtm_avr_da_ptc_handler_eoc();
    106e:	0e 94 06 21 	call	0x420c	; 0x420c <qtm_avr_da_ptc_handler_eoc>
}
    1072:	ff 91       	pop	r31
    1074:	ef 91       	pop	r30
    1076:	bf 91       	pop	r27
    1078:	af 91       	pop	r26
    107a:	9f 91       	pop	r25
    107c:	8f 91       	pop	r24
    107e:	7f 91       	pop	r23
    1080:	6f 91       	pop	r22
    1082:	5f 91       	pop	r21
    1084:	4f 91       	pop	r20
    1086:	3f 91       	pop	r19
    1088:	2f 91       	pop	r18
    108a:	0f 90       	pop	r0
    108c:	0b be       	out	0x3b, r0	; 59
    108e:	0f 90       	pop	r0
    1090:	0f be       	out	0x3f, r0	; 63
    1092:	0f 90       	pop	r0
    1094:	1f 90       	pop	r1
    1096:	18 95       	reti

00001098 <GenerateNewFood>:
Input  : none
Output : none
Notes  :
============================================================================*/
void GenerateNewFood(void)
{
    1098:	4f 92       	push	r4
    109a:	5f 92       	push	r5
    109c:	6f 92       	push	r6
    109e:	7f 92       	push	r7
    10a0:	8f 92       	push	r8
    10a2:	9f 92       	push	r9
    10a4:	af 92       	push	r10
    10a6:	bf 92       	push	r11
    10a8:	df 92       	push	r13
    10aa:	ef 92       	push	r14
    10ac:	ff 92       	push	r15
    10ae:	0f 93       	push	r16
    10b0:	1f 93       	push	r17
    10b2:	cf 93       	push	r28
    10b4:	df 93       	push	r29
	uint8_t X, Y;
	Flags.NewFoodCreated = 0;
    10b6:	e1 e8       	ldi	r30, 0x81	; 129
    10b8:	f4 e4       	ldi	r31, 0x44	; 68
    10ba:	80 81       	ld	r24, Z
    10bc:	8b 7f       	andi	r24, 0xFB	; 251
    10be:	80 83       	st	Z, r24
	srandom(TimCount*random());
    10c0:	c0 91 80 44 	lds	r28, 0x4480	; 0x804480 <TimCount>
    10c4:	0e 94 2d 22 	call	0x445a	; 0x445a <random>
    10c8:	9b 01       	movw	r18, r22
    10ca:	ac 01       	movw	r20, r24
    10cc:	ac 2f       	mov	r26, r28
    10ce:	b0 e0       	ldi	r27, 0x00	; 0
    10d0:	0e 94 8b 21 	call	0x4316	; 0x4316 <__muluhisi3>
    10d4:	0e 94 7b 22 	call	0x44f6	; 0x44f6 <srandom>
	while(! Flags.NewFoodCreated)
    10d8:	c1 e8       	ldi	r28, 0x81	; 129
    10da:	d4 e4       	ldi	r29, 0x44	; 68
		random();
		X = (random()+1) % (SIZE_X);
		random();
		Y = (random()+1) % (SIZE_Y);
		
		Food.PosX = X;
    10dc:	00 e1       	ldi	r16, 0x10	; 16
    10de:	14 e4       	ldi	r17, 0x44	; 68
		Food.PosY = Y;
		
		Flags.NewFoodCreated = 1;
		
		//Check for collision with Snake
		for(uint8_t i=0; i<Snake.Len; i++)
    10e0:	0f 2e       	mov	r0, r31
    10e2:	f0 e7       	ldi	r31, 0x70	; 112
    10e4:	ef 2e       	mov	r14, r31
    10e6:	f3 e4       	ldi	r31, 0x43	; 67
    10e8:	ff 2e       	mov	r15, r31
    10ea:	f0 2d       	mov	r31, r0
void GenerateNewFood(void)
{
	uint8_t X, Y;
	Flags.NewFoodCreated = 0;
	srandom(TimCount*random());
	while(! Flags.NewFoodCreated)
    10ec:	4f c0       	rjmp	.+158    	; 0x118c <GenerateNewFood+0xf4>
	{
		random();
    10ee:	0e 94 2d 22 	call	0x445a	; 0x445a <random>
		X = (random()+1) % (SIZE_X);
    10f2:	0e 94 2d 22 	call	0x445a	; 0x445a <random>
    10f6:	4b 01       	movw	r8, r22
    10f8:	5c 01       	movw	r10, r24
		random();
    10fa:	0e 94 2d 22 	call	0x445a	; 0x445a <random>
		Y = (random()+1) % (SIZE_Y);
    10fe:	0e 94 2d 22 	call	0x445a	; 0x445a <random>
    1102:	2b 01       	movw	r4, r22
    1104:	3c 01       	movw	r6, r24
		
		Food.PosX = X;
    1106:	c5 01       	movw	r24, r10
    1108:	b4 01       	movw	r22, r8
    110a:	6f 5f       	subi	r22, 0xFF	; 255
    110c:	7f 4f       	sbci	r23, 0xFF	; 255
    110e:	8f 4f       	sbci	r24, 0xFF	; 255
    1110:	9f 4f       	sbci	r25, 0xFF	; 255
    1112:	27 e0       	ldi	r18, 0x07	; 7
    1114:	30 e0       	ldi	r19, 0x00	; 0
    1116:	40 e0       	ldi	r20, 0x00	; 0
    1118:	50 e0       	ldi	r21, 0x00	; 0
    111a:	0e 94 5d 21 	call	0x42ba	; 0x42ba <__divmodsi4>
    111e:	d6 2e       	mov	r13, r22
    1120:	f8 01       	movw	r30, r16
    1122:	60 83       	st	Z, r22
		Food.PosY = Y;
    1124:	c3 01       	movw	r24, r6
    1126:	b2 01       	movw	r22, r4
    1128:	6f 5f       	subi	r22, 0xFF	; 255
    112a:	7f 4f       	sbci	r23, 0xFF	; 255
    112c:	8f 4f       	sbci	r24, 0xFF	; 255
    112e:	9f 4f       	sbci	r25, 0xFF	; 255
    1130:	27 e0       	ldi	r18, 0x07	; 7
    1132:	30 e0       	ldi	r19, 0x00	; 0
    1134:	40 e0       	ldi	r20, 0x00	; 0
    1136:	50 e0       	ldi	r21, 0x00	; 0
    1138:	0e 94 5d 21 	call	0x42ba	; 0x42ba <__divmodsi4>
    113c:	f8 01       	movw	r30, r16
    113e:	61 83       	std	Z+1, r22	; 0x01
		
		Flags.NewFoodCreated = 1;
    1140:	88 81       	ld	r24, Y
    1142:	84 60       	ori	r24, 0x04	; 4
    1144:	88 83       	st	Y, r24
		
		//Check for collision with Snake
		for(uint8_t i=0; i<Snake.Len; i++)
    1146:	f7 01       	movw	r30, r14
    1148:	21 81       	ldd	r18, Z+1	; 0x01
    114a:	22 23       	and	r18, r18
    114c:	f9 f0       	breq	.+62     	; 0x118c <GenerateNewFood+0xf4>
    114e:	e2 e7       	ldi	r30, 0x72	; 114
    1150:	f3 e4       	ldi	r31, 0x43	; 67
    1152:	21 50       	subi	r18, 0x01	; 1
    1154:	30 e0       	ldi	r19, 0x00	; 0
    1156:	22 0f       	add	r18, r18
    1158:	33 1f       	adc	r19, r19
    115a:	2c 58       	subi	r18, 0x8C	; 140
    115c:	3c 4b       	sbci	r19, 0xBC	; 188
		{
			if((Food.PosX == Snake.Pos[i][0])&&(Food.PosY == Snake.Pos[i][1]))
    115e:	4d 2d       	mov	r20, r13
    1160:	dd 0c       	add	r13, r13
    1162:	55 0b       	sbc	r21, r21
    1164:	06 2e       	mov	r0, r22
    1166:	00 0c       	add	r0, r0
    1168:	77 0b       	sbc	r23, r23
    116a:	80 81       	ld	r24, Z
    116c:	90 e0       	ldi	r25, 0x00	; 0
    116e:	48 17       	cp	r20, r24
    1170:	59 07       	cpc	r21, r25
    1172:	41 f4       	brne	.+16     	; 0x1184 <GenerateNewFood+0xec>
    1174:	81 81       	ldd	r24, Z+1	; 0x01
    1176:	90 e0       	ldi	r25, 0x00	; 0
    1178:	68 17       	cp	r22, r24
    117a:	79 07       	cpc	r23, r25
    117c:	19 f4       	brne	.+6      	; 0x1184 <GenerateNewFood+0xec>
			{
				Flags.NewFoodCreated = 0;
    117e:	88 81       	ld	r24, Y
    1180:	8b 7f       	andi	r24, 0xFB	; 251
    1182:	88 83       	st	Y, r24
    1184:	32 96       	adiw	r30, 0x02	; 2
		Food.PosY = Y;
		
		Flags.NewFoodCreated = 1;
		
		//Check for collision with Snake
		for(uint8_t i=0; i<Snake.Len; i++)
    1186:	e2 17       	cp	r30, r18
    1188:	f3 07       	cpc	r31, r19
    118a:	79 f7       	brne	.-34     	; 0x116a <GenerateNewFood+0xd2>
void GenerateNewFood(void)
{
	uint8_t X, Y;
	Flags.NewFoodCreated = 0;
	srandom(TimCount*random());
	while(! Flags.NewFoodCreated)
    118c:	88 81       	ld	r24, Y
    118e:	82 ff       	sbrs	r24, 2
    1190:	ae cf       	rjmp	.-164    	; 0x10ee <GenerateNewFood+0x56>
			{
				Flags.NewFoodCreated = 0;
			}
		}
	}
}
    1192:	df 91       	pop	r29
    1194:	cf 91       	pop	r28
    1196:	1f 91       	pop	r17
    1198:	0f 91       	pop	r16
    119a:	ff 90       	pop	r15
    119c:	ef 90       	pop	r14
    119e:	df 90       	pop	r13
    11a0:	bf 90       	pop	r11
    11a2:	af 90       	pop	r10
    11a4:	9f 90       	pop	r9
    11a6:	8f 90       	pop	r8
    11a8:	7f 90       	pop	r7
    11aa:	6f 90       	pop	r6
    11ac:	5f 90       	pop	r5
    11ae:	4f 90       	pop	r4
    11b0:	08 95       	ret

000011b2 <SnakeInit>:
Notes  :
============================================================================*/
void SnakeInit(void)
{
	//Clean the Structure
	Snake = Empty;
    11b2:	84 e6       	ldi	r24, 0x64	; 100
    11b4:	e3 ea       	ldi	r30, 0xA3	; 163
    11b6:	f1 e4       	ldi	r31, 0x41	; 65
    11b8:	a0 e7       	ldi	r26, 0x70	; 112
    11ba:	b3 e4       	ldi	r27, 0x43	; 67
    11bc:	01 90       	ld	r0, Z+
    11be:	0d 92       	st	X+, r0
    11c0:	8a 95       	dec	r24
    11c2:	e1 f7       	brne	.-8      	; 0x11bc <SnakeInit+0xa>
	
	//Initialize with default Values
	Snake.Dir = LEFT;
    11c4:	e0 e7       	ldi	r30, 0x70	; 112
    11c6:	f3 e4       	ldi	r31, 0x43	; 67
    11c8:	82 e0       	ldi	r24, 0x02	; 2
    11ca:	80 83       	st	Z, r24
	Snake.Len = 2;
    11cc:	81 83       	std	Z+1, r24	; 0x01
	
	for(uint8_t i=0; i<Snake.Len; i++)
	{
		Snake.Pos[i][0] = SIZE_X / 2;
    11ce:	83 e0       	ldi	r24, 0x03	; 3
    11d0:	82 83       	std	Z+2, r24	; 0x02
		Snake.Pos[i][1] = SIZE_Y / 2 + i;
    11d2:	83 83       	std	Z+3, r24	; 0x03
	Snake.Dir = LEFT;
	Snake.Len = 2;
	
	for(uint8_t i=0; i<Snake.Len; i++)
	{
		Snake.Pos[i][0] = SIZE_X / 2;
    11d4:	84 83       	std	Z+4, r24	; 0x04
		Snake.Pos[i][1] = SIZE_Y / 2 + i;
    11d6:	84 e0       	ldi	r24, 0x04	; 4
    11d8:	85 83       	std	Z+5, r24	; 0x05
	}
	
	//Generate Food
	GenerateNewFood();
    11da:	0e 94 4c 08 	call	0x1098	; 0x1098 <GenerateNewFood>
	
	//Display Initial Snake
	LoadLedMatrix();
    11de:	0e 94 7f 01 	call	0x2fe	; 0x2fe <LoadLedMatrix>
	UpdateDisplay(I2C_ADD, I2CArray, 18);
    11e2:	42 e1       	ldi	r20, 0x12	; 18
    11e4:	64 e0       	ldi	r22, 0x04	; 4
    11e6:	70 e4       	ldi	r23, 0x40	; 64
    11e8:	80 e6       	ldi	r24, 0x60	; 96
    11ea:	0e 94 19 01 	call	0x232	; 0x232 <UpdateDisplay>
    11ee:	08 95       	ret

000011f0 <AdvanceSnake>:
Input  : none
Output : none
Notes  :
============================================================================*/
void AdvanceSnake(void)
{
    11f0:	cf 93       	push	r28
	//Calculate Next coordinate depending on direction
	struct Location Next;
	switch (Snake.Dir)
    11f2:	80 91 70 43 	lds	r24, 0x4370	; 0x804370 <Snake>
    11f6:	81 30       	cpi	r24, 0x01	; 1
    11f8:	51 f0       	breq	.+20     	; 0x120e <AdvanceSnake+0x1e>
    11fa:	18 f0       	brcs	.+6      	; 0x1202 <AdvanceSnake+0x12>
    11fc:	83 30       	cpi	r24, 0x03	; 3
    11fe:	69 f0       	breq	.+26     	; 0x121a <AdvanceSnake+0x2a>
    1200:	12 c0       	rjmp	.+36     	; 0x1226 <AdvanceSnake+0x36>
	{
		case UP :
		Next.PosX = Snake.Pos[0][0] + 1;
    1202:	e0 e7       	ldi	r30, 0x70	; 112
    1204:	f3 e4       	ldi	r31, 0x43	; 67
    1206:	72 81       	ldd	r23, Z+2	; 0x02
    1208:	7f 5f       	subi	r23, 0xFF	; 255
		Next.PosY = Snake.Pos[0][1];
    120a:	c3 81       	ldd	r28, Z+3	; 0x03
		break;
    120c:	11 c0       	rjmp	.+34     	; 0x1230 <AdvanceSnake+0x40>
		case DOWN :
		Next.PosX = Snake.Pos[0][0] - 1;
    120e:	e0 e7       	ldi	r30, 0x70	; 112
    1210:	f3 e4       	ldi	r31, 0x43	; 67
    1212:	72 81       	ldd	r23, Z+2	; 0x02
    1214:	71 50       	subi	r23, 0x01	; 1
		Next.PosY = Snake.Pos[0][1];
    1216:	c3 81       	ldd	r28, Z+3	; 0x03
		break;
    1218:	0b c0       	rjmp	.+22     	; 0x1230 <AdvanceSnake+0x40>
		case RIGHT :
		Next.PosX = Snake.Pos[0][0];
    121a:	e0 e7       	ldi	r30, 0x70	; 112
    121c:	f3 e4       	ldi	r31, 0x43	; 67
    121e:	72 81       	ldd	r23, Z+2	; 0x02
		Next.PosY = Snake.Pos[0][1] + 1;
    1220:	c3 81       	ldd	r28, Z+3	; 0x03
    1222:	cf 5f       	subi	r28, 0xFF	; 255
		break;
    1224:	05 c0       	rjmp	.+10     	; 0x1230 <AdvanceSnake+0x40>
		case LEFT :
		default :
		Next.PosX = Snake.Pos[0][0];
    1226:	e0 e7       	ldi	r30, 0x70	; 112
    1228:	f3 e4       	ldi	r31, 0x43	; 67
    122a:	72 81       	ldd	r23, Z+2	; 0x02
		Next.PosY = Snake.Pos[0][1] - 1;
    122c:	c3 81       	ldd	r28, Z+3	; 0x03
    122e:	c1 50       	subi	r28, 0x01	; 1
		break;
	}
	
	//Check for boundary condition
	if(Next.PosX < 0)
    1230:	77 23       	and	r23, r23
    1232:	24 f0       	brlt	.+8      	; 0x123c <AdvanceSnake+0x4c>
	{
		Next.PosX = SIZE_X - 1;
	}
	else if(Next.PosX >= SIZE_X)
    1234:	77 30       	cpi	r23, 0x07	; 7
    1236:	1c f0       	brlt	.+6      	; 0x123e <AdvanceSnake+0x4e>
	{
		Next.PosX = 0;
    1238:	70 e0       	ldi	r23, 0x00	; 0
    123a:	01 c0       	rjmp	.+2      	; 0x123e <AdvanceSnake+0x4e>
	}
	
	//Check for boundary condition
	if(Next.PosX < 0)
	{
		Next.PosX = SIZE_X - 1;
    123c:	76 e0       	ldi	r23, 0x06	; 6
	else if(Next.PosX >= SIZE_X)
	{
		Next.PosX = 0;
	}
	
	if(Next.PosY < 0)
    123e:	cc 23       	and	r28, r28
    1240:	24 f0       	brlt	.+8      	; 0x124a <AdvanceSnake+0x5a>
	{
		Next.PosY = SIZE_Y - 1;
	}
	else if(Next.PosY >= SIZE_Y)
    1242:	c7 30       	cpi	r28, 0x07	; 7
    1244:	1c f0       	brlt	.+6      	; 0x124c <AdvanceSnake+0x5c>
	{
		Next.PosY = 0;
    1246:	c0 e0       	ldi	r28, 0x00	; 0
    1248:	01 c0       	rjmp	.+2      	; 0x124c <AdvanceSnake+0x5c>
		Next.PosX = 0;
	}
	
	if(Next.PosY < 0)
	{
		Next.PosY = SIZE_Y - 1;
    124a:	c6 e0       	ldi	r28, 0x06	; 6
	{
		Next.PosY = 0;
	}
	
	//Check for Collision
	for(uint8_t i=0; i<Snake.Len; i++)
    124c:	60 91 71 43 	lds	r22, 0x4371	; 0x804371 <Snake+0x1>
    1250:	66 23       	and	r22, r22
    1252:	09 f4       	brne	.+2      	; 0x1256 <AdvanceSnake+0x66>
    1254:	44 c0       	rjmp	.+136    	; 0x12de <AdvanceSnake+0xee>
    1256:	e2 e7       	ldi	r30, 0x72	; 114
    1258:	f3 e4       	ldi	r31, 0x43	; 67
    125a:	2f ef       	ldi	r18, 0xFF	; 255
    125c:	26 0f       	add	r18, r22
    125e:	30 e0       	ldi	r19, 0x00	; 0
    1260:	22 0f       	add	r18, r18
    1262:	33 1f       	adc	r19, r19
    1264:	2c 58       	subi	r18, 0x8C	; 140
    1266:	3c 4b       	sbci	r19, 0xBC	; 188
	{
		if((Next.PosX == Snake.Pos[i][0])&&(Next.PosY == Snake.Pos[i][1]))
    1268:	47 2f       	mov	r20, r23
    126a:	07 2e       	mov	r0, r23
    126c:	00 0c       	add	r0, r0
    126e:	55 0b       	sbc	r21, r21
    1270:	ac 2f       	mov	r26, r28
    1272:	0c 2e       	mov	r0, r28
    1274:	00 0c       	add	r0, r0
    1276:	bb 0b       	sbc	r27, r27
    1278:	80 81       	ld	r24, Z
    127a:	90 e0       	ldi	r25, 0x00	; 0
    127c:	48 17       	cp	r20, r24
    127e:	59 07       	cpc	r21, r25
    1280:	59 f4       	brne	.+22     	; 0x1298 <AdvanceSnake+0xa8>
    1282:	81 81       	ldd	r24, Z+1	; 0x01
    1284:	90 e0       	ldi	r25, 0x00	; 0
    1286:	a8 17       	cp	r26, r24
    1288:	b9 07       	cpc	r27, r25
    128a:	31 f4       	brne	.+12     	; 0x1298 <AdvanceSnake+0xa8>
		{
			Flags.GameOver = 1;
    128c:	e1 e8       	ldi	r30, 0x81	; 129
    128e:	f4 e4       	ldi	r31, 0x44	; 68
    1290:	80 81       	ld	r24, Z
    1292:	82 60       	ori	r24, 0x02	; 2
    1294:	80 83       	st	Z, r24
			return;
    1296:	48 c0       	rjmp	.+144    	; 0x1328 <AdvanceSnake+0x138>
    1298:	32 96       	adiw	r30, 0x02	; 2
	{
		Next.PosY = 0;
	}
	
	//Check for Collision
	for(uint8_t i=0; i<Snake.Len; i++)
    129a:	2e 17       	cp	r18, r30
    129c:	3f 07       	cpc	r19, r31
    129e:	61 f7       	brne	.-40     	; 0x1278 <AdvanceSnake+0x88>
    12a0:	3e c0       	rjmp	.+124    	; 0x131e <AdvanceSnake+0x12e>
	}
	
	//check for game complete
	if(Snake.Len >= 47)
	{
		Flags.GameOver = 1;
    12a2:	e1 e8       	ldi	r30, 0x81	; 129
    12a4:	f4 e4       	ldi	r31, 0x44	; 68
    12a6:	80 81       	ld	r24, Z
    12a8:	82 60       	ori	r24, 0x02	; 2
    12aa:	80 83       	st	Z, r24
		return;
    12ac:	3d c0       	rjmp	.+122    	; 0x1328 <AdvanceSnake+0x138>
	}
	
	//Advance Snake and Grow if food found
	for(uint8_t i=Snake.Len; i>0; i--)
	{
		Snake.Pos[i][0] = Snake.Pos[i-1][0];
    12ae:	82 2f       	mov	r24, r18
    12b0:	90 e0       	ldi	r25, 0x00	; 0
    12b2:	dc 01       	movw	r26, r24
    12b4:	aa 0f       	add	r26, r26
    12b6:	bb 1f       	adc	r27, r27
    12b8:	a0 59       	subi	r26, 0x90	; 144
    12ba:	bc 4b       	sbci	r27, 0xBC	; 188
    12bc:	3c 91       	ld	r19, X
    12be:	fc 01       	movw	r30, r24
    12c0:	ee 0f       	add	r30, r30
    12c2:	ff 1f       	adc	r31, r31
    12c4:	ee 58       	subi	r30, 0x8E	; 142
    12c6:	fc 4b       	sbci	r31, 0xBC	; 188
    12c8:	30 83       	st	Z, r19
		Snake.Pos[i][1] = Snake.Pos[i-1][1];
    12ca:	88 0f       	add	r24, r24
    12cc:	99 1f       	adc	r25, r25
    12ce:	fc 01       	movw	r30, r24
    12d0:	e2 59       	subi	r30, 0x92	; 146
    12d2:	fc 4b       	sbci	r31, 0xBC	; 188
    12d4:	83 81       	ldd	r24, Z+3	; 0x03
    12d6:	13 96       	adiw	r26, 0x03	; 3
    12d8:	8c 93       	st	X, r24
		Flags.GameOver = 1;
		return;
	}
	
	//Advance Snake and Grow if food found
	for(uint8_t i=Snake.Len; i>0; i--)
    12da:	21 50       	subi	r18, 0x01	; 1
    12dc:	41 f7       	brne	.-48     	; 0x12ae <AdvanceSnake+0xbe>
	{
		Snake.Pos[i][0] = Snake.Pos[i-1][0];
		Snake.Pos[i][1] = Snake.Pos[i-1][1];
	}
	Snake.Pos[0][0] = Next.PosX;
    12de:	e0 e7       	ldi	r30, 0x70	; 112
    12e0:	f3 e4       	ldi	r31, 0x43	; 67
    12e2:	72 83       	std	Z+2, r23	; 0x02
	Snake.Pos[0][1] = Next.PosY;
    12e4:	c3 83       	std	Z+3, r28	; 0x03
	
	if ((Next.PosX == Food.PosX) && (Next.PosY == Food.PosY))
    12e6:	80 91 10 44 	lds	r24, 0x4410	; 0x804410 <Food>
    12ea:	78 13       	cpse	r23, r24
    12ec:	0a c0       	rjmp	.+20     	; 0x1302 <AdvanceSnake+0x112>
    12ee:	80 91 11 44 	lds	r24, 0x4411	; 0x804411 <Food+0x1>
    12f2:	c8 13       	cpse	r28, r24
    12f4:	06 c0       	rjmp	.+12     	; 0x1302 <AdvanceSnake+0x112>
	{
		Snake.Len += 1;
    12f6:	6f 5f       	subi	r22, 0xFF	; 255
    12f8:	60 93 71 43 	sts	0x4371, r22	; 0x804371 <Snake+0x1>
		GenerateNewFood();
    12fc:	0e 94 4c 08 	call	0x1098	; 0x1098 <GenerateNewFood>
    1300:	13 c0       	rjmp	.+38     	; 0x1328 <AdvanceSnake+0x138>
	}
	else
	{
		Snake.Pos[Snake.Len][0] = 0;
    1302:	70 e0       	ldi	r23, 0x00	; 0
    1304:	fb 01       	movw	r30, r22
    1306:	ee 0f       	add	r30, r30
    1308:	ff 1f       	adc	r31, r31
    130a:	ee 58       	subi	r30, 0x8E	; 142
    130c:	fc 4b       	sbci	r31, 0xBC	; 188
    130e:	10 82       	st	Z, r1
		Snake.Pos[Snake.Len][1] = 0;
    1310:	66 0f       	add	r22, r22
    1312:	77 1f       	adc	r23, r23
    1314:	fb 01       	movw	r30, r22
    1316:	e0 59       	subi	r30, 0x90	; 144
    1318:	fc 4b       	sbci	r31, 0xBC	; 188
    131a:	13 82       	std	Z+3, r1	; 0x03
    131c:	05 c0       	rjmp	.+10     	; 0x1328 <AdvanceSnake+0x138>
			return;
		}
	}
	
	//check for game complete
	if(Snake.Len >= 47)
    131e:	6f 32       	cpi	r22, 0x2F	; 47
    1320:	08 f0       	brcs	.+2      	; 0x1324 <AdvanceSnake+0x134>
    1322:	bf cf       	rjmp	.-130    	; 0x12a2 <AdvanceSnake+0xb2>
    1324:	26 2f       	mov	r18, r22
    1326:	c3 cf       	rjmp	.-122    	; 0x12ae <AdvanceSnake+0xbe>
	else
	{
		Snake.Pos[Snake.Len][0] = 0;
		Snake.Pos[Snake.Len][1] = 0;
	}
}
    1328:	cf 91       	pop	r28
    132a:	08 95       	ret

0000132c <BOD_init>:
    132c:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1330:	80 e0       	ldi	r24, 0x00	; 0
    1332:	08 95       	ret

00001334 <CLKCTRL_init>:
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
	protected_write_io(addr, CCP_IOREG_gc, value);
    1334:	44 e2       	ldi	r20, 0x24	; 36
    1336:	68 ed       	ldi	r22, 0xD8	; 216
    1338:	88 e6       	ldi	r24, 0x68	; 104
    133a:	90 e0       	ldi	r25, 0x00	; 0
    133c:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <protected_write_io>
	                 | 0 << CLKCTRL_RUNSTDBY_bp /* Run standby: enabled */);

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
}
    1340:	80 e0       	ldi	r24, 0x00	; 0
    1342:	08 95       	ret

00001344 <CPUINT_init>:
    1344:	78 94       	sei
    1346:	80 e0       	ldi	r24, 0x00	; 0
    1348:	08 95       	ret

0000134a <mcu_init>:
    134a:	e0 e1       	ldi	r30, 0x10	; 16
    134c:	f4 e0       	ldi	r31, 0x04	; 4
    134e:	80 81       	ld	r24, Z
    1350:	88 60       	ori	r24, 0x08	; 8
    1352:	81 93       	st	Z+, r24
    1354:	e8 31       	cpi	r30, 0x18	; 24
    1356:	84 e0       	ldi	r24, 0x04	; 4
    1358:	f8 07       	cpc	r31, r24
    135a:	c9 f7       	brne	.-14     	; 0x134e <mcu_init+0x4>
    135c:	e0 e3       	ldi	r30, 0x30	; 48
    135e:	f4 e0       	ldi	r31, 0x04	; 4
    1360:	80 81       	ld	r24, Z
    1362:	88 60       	ori	r24, 0x08	; 8
    1364:	81 93       	st	Z+, r24
    1366:	e8 33       	cpi	r30, 0x38	; 56
    1368:	84 e0       	ldi	r24, 0x04	; 4
    136a:	f8 07       	cpc	r31, r24
    136c:	c9 f7       	brne	.-14     	; 0x1360 <mcu_init+0x16>
    136e:	e0 e5       	ldi	r30, 0x50	; 80
    1370:	f4 e0       	ldi	r31, 0x04	; 4
    1372:	80 81       	ld	r24, Z
    1374:	88 60       	ori	r24, 0x08	; 8
    1376:	81 93       	st	Z+, r24
    1378:	e8 35       	cpi	r30, 0x58	; 88
    137a:	84 e0       	ldi	r24, 0x04	; 4
    137c:	f8 07       	cpc	r31, r24
    137e:	c9 f7       	brne	.-14     	; 0x1372 <mcu_init+0x28>
    1380:	e0 e7       	ldi	r30, 0x70	; 112
    1382:	f4 e0       	ldi	r31, 0x04	; 4
    1384:	80 81       	ld	r24, Z
    1386:	88 60       	ori	r24, 0x08	; 8
    1388:	81 93       	st	Z+, r24
    138a:	e8 37       	cpi	r30, 0x78	; 120
    138c:	84 e0       	ldi	r24, 0x04	; 4
    138e:	f8 07       	cpc	r31, r24
    1390:	c9 f7       	brne	.-14     	; 0x1384 <mcu_init+0x3a>
    1392:	e0 e9       	ldi	r30, 0x90	; 144
    1394:	f4 e0       	ldi	r31, 0x04	; 4
    1396:	80 81       	ld	r24, Z
    1398:	88 60       	ori	r24, 0x08	; 8
    139a:	81 93       	st	Z+, r24
    139c:	e8 39       	cpi	r30, 0x98	; 152
    139e:	84 e0       	ldi	r24, 0x04	; 4
    13a0:	f8 07       	cpc	r31, r24
    13a2:	c9 f7       	brne	.-14     	; 0x1396 <mcu_init+0x4c>
    13a4:	e0 eb       	ldi	r30, 0xB0	; 176
    13a6:	f4 e0       	ldi	r31, 0x04	; 4
    13a8:	80 81       	ld	r24, Z
    13aa:	88 60       	ori	r24, 0x08	; 8
    13ac:	81 93       	st	Z+, r24
    13ae:	e8 3b       	cpi	r30, 0xB8	; 184
    13b0:	84 e0       	ldi	r24, 0x04	; 4
    13b2:	f8 07       	cpc	r31, r24
    13b4:	c9 f7       	brne	.-14     	; 0x13a8 <mcu_init+0x5e>
    13b6:	e0 ed       	ldi	r30, 0xD0	; 208
    13b8:	f4 e0       	ldi	r31, 0x04	; 4
    13ba:	80 81       	ld	r24, Z
    13bc:	88 60       	ori	r24, 0x08	; 8
    13be:	81 93       	st	Z+, r24
    13c0:	e8 3d       	cpi	r30, 0xD8	; 216
    13c2:	84 e0       	ldi	r24, 0x04	; 4
    13c4:	f8 07       	cpc	r31, r24
    13c6:	c9 f7       	brne	.-14     	; 0x13ba <mcu_init+0x70>
    13c8:	08 95       	ret

000013ca <USART_initialization>:
    13ca:	41 98       	cbi	0x08, 1	; 8
    13cc:	e1 e5       	ldi	r30, 0x51	; 81
    13ce:	f4 e0       	ldi	r31, 0x04	; 4
    13d0:	80 81       	ld	r24, Z
    13d2:	87 7f       	andi	r24, 0xF7	; 247
    13d4:	80 83       	st	Z, r24
    13d6:	40 9a       	sbi	0x08, 0	; 8
    13d8:	48 98       	cbi	0x09, 0	; 9
    13da:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <USART_init>
    13de:	08 95       	ret

000013e0 <I2C_0_initialization>:
    13e0:	43 9a       	sbi	0x08, 3	; 8
    13e2:	4b 98       	cbi	0x09, 3	; 9
    13e4:	e3 e5       	ldi	r30, 0x53	; 83
    13e6:	f4 e0       	ldi	r31, 0x04	; 4
    13e8:	80 81       	ld	r24, Z
    13ea:	87 7f       	andi	r24, 0xF7	; 247
    13ec:	80 83       	st	Z, r24
    13ee:	80 81       	ld	r24, Z
    13f0:	8f 77       	andi	r24, 0x7F	; 127
    13f2:	80 83       	st	Z, r24
    13f4:	80 81       	ld	r24, Z
    13f6:	88 7f       	andi	r24, 0xF8	; 248
    13f8:	80 83       	st	Z, r24
    13fa:	a0 ee       	ldi	r26, 0xE0	; 224
    13fc:	b5 e0       	ldi	r27, 0x05	; 5
    13fe:	15 96       	adiw	r26, 0x05	; 5
    1400:	8c 91       	ld	r24, X
    1402:	15 97       	sbiw	r26, 0x05	; 5
    1404:	81 60       	ori	r24, 0x01	; 1
    1406:	15 96       	adiw	r26, 0x05	; 5
    1408:	8c 93       	st	X, r24
    140a:	15 97       	sbiw	r26, 0x05	; 5
    140c:	42 9a       	sbi	0x08, 2	; 8
    140e:	4a 98       	cbi	0x09, 2	; 9
    1410:	e2 e5       	ldi	r30, 0x52	; 82
    1412:	f4 e0       	ldi	r31, 0x04	; 4
    1414:	80 81       	ld	r24, Z
    1416:	87 7f       	andi	r24, 0xF7	; 247
    1418:	80 83       	st	Z, r24
    141a:	80 81       	ld	r24, Z
    141c:	8f 77       	andi	r24, 0x7F	; 127
    141e:	80 83       	st	Z, r24
    1420:	80 81       	ld	r24, Z
    1422:	88 7f       	andi	r24, 0xF8	; 248
    1424:	80 83       	st	Z, r24
    1426:	15 96       	adiw	r26, 0x05	; 5
    1428:	8c 91       	ld	r24, X
    142a:	15 97       	sbiw	r26, 0x05	; 5
    142c:	81 60       	ori	r24, 0x01	; 1
    142e:	15 96       	adiw	r26, 0x05	; 5
    1430:	8c 93       	st	X, r24
    1432:	0e 94 19 0c 	call	0x1832	; 0x1832 <I2C_0_init>
    1436:	08 95       	ret

00001438 <system_init>:
    1438:	0e 94 a5 09 	call	0x134a	; 0x134a <mcu_init>
    143c:	0e 94 9a 09 	call	0x1334	; 0x1334 <CLKCTRL_init>
    1440:	0e 94 e5 09 	call	0x13ca	; 0x13ca <USART_initialization>
    1444:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <SLPCTRL_init>
    1448:	0e 94 a2 09 	call	0x1344	; 0x1344 <CPUINT_init>
    144c:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <I2C_0_initialization>
    1450:	0e 94 96 09 	call	0x132c	; 0x132c <BOD_init>
    1454:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <Timer_init>
    1458:	08 95       	ret

0000145a <I2C_0_do_I2C_RESET>:
    145a:	e0 e0       	ldi	r30, 0x00	; 0
    145c:	f9 e0       	ldi	r31, 0x09	; 9
    145e:	84 81       	ldd	r24, Z+4	; 0x04
    1460:	88 60       	ori	r24, 0x08	; 8
    1462:	84 83       	std	Z+4, r24	; 0x04
    1464:	85 81       	ldd	r24, Z+5	; 0x05
    1466:	81 60       	ori	r24, 0x01	; 1
    1468:	85 83       	std	Z+5, r24	; 0x05
    146a:	e2 e1       	ldi	r30, 0x12	; 18
    146c:	f4 e4       	ldi	r31, 0x44	; 68
    146e:	80 81       	ld	r24, Z
    1470:	8e 7f       	andi	r24, 0xFE	; 254
    1472:	80 83       	st	Z, r24
    1474:	13 86       	std	Z+11, r1	; 0x0b
    1476:	8e e0       	ldi	r24, 0x0E	; 14
    1478:	08 95       	ret

0000147a <I2C_0_do_I2C_IDLE>:
    147a:	e2 e1       	ldi	r30, 0x12	; 18
    147c:	f4 e4       	ldi	r31, 0x44	; 68
    147e:	80 81       	ld	r24, Z
    1480:	8e 7f       	andi	r24, 0xFE	; 254
    1482:	80 83       	st	Z, r24
    1484:	13 86       	std	Z+11, r1	; 0x0b
    1486:	80 e0       	ldi	r24, 0x00	; 0
    1488:	08 95       	ret

0000148a <I2C_0_do_I2C_SEND_ADR_READ>:
    148a:	e2 e1       	ldi	r30, 0x12	; 18
    148c:	f4 e4       	ldi	r31, 0x44	; 68
    148e:	80 81       	ld	r24, Z
    1490:	88 60       	ori	r24, 0x08	; 8
    1492:	80 83       	st	Z, r24
    1494:	81 81       	ldd	r24, Z+1	; 0x01
    1496:	88 0f       	add	r24, r24
    1498:	81 60       	ori	r24, 0x01	; 1
    149a:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
    149e:	84 e0       	ldi	r24, 0x04	; 4
    14a0:	08 95       	ret

000014a2 <I2C_0_do_I2C_SEND_RESTART>:
    14a2:	0e 94 45 0a 	call	0x148a	; 0x148a <I2C_0_do_I2C_SEND_ADR_READ>
    14a6:	08 95       	ret

000014a8 <I2C_0_do_I2C_SEND_RESTART_READ>:
    14a8:	0e 94 45 0a 	call	0x148a	; 0x148a <I2C_0_do_I2C_SEND_ADR_READ>
    14ac:	08 95       	ret

000014ae <I2C_0_do_I2C_SEND_ADR_WRITE>:
    14ae:	e2 e1       	ldi	r30, 0x12	; 18
    14b0:	f4 e4       	ldi	r31, 0x44	; 68
    14b2:	80 81       	ld	r24, Z
    14b4:	88 60       	ori	r24, 0x08	; 8
    14b6:	80 83       	st	Z, r24
    14b8:	81 81       	ldd	r24, Z+1	; 0x01
    14ba:	88 0f       	add	r24, r24
    14bc:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
    14c0:	83 e0       	ldi	r24, 0x03	; 3
    14c2:	08 95       	ret

000014c4 <I2C_0_do_I2C_SEND_RESTART_WRITE>:
    14c4:	0e 94 57 0a 	call	0x14ae	; 0x14ae <I2C_0_do_I2C_SEND_ADR_WRITE>
    14c8:	08 95       	ret

000014ca <I2C_0_do_I2C_RX_DO_ACK>:
    14ca:	e0 e0       	ldi	r30, 0x00	; 0
    14cc:	f9 e0       	ldi	r31, 0x09	; 9
    14ce:	84 81       	ldd	r24, Z+4	; 0x04
    14d0:	8b 7f       	andi	r24, 0xFB	; 251
    14d2:	84 83       	std	Z+4, r24	; 0x04
    14d4:	84 e0       	ldi	r24, 0x04	; 4
    14d6:	08 95       	ret

000014d8 <I2C_0_do_I2C_TX_DO_ACK>:
    14d8:	e0 e0       	ldi	r30, 0x00	; 0
    14da:	f9 e0       	ldi	r31, 0x09	; 9
    14dc:	84 81       	ldd	r24, Z+4	; 0x04
    14de:	8b 7f       	andi	r24, 0xFB	; 251
    14e0:	84 83       	std	Z+4, r24	; 0x04
    14e2:	83 e0       	ldi	r24, 0x03	; 3
    14e4:	08 95       	ret

000014e6 <I2C_0_do_I2C_DO_NACK_RESTART>:
    14e6:	e0 e0       	ldi	r30, 0x00	; 0
    14e8:	f9 e0       	ldi	r31, 0x09	; 9
    14ea:	84 81       	ldd	r24, Z+4	; 0x04
    14ec:	84 60       	ori	r24, 0x04	; 4
    14ee:	84 83       	std	Z+4, r24	; 0x04
    14f0:	88 e0       	ldi	r24, 0x08	; 8
    14f2:	08 95       	ret

000014f4 <I2C_0_do_I2C_BUS_ERROR>:
    14f4:	e0 e0       	ldi	r30, 0x00	; 0
    14f6:	f9 e0       	ldi	r31, 0x09	; 9
    14f8:	84 81       	ldd	r24, Z+4	; 0x04
    14fa:	88 60       	ori	r24, 0x08	; 8
    14fc:	84 83       	std	Z+4, r24	; 0x04
    14fe:	85 81       	ldd	r24, Z+5	; 0x05
    1500:	81 60       	ori	r24, 0x01	; 1
    1502:	85 83       	std	Z+5, r24	; 0x05
    1504:	e2 e1       	ldi	r30, 0x12	; 18
    1506:	f4 e4       	ldi	r31, 0x44	; 68
    1508:	80 81       	ld	r24, Z
    150a:	8e 7f       	andi	r24, 0xFE	; 254
    150c:	80 83       	st	Z, r24
    150e:	82 e0       	ldi	r24, 0x02	; 2
    1510:	83 87       	std	Z+11, r24	; 0x0b
    1512:	8e e0       	ldi	r24, 0x0E	; 14
    1514:	08 95       	ret

00001516 <I2C_0_master_isr>:
    1516:	cf 93       	push	r28
    1518:	df 93       	push	r29
    151a:	e0 e0       	ldi	r30, 0x00	; 0
    151c:	f9 e0       	ldi	r31, 0x09	; 9
    151e:	85 81       	ldd	r24, Z+5	; 0x05
    1520:	80 6c       	ori	r24, 0xC0	; 192
    1522:	85 83       	std	Z+5, r24	; 0x05
    1524:	80 91 12 44 	lds	r24, 0x4412	; 0x804412 <I2C_0_status>
    1528:	83 ff       	sbrs	r24, 3
    152a:	07 c0       	rjmp	.+14     	; 0x153a <I2C_0_master_isr+0x24>
    152c:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    1530:	84 ff       	sbrs	r24, 4
    1532:	03 c0       	rjmp	.+6      	; 0x153a <I2C_0_master_isr+0x24>
    1534:	8f e0       	ldi	r24, 0x0F	; 15
    1536:	80 93 1c 44 	sts	0x441C, r24	; 0x80441c <I2C_0_status+0xa>
    153a:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    153e:	83 ff       	sbrs	r24, 3
    1540:	03 c0       	rjmp	.+6      	; 0x1548 <I2C_0_master_isr+0x32>
    1542:	80 e1       	ldi	r24, 0x10	; 16
    1544:	80 93 1c 44 	sts	0x441C, r24	; 0x80441c <I2C_0_status+0xa>
    1548:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    154c:	82 ff       	sbrs	r24, 2
    154e:	03 c0       	rjmp	.+6      	; 0x1556 <I2C_0_master_isr+0x40>
    1550:	81 e1       	ldi	r24, 0x11	; 17
    1552:	80 93 1c 44 	sts	0x441C, r24	; 0x80441c <I2C_0_status+0xa>
    1556:	c2 e1       	ldi	r28, 0x12	; 18
    1558:	d4 e4       	ldi	r29, 0x44	; 68
    155a:	ea 85       	ldd	r30, Y+10	; 0x0a
    155c:	f0 e0       	ldi	r31, 0x00	; 0
    155e:	ee 0f       	add	r30, r30
    1560:	ff 1f       	adc	r31, r31
    1562:	e8 5a       	subi	r30, 0xA8	; 168
    1564:	fe 4b       	sbci	r31, 0xBE	; 190
    1566:	01 90       	ld	r0, Z+
    1568:	f0 81       	ld	r31, Z
    156a:	e0 2d       	mov	r30, r0
    156c:	09 95       	icall
    156e:	8a 87       	std	Y+10, r24	; 0x0a
    1570:	df 91       	pop	r29
    1572:	cf 91       	pop	r28
    1574:	08 95       	ret

00001576 <I2C_0_return_stop>:
    1576:	81 e0       	ldi	r24, 0x01	; 1
    1578:	08 95       	ret

0000157a <I2C_0_return_reset>:
    157a:	85 e0       	ldi	r24, 0x05	; 5
    157c:	08 95       	ret

0000157e <I2C_0_set_callback>:
    157e:	61 15       	cp	r22, r1
    1580:	71 05       	cpc	r23, r1
    1582:	81 f0       	breq	.+32     	; 0x15a4 <I2C_0_set_callback+0x26>
    1584:	90 e0       	ldi	r25, 0x00	; 0
    1586:	fc 01       	movw	r30, r24
    1588:	ee 0f       	add	r30, r30
    158a:	ff 1f       	adc	r31, r31
    158c:	e2 5e       	subi	r30, 0xE2	; 226
    158e:	fb 4b       	sbci	r31, 0xBB	; 187
    1590:	60 83       	st	Z, r22
    1592:	71 83       	std	Z+1, r23	; 0x01
    1594:	88 0f       	add	r24, r24
    1596:	99 1f       	adc	r25, r25
    1598:	fc 01       	movw	r30, r24
    159a:	e6 5d       	subi	r30, 0xD6	; 214
    159c:	fb 4b       	sbci	r31, 0xBB	; 187
    159e:	40 83       	st	Z, r20
    15a0:	51 83       	std	Z+1, r21	; 0x01
    15a2:	08 95       	ret
    15a4:	90 e0       	ldi	r25, 0x00	; 0
    15a6:	fc 01       	movw	r30, r24
    15a8:	ee 0f       	add	r30, r30
    15aa:	ff 1f       	adc	r31, r31
    15ac:	e2 5e       	subi	r30, 0xE2	; 226
    15ae:	fb 4b       	sbci	r31, 0xBB	; 187
    15b0:	2b eb       	ldi	r18, 0xBB	; 187
    15b2:	3a e0       	ldi	r19, 0x0A	; 10
    15b4:	20 83       	st	Z, r18
    15b6:	31 83       	std	Z+1, r19	; 0x01
    15b8:	88 0f       	add	r24, r24
    15ba:	99 1f       	adc	r25, r25
    15bc:	fc 01       	movw	r30, r24
    15be:	e6 5d       	subi	r30, 0xD6	; 214
    15c0:	fb 4b       	sbci	r31, 0xBB	; 187
    15c2:	10 82       	st	Z, r1
    15c4:	11 82       	std	Z+1, r1	; 0x01
    15c6:	08 95       	ret

000015c8 <I2C_0_do_I2C_BUS_COLLISION>:
    15c8:	e0 e0       	ldi	r30, 0x00	; 0
    15ca:	f9 e0       	ldi	r31, 0x09	; 9
    15cc:	85 81       	ldd	r24, Z+5	; 0x05
    15ce:	88 60       	ori	r24, 0x08	; 8
    15d0:	85 83       	std	Z+5, r24	; 0x05
    15d2:	a2 e1       	ldi	r26, 0x12	; 18
    15d4:	b4 e4       	ldi	r27, 0x44	; 68
    15d6:	82 e0       	ldi	r24, 0x02	; 2
    15d8:	1b 96       	adiw	r26, 0x0b	; 11
    15da:	8c 93       	st	X, r24
    15dc:	1b 97       	sbiw	r26, 0x0b	; 11
    15de:	1e 96       	adiw	r26, 0x0e	; 14
    15e0:	ed 91       	ld	r30, X+
    15e2:	fc 91       	ld	r31, X
    15e4:	1f 97       	sbiw	r26, 0x0f	; 15
    15e6:	5a 96       	adiw	r26, 0x1a	; 26
    15e8:	8d 91       	ld	r24, X+
    15ea:	9c 91       	ld	r25, X
    15ec:	5b 97       	sbiw	r26, 0x1b	; 27
    15ee:	09 95       	icall
    15f0:	82 30       	cpi	r24, 0x02	; 2
    15f2:	19 f0       	breq	.+6      	; 0x15fa <I2C_0_do_I2C_BUS_COLLISION+0x32>
    15f4:	83 30       	cpi	r24, 0x03	; 3
    15f6:	21 f0       	breq	.+8      	; 0x1600 <I2C_0_do_I2C_BUS_COLLISION+0x38>
    15f8:	06 c0       	rjmp	.+12     	; 0x1606 <I2C_0_do_I2C_BUS_COLLISION+0x3e>
    15fa:	0e 94 45 0a 	call	0x148a	; 0x148a <I2C_0_do_I2C_SEND_ADR_READ>
    15fe:	08 95       	ret
    1600:	0e 94 57 0a 	call	0x14ae	; 0x14ae <I2C_0_do_I2C_SEND_ADR_WRITE>
    1604:	08 95       	ret
    1606:	0e 94 2d 0a 	call	0x145a	; 0x145a <I2C_0_do_I2C_RESET>
    160a:	08 95       	ret

0000160c <I2C_0_do_I2C_DO_NACK_STOP>:
    160c:	e0 e0       	ldi	r30, 0x00	; 0
    160e:	f9 e0       	ldi	r31, 0x09	; 9
    1610:	84 81       	ldd	r24, Z+4	; 0x04
    1612:	84 60       	ori	r24, 0x04	; 4
    1614:	84 83       	std	Z+4, r24	; 0x04
    1616:	84 81       	ldd	r24, Z+4	; 0x04
    1618:	83 60       	ori	r24, 0x03	; 3
    161a:	84 83       	std	Z+4, r24	; 0x04
    161c:	e2 e1       	ldi	r30, 0x12	; 18
    161e:	f4 e4       	ldi	r31, 0x44	; 68
    1620:	80 81       	ld	r24, Z
    1622:	8e 7f       	andi	r24, 0xFE	; 254
    1624:	80 83       	st	Z, r24
    1626:	13 86       	std	Z+11, r1	; 0x0b
    1628:	80 e0       	ldi	r24, 0x00	; 0
    162a:	08 95       	ret

0000162c <I2C_0_do_I2C_RX>:
    162c:	cf 93       	push	r28
    162e:	df 93       	push	r29
    1630:	e2 e1       	ldi	r30, 0x12	; 18
    1632:	f4 e4       	ldi	r31, 0x44	; 68
    1634:	80 81       	ld	r24, Z
    1636:	87 7f       	andi	r24, 0xF7	; 247
    1638:	80 83       	st	Z, r24
    163a:	84 81       	ldd	r24, Z+4	; 0x04
    163c:	95 81       	ldd	r25, Z+5	; 0x05
    163e:	01 97       	sbiw	r24, 0x01	; 1
    1640:	31 f4       	brne	.+12     	; 0x164e <I2C_0_do_I2C_RX+0x22>
    1642:	e0 e0       	ldi	r30, 0x00	; 0
    1644:	f9 e0       	ldi	r31, 0x09	; 9
    1646:	84 81       	ldd	r24, Z+4	; 0x04
    1648:	84 60       	ori	r24, 0x04	; 4
    164a:	84 83       	std	Z+4, r24	; 0x04
    164c:	05 c0       	rjmp	.+10     	; 0x1658 <I2C_0_do_I2C_RX+0x2c>
    164e:	e0 e0       	ldi	r30, 0x00	; 0
    1650:	f9 e0       	ldi	r31, 0x09	; 9
    1652:	84 81       	ldd	r24, Z+4	; 0x04
    1654:	8b 7f       	andi	r24, 0xFB	; 251
    1656:	84 83       	std	Z+4, r24	; 0x04
    1658:	e2 e1       	ldi	r30, 0x12	; 18
    165a:	f4 e4       	ldi	r31, 0x44	; 68
    165c:	84 81       	ldd	r24, Z+4	; 0x04
    165e:	95 81       	ldd	r25, Z+5	; 0x05
    1660:	01 97       	sbiw	r24, 0x01	; 1
    1662:	84 83       	std	Z+4, r24	; 0x04
    1664:	95 83       	std	Z+5, r25	; 0x05
    1666:	89 2b       	or	r24, r25
    1668:	a9 f0       	breq	.+42     	; 0x1694 <I2C_0_do_I2C_RX+0x68>
    166a:	df 01       	movw	r26, r30
    166c:	c2 81       	ldd	r28, Z+2	; 0x02
    166e:	d3 81       	ldd	r29, Z+3	; 0x03
    1670:	e0 e0       	ldi	r30, 0x00	; 0
    1672:	f9 e0       	ldi	r31, 0x09	; 9
    1674:	80 85       	ldd	r24, Z+8	; 0x08
    1676:	88 83       	st	Y, r24
    1678:	12 96       	adiw	r26, 0x02	; 2
    167a:	8d 91       	ld	r24, X+
    167c:	9c 91       	ld	r25, X
    167e:	13 97       	sbiw	r26, 0x03	; 3
    1680:	01 96       	adiw	r24, 0x01	; 1
    1682:	12 96       	adiw	r26, 0x02	; 2
    1684:	8d 93       	st	X+, r24
    1686:	9c 93       	st	X, r25
    1688:	13 97       	sbiw	r26, 0x03	; 3
    168a:	84 81       	ldd	r24, Z+4	; 0x04
    168c:	82 60       	ori	r24, 0x02	; 2
    168e:	84 83       	std	Z+4, r24	; 0x04
    1690:	84 e0       	ldi	r24, 0x04	; 4
    1692:	26 c0       	rjmp	.+76     	; 0x16e0 <I2C_0_do_I2C_RX+0xb4>
    1694:	a2 e1       	ldi	r26, 0x12	; 18
    1696:	b4 e4       	ldi	r27, 0x44	; 68
    1698:	12 96       	adiw	r26, 0x02	; 2
    169a:	ed 91       	ld	r30, X+
    169c:	fc 91       	ld	r31, X
    169e:	13 97       	sbiw	r26, 0x03	; 3
    16a0:	80 91 08 09 	lds	r24, 0x0908	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
    16a4:	80 83       	st	Z, r24
    16a6:	12 96       	adiw	r26, 0x02	; 2
    16a8:	8d 91       	ld	r24, X+
    16aa:	9c 91       	ld	r25, X
    16ac:	13 97       	sbiw	r26, 0x03	; 3
    16ae:	01 96       	adiw	r24, 0x01	; 1
    16b0:	12 96       	adiw	r26, 0x02	; 2
    16b2:	8d 93       	st	X+, r24
    16b4:	9c 93       	st	X, r25
    16b6:	13 97       	sbiw	r26, 0x03	; 3
    16b8:	8c 91       	ld	r24, X
    16ba:	84 60       	ori	r24, 0x04	; 4
    16bc:	8c 93       	st	X, r24
    16be:	1c 96       	adiw	r26, 0x0c	; 12
    16c0:	ed 91       	ld	r30, X+
    16c2:	fc 91       	ld	r31, X
    16c4:	1d 97       	sbiw	r26, 0x0d	; 13
    16c6:	58 96       	adiw	r26, 0x18	; 24
    16c8:	8d 91       	ld	r24, X+
    16ca:	9c 91       	ld	r25, X
    16cc:	59 97       	sbiw	r26, 0x19	; 25
    16ce:	09 95       	icall
    16d0:	82 50       	subi	r24, 0x02	; 2
    16d2:	82 30       	cpi	r24, 0x02	; 2
    16d4:	18 f4       	brcc	.+6      	; 0x16dc <I2C_0_do_I2C_RX+0xb0>
    16d6:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <I2C_0_do_I2C_DO_NACK_RESTART>
    16da:	02 c0       	rjmp	.+4      	; 0x16e0 <I2C_0_do_I2C_RX+0xb4>
    16dc:	0e 94 06 0b 	call	0x160c	; 0x160c <I2C_0_do_I2C_DO_NACK_STOP>
    16e0:	df 91       	pop	r29
    16e2:	cf 91       	pop	r28
    16e4:	08 95       	ret

000016e6 <I2C_0_do_I2C_SEND_STOP>:
    16e6:	e0 e0       	ldi	r30, 0x00	; 0
    16e8:	f9 e0       	ldi	r31, 0x09	; 9
    16ea:	84 81       	ldd	r24, Z+4	; 0x04
    16ec:	83 60       	ori	r24, 0x03	; 3
    16ee:	84 83       	std	Z+4, r24	; 0x04
    16f0:	e2 e1       	ldi	r30, 0x12	; 18
    16f2:	f4 e4       	ldi	r31, 0x44	; 68
    16f4:	80 81       	ld	r24, Z
    16f6:	8e 7f       	andi	r24, 0xFE	; 254
    16f8:	80 83       	st	Z, r24
    16fa:	13 86       	std	Z+11, r1	; 0x0b
    16fc:	80 e0       	ldi	r24, 0x00	; 0
    16fe:	08 95       	ret

00001700 <I2C_0_do_I2C_DO_ADDRESS_NACK>:
    1700:	a2 e1       	ldi	r26, 0x12	; 18
    1702:	b4 e4       	ldi	r27, 0x44	; 68
    1704:	8c 91       	ld	r24, X
    1706:	87 7f       	andi	r24, 0xF7	; 247
    1708:	8c 93       	st	X, r24
    170a:	82 e0       	ldi	r24, 0x02	; 2
    170c:	1b 96       	adiw	r26, 0x0b	; 11
    170e:	8c 93       	st	X, r24
    1710:	1b 97       	sbiw	r26, 0x0b	; 11
    1712:	50 96       	adiw	r26, 0x10	; 16
    1714:	ed 91       	ld	r30, X+
    1716:	fc 91       	ld	r31, X
    1718:	51 97       	sbiw	r26, 0x11	; 17
    171a:	5c 96       	adiw	r26, 0x1c	; 28
    171c:	8d 91       	ld	r24, X+
    171e:	9c 91       	ld	r25, X
    1720:	5d 97       	sbiw	r26, 0x1d	; 29
    1722:	09 95       	icall
    1724:	82 30       	cpi	r24, 0x02	; 2
    1726:	19 f0       	breq	.+6      	; 0x172e <I2C_0_do_I2C_DO_ADDRESS_NACK+0x2e>
    1728:	83 30       	cpi	r24, 0x03	; 3
    172a:	21 f0       	breq	.+8      	; 0x1734 <I2C_0_do_I2C_DO_ADDRESS_NACK+0x34>
    172c:	06 c0       	rjmp	.+12     	; 0x173a <I2C_0_do_I2C_DO_ADDRESS_NACK+0x3a>
    172e:	0e 94 45 0a 	call	0x148a	; 0x148a <I2C_0_do_I2C_SEND_ADR_READ>
    1732:	08 95       	ret
    1734:	0e 94 57 0a 	call	0x14ae	; 0x14ae <I2C_0_do_I2C_SEND_ADR_WRITE>
    1738:	08 95       	ret
    173a:	0e 94 73 0b 	call	0x16e6	; 0x16e6 <I2C_0_do_I2C_SEND_STOP>
    173e:	08 95       	ret

00001740 <I2C_0_do_I2C_TX>:
    1740:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    1744:	84 ff       	sbrs	r24, 4
    1746:	19 c0       	rjmp	.+50     	; 0x177a <I2C_0_do_I2C_TX+0x3a>
    1748:	a2 e1       	ldi	r26, 0x12	; 18
    174a:	b4 e4       	ldi	r27, 0x44	; 68
    174c:	52 96       	adiw	r26, 0x12	; 18
    174e:	ed 91       	ld	r30, X+
    1750:	fc 91       	ld	r31, X
    1752:	53 97       	sbiw	r26, 0x13	; 19
    1754:	5e 96       	adiw	r26, 0x1e	; 30
    1756:	8d 91       	ld	r24, X+
    1758:	9c 91       	ld	r25, X
    175a:	5f 97       	sbiw	r26, 0x1f	; 31
    175c:	09 95       	icall
    175e:	82 30       	cpi	r24, 0x02	; 2
    1760:	19 f0       	breq	.+6      	; 0x1768 <I2C_0_do_I2C_TX+0x28>
    1762:	83 30       	cpi	r24, 0x03	; 3
    1764:	21 f0       	breq	.+8      	; 0x176e <I2C_0_do_I2C_TX+0x2e>
    1766:	06 c0       	rjmp	.+12     	; 0x1774 <I2C_0_do_I2C_TX+0x34>
    1768:	0e 94 45 0a 	call	0x148a	; 0x148a <I2C_0_do_I2C_SEND_ADR_READ>
    176c:	08 95       	ret
    176e:	0e 94 57 0a 	call	0x14ae	; 0x14ae <I2C_0_do_I2C_SEND_ADR_WRITE>
    1772:	08 95       	ret
    1774:	0e 94 73 0b 	call	0x16e6	; 0x16e6 <I2C_0_do_I2C_SEND_STOP>
    1778:	08 95       	ret
    177a:	e2 e1       	ldi	r30, 0x12	; 18
    177c:	f4 e4       	ldi	r31, 0x44	; 68
    177e:	80 81       	ld	r24, Z
    1780:	87 7f       	andi	r24, 0xF7	; 247
    1782:	80 83       	st	Z, r24
    1784:	a2 81       	ldd	r26, Z+2	; 0x02
    1786:	b3 81       	ldd	r27, Z+3	; 0x03
    1788:	cd 01       	movw	r24, r26
    178a:	01 96       	adiw	r24, 0x01	; 1
    178c:	82 83       	std	Z+2, r24	; 0x02
    178e:	93 83       	std	Z+3, r25	; 0x03
    1790:	8c 91       	ld	r24, X
    1792:	80 93 08 09 	sts	0x0908, r24	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
    1796:	84 81       	ldd	r24, Z+4	; 0x04
    1798:	95 81       	ldd	r25, Z+5	; 0x05
    179a:	01 97       	sbiw	r24, 0x01	; 1
    179c:	84 83       	std	Z+4, r24	; 0x04
    179e:	95 83       	std	Z+5, r25	; 0x05
    17a0:	89 2b       	or	r24, r25
    17a2:	11 f4       	brne	.+4      	; 0x17a8 <I2C_0_do_I2C_TX+0x68>
    17a4:	85 e0       	ldi	r24, 0x05	; 5
    17a6:	08 95       	ret
    17a8:	83 e0       	ldi	r24, 0x03	; 3
    17aa:	08 95       	ret

000017ac <I2C_0_do_I2C_TX_EMPTY>:
    17ac:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    17b0:	84 ff       	sbrs	r24, 4
    17b2:	19 c0       	rjmp	.+50     	; 0x17e6 <I2C_0_do_I2C_TX_EMPTY+0x3a>
    17b4:	a2 e1       	ldi	r26, 0x12	; 18
    17b6:	b4 e4       	ldi	r27, 0x44	; 68
    17b8:	52 96       	adiw	r26, 0x12	; 18
    17ba:	ed 91       	ld	r30, X+
    17bc:	fc 91       	ld	r31, X
    17be:	53 97       	sbiw	r26, 0x13	; 19
    17c0:	5e 96       	adiw	r26, 0x1e	; 30
    17c2:	8d 91       	ld	r24, X+
    17c4:	9c 91       	ld	r25, X
    17c6:	5f 97       	sbiw	r26, 0x1f	; 31
    17c8:	09 95       	icall
    17ca:	82 30       	cpi	r24, 0x02	; 2
    17cc:	19 f0       	breq	.+6      	; 0x17d4 <I2C_0_do_I2C_TX_EMPTY+0x28>
    17ce:	83 30       	cpi	r24, 0x03	; 3
    17d0:	21 f0       	breq	.+8      	; 0x17da <I2C_0_do_I2C_TX_EMPTY+0x2e>
    17d2:	06 c0       	rjmp	.+12     	; 0x17e0 <I2C_0_do_I2C_TX_EMPTY+0x34>
    17d4:	0e 94 45 0a 	call	0x148a	; 0x148a <I2C_0_do_I2C_SEND_ADR_READ>
    17d8:	08 95       	ret
    17da:	0e 94 57 0a 	call	0x14ae	; 0x14ae <I2C_0_do_I2C_SEND_ADR_WRITE>
    17de:	08 95       	ret
    17e0:	0e 94 73 0b 	call	0x16e6	; 0x16e6 <I2C_0_do_I2C_SEND_STOP>
    17e4:	08 95       	ret
    17e6:	a2 e1       	ldi	r26, 0x12	; 18
    17e8:	b4 e4       	ldi	r27, 0x44	; 68
    17ea:	8c 91       	ld	r24, X
    17ec:	84 60       	ori	r24, 0x04	; 4
    17ee:	8c 93       	st	X, r24
    17f0:	1c 96       	adiw	r26, 0x0c	; 12
    17f2:	ed 91       	ld	r30, X+
    17f4:	fc 91       	ld	r31, X
    17f6:	1d 97       	sbiw	r26, 0x0d	; 13
    17f8:	58 96       	adiw	r26, 0x18	; 24
    17fa:	8d 91       	ld	r24, X+
    17fc:	9c 91       	ld	r25, X
    17fe:	59 97       	sbiw	r26, 0x19	; 25
    1800:	09 95       	icall
    1802:	83 30       	cpi	r24, 0x03	; 3
    1804:	39 f0       	breq	.+14     	; 0x1814 <I2C_0_do_I2C_TX_EMPTY+0x68>
    1806:	84 30       	cpi	r24, 0x04	; 4
    1808:	41 f0       	breq	.+16     	; 0x181a <I2C_0_do_I2C_TX_EMPTY+0x6e>
    180a:	82 30       	cpi	r24, 0x02	; 2
    180c:	49 f4       	brne	.+18     	; 0x1820 <I2C_0_do_I2C_TX_EMPTY+0x74>
    180e:	0e 94 45 0a 	call	0x148a	; 0x148a <I2C_0_do_I2C_SEND_ADR_READ>
    1812:	08 95       	ret
    1814:	0e 94 57 0a 	call	0x14ae	; 0x14ae <I2C_0_do_I2C_SEND_ADR_WRITE>
    1818:	08 95       	ret
    181a:	0e 94 a0 0b 	call	0x1740	; 0x1740 <I2C_0_do_I2C_TX>
    181e:	08 95       	ret
    1820:	0e 94 73 0b 	call	0x16e6	; 0x16e6 <I2C_0_do_I2C_SEND_STOP>
    1824:	08 95       	ret

00001826 <I2C_0_set_address_nack_callback>:
    1826:	ab 01       	movw	r20, r22
    1828:	bc 01       	movw	r22, r24
    182a:	82 e0       	ldi	r24, 0x02	; 2
    182c:	0e 94 bf 0a 	call	0x157e	; 0x157e <I2C_0_set_callback>
    1830:	08 95       	ret

00001832 <I2C_0_init>:
    1832:	e0 e0       	ldi	r30, 0x00	; 0
    1834:	f9 e0       	ldi	r31, 0x09	; 9
    1836:	83 e7       	ldi	r24, 0x73	; 115
    1838:	86 83       	std	Z+6, r24	; 0x06
    183a:	81 ec       	ldi	r24, 0xC1	; 193
    183c:	83 83       	std	Z+3, r24	; 0x03
    183e:	08 95       	ret

00001840 <I2C_0_open>:
    1840:	90 91 12 44 	lds	r25, 0x4412	; 0x804412 <I2C_0_status>
    1844:	91 fd       	sbrc	r25, 1
    1846:	36 c0       	rjmp	.+108    	; 0x18b4 <I2C_0_open+0x74>
    1848:	e2 e1       	ldi	r30, 0x12	; 18
    184a:	f4 e4       	ldi	r31, 0x44	; 68
    184c:	81 83       	std	Z+1, r24	; 0x01
    184e:	89 2f       	mov	r24, r25
    1850:	84 7f       	andi	r24, 0xF4	; 244
    1852:	9e e0       	ldi	r25, 0x0E	; 14
    1854:	92 87       	std	Z+10, r25	; 0x0a
    1856:	24 ef       	ldi	r18, 0xF4	; 244
    1858:	31 e0       	ldi	r19, 0x01	; 1
    185a:	20 87       	std	Z+8, r18	; 0x08
    185c:	31 87       	std	Z+9, r19	; 0x09
    185e:	82 60       	ori	r24, 0x02	; 2
    1860:	84 60       	ori	r24, 0x04	; 4
    1862:	80 83       	st	Z, r24
    1864:	8b eb       	ldi	r24, 0xBB	; 187
    1866:	9a e0       	ldi	r25, 0x0A	; 10
    1868:	84 87       	std	Z+12, r24	; 0x0c
    186a:	95 87       	std	Z+13, r25	; 0x0d
    186c:	10 8e       	std	Z+24, r1	; 0x18
    186e:	11 8e       	std	Z+25, r1	; 0x19
    1870:	86 87       	std	Z+14, r24	; 0x0e
    1872:	97 87       	std	Z+15, r25	; 0x0f
    1874:	12 8e       	std	Z+26, r1	; 0x1a
    1876:	13 8e       	std	Z+27, r1	; 0x1b
    1878:	80 8b       	std	Z+16, r24	; 0x10
    187a:	91 8b       	std	Z+17, r25	; 0x11
    187c:	14 8e       	std	Z+28, r1	; 0x1c
    187e:	15 8e       	std	Z+29, r1	; 0x1d
    1880:	82 8b       	std	Z+18, r24	; 0x12
    1882:	93 8b       	std	Z+19, r25	; 0x13
    1884:	16 8e       	std	Z+30, r1	; 0x1e
    1886:	17 8e       	std	Z+31, r1	; 0x1f
    1888:	8d eb       	ldi	r24, 0xBD	; 189
    188a:	9a e0       	ldi	r25, 0x0A	; 10
    188c:	84 8b       	std	Z+20, r24	; 0x14
    188e:	95 8b       	std	Z+21, r25	; 0x15
    1890:	10 a2       	std	Z+32, r1	; 0x20
    1892:	11 a2       	std	Z+33, r1	; 0x21
    1894:	e0 e0       	ldi	r30, 0x00	; 0
    1896:	f9 e0       	ldi	r31, 0x09	; 9
    1898:	84 81       	ldd	r24, Z+4	; 0x04
    189a:	88 60       	ori	r24, 0x08	; 8
    189c:	84 83       	std	Z+4, r24	; 0x04
    189e:	85 81       	ldd	r24, Z+5	; 0x05
    18a0:	81 60       	ori	r24, 0x01	; 1
    18a2:	85 83       	std	Z+5, r24	; 0x05
    18a4:	85 81       	ldd	r24, Z+5	; 0x05
    18a6:	80 6c       	ori	r24, 0xC0	; 192
    18a8:	85 83       	std	Z+5, r24	; 0x05
    18aa:	83 81       	ldd	r24, Z+3	; 0x03
    18ac:	80 6c       	ori	r24, 0xC0	; 192
    18ae:	83 83       	std	Z+3, r24	; 0x03
    18b0:	80 e0       	ldi	r24, 0x00	; 0
    18b2:	08 95       	ret
    18b4:	81 e0       	ldi	r24, 0x01	; 1
    18b6:	08 95       	ret

000018b8 <I2C_0_close>:
    18b8:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    18bc:	82 ff       	sbrs	r24, 2
    18be:	07 c0       	rjmp	.+14     	; 0x18ce <I2C_0_close+0x16>
    18c0:	e2 e1       	ldi	r30, 0x12	; 18
    18c2:	f4 e4       	ldi	r31, 0x44	; 68
    18c4:	80 81       	ld	r24, Z
    18c6:	8e 7f       	andi	r24, 0xFE	; 254
    18c8:	80 83       	st	Z, r24
    18ca:	82 e0       	ldi	r24, 0x02	; 2
    18cc:	83 87       	std	Z+11, r24	; 0x0b
    18ce:	80 91 12 44 	lds	r24, 0x4412	; 0x804412 <I2C_0_status>
    18d2:	80 fd       	sbrc	r24, 0
    18d4:	17 c0       	rjmp	.+46     	; 0x1904 <I2C_0_close+0x4c>
    18d6:	e2 e1       	ldi	r30, 0x12	; 18
    18d8:	f4 e4       	ldi	r31, 0x44	; 68
    18da:	8d 7f       	andi	r24, 0xFD	; 253
    18dc:	80 83       	st	Z, r24
    18de:	8f ef       	ldi	r24, 0xFF	; 255
    18e0:	81 83       	std	Z+1, r24	; 0x01
    18e2:	a0 e0       	ldi	r26, 0x00	; 0
    18e4:	b9 e0       	ldi	r27, 0x09	; 9
    18e6:	15 96       	adiw	r26, 0x05	; 5
    18e8:	8c 91       	ld	r24, X
    18ea:	15 97       	sbiw	r26, 0x05	; 5
    18ec:	80 6c       	ori	r24, 0xC0	; 192
    18ee:	15 96       	adiw	r26, 0x05	; 5
    18f0:	8c 93       	st	X, r24
    18f2:	15 97       	sbiw	r26, 0x05	; 5
    18f4:	13 96       	adiw	r26, 0x03	; 3
    18f6:	8c 91       	ld	r24, X
    18f8:	13 97       	sbiw	r26, 0x03	; 3
    18fa:	8f 73       	andi	r24, 0x3F	; 63
    18fc:	13 96       	adiw	r26, 0x03	; 3
    18fe:	8c 93       	st	X, r24
    1900:	83 85       	ldd	r24, Z+11	; 0x0b
    1902:	08 95       	ret
    1904:	81 e0       	ldi	r24, 0x01	; 1
    1906:	08 95       	ret

00001908 <I2C_0_set_buffer>:
    1908:	9c 01       	movw	r18, r24
    190a:	90 91 12 44 	lds	r25, 0x4412	; 0x804412 <I2C_0_status>
    190e:	92 ff       	sbrs	r25, 2
    1910:	09 c0       	rjmp	.+18     	; 0x1924 <I2C_0_set_buffer+0x1c>
    1912:	e2 e1       	ldi	r30, 0x12	; 18
    1914:	f4 e4       	ldi	r31, 0x44	; 68
    1916:	22 83       	std	Z+2, r18	; 0x02
    1918:	33 83       	std	Z+3, r19	; 0x03
    191a:	64 83       	std	Z+4, r22	; 0x04
    191c:	75 83       	std	Z+5, r23	; 0x05
    191e:	89 2f       	mov	r24, r25
    1920:	8b 7f       	andi	r24, 0xFB	; 251
    1922:	80 83       	st	Z, r24
    1924:	08 95       	ret

00001926 <I2C_0_master_operation>:
    1926:	90 91 12 44 	lds	r25, 0x4412	; 0x804412 <I2C_0_status>
    192a:	90 fd       	sbrc	r25, 0
    192c:	11 c0       	rjmp	.+34     	; 0x1950 <I2C_0_master_operation+0x2a>
    192e:	e2 e1       	ldi	r30, 0x12	; 18
    1930:	f4 e4       	ldi	r31, 0x44	; 68
    1932:	91 60       	ori	r25, 0x01	; 1
    1934:	90 83       	st	Z, r25
    1936:	88 23       	and	r24, r24
    1938:	21 f0       	breq	.+8      	; 0x1942 <I2C_0_master_operation+0x1c>
    193a:	81 e0       	ldi	r24, 0x01	; 1
    193c:	80 93 1c 44 	sts	0x441C, r24	; 0x80441c <I2C_0_status+0xa>
    1940:	03 c0       	rjmp	.+6      	; 0x1948 <I2C_0_master_operation+0x22>
    1942:	82 e0       	ldi	r24, 0x02	; 2
    1944:	80 93 1c 44 	sts	0x441C, r24	; 0x80441c <I2C_0_status+0xa>
    1948:	0e 94 8b 0a 	call	0x1516	; 0x1516 <I2C_0_master_isr>
    194c:	80 e0       	ldi	r24, 0x00	; 0
    194e:	08 95       	ret
    1950:	81 e0       	ldi	r24, 0x01	; 1
    1952:	08 95       	ret

00001954 <I2C_0_master_write>:
    1954:	80 e0       	ldi	r24, 0x00	; 0
    1956:	0e 94 93 0c 	call	0x1926	; 0x1926 <I2C_0_master_operation>
    195a:	08 95       	ret

0000195c <__vector_17>:
    195c:	1f 92       	push	r1
    195e:	0f 92       	push	r0
    1960:	0f b6       	in	r0, 0x3f	; 63
    1962:	0f 92       	push	r0
    1964:	11 24       	eor	r1, r1
    1966:	0b b6       	in	r0, 0x3b	; 59
    1968:	0f 92       	push	r0
    196a:	2f 93       	push	r18
    196c:	3f 93       	push	r19
    196e:	4f 93       	push	r20
    1970:	5f 93       	push	r21
    1972:	6f 93       	push	r22
    1974:	7f 93       	push	r23
    1976:	8f 93       	push	r24
    1978:	9f 93       	push	r25
    197a:	af 93       	push	r26
    197c:	bf 93       	push	r27
    197e:	ef 93       	push	r30
    1980:	ff 93       	push	r31
    1982:	0e 94 8b 0a 	call	0x1516	; 0x1516 <I2C_0_master_isr>
    1986:	ff 91       	pop	r31
    1988:	ef 91       	pop	r30
    198a:	bf 91       	pop	r27
    198c:	af 91       	pop	r26
    198e:	9f 91       	pop	r25
    1990:	8f 91       	pop	r24
    1992:	7f 91       	pop	r23
    1994:	6f 91       	pop	r22
    1996:	5f 91       	pop	r21
    1998:	4f 91       	pop	r20
    199a:	3f 91       	pop	r19
    199c:	2f 91       	pop	r18
    199e:	0f 90       	pop	r0
    19a0:	0b be       	out	0x3b, r0	; 59
    19a2:	0f 90       	pop	r0
    19a4:	0f be       	out	0x3f, r0	; 63
    19a6:	0f 90       	pop	r0
    19a8:	1f 90       	pop	r1
    19aa:	18 95       	reti

000019ac <I2C_0_writeNBytes>:
    19ac:	cf 92       	push	r12
    19ae:	df 92       	push	r13
    19b0:	ef 92       	push	r14
    19b2:	ff 92       	push	r15
    19b4:	1f 93       	push	r17
    19b6:	cf 93       	push	r28
    19b8:	df 93       	push	r29
    19ba:	18 2f       	mov	r17, r24
    19bc:	7b 01       	movw	r14, r22
    19be:	6a 01       	movw	r12, r20
    19c0:	c0 e1       	ldi	r28, 0x10	; 16
    19c2:	d7 e2       	ldi	r29, 0x27	; 39
    19c4:	81 2f       	mov	r24, r17
    19c6:	0e 94 20 0c 	call	0x1840	; 0x1840 <I2C_0_open>
    19ca:	81 30       	cpi	r24, 0x01	; 1
    19cc:	19 f4       	brne	.+6      	; 0x19d4 <I2C_0_writeNBytes+0x28>
    19ce:	21 97       	sbiw	r28, 0x01	; 1
    19d0:	c9 f7       	brne	.-14     	; 0x19c4 <I2C_0_writeNBytes+0x18>
    19d2:	1f c0       	rjmp	.+62     	; 0x1a12 <I2C_0_writeNBytes+0x66>
    19d4:	cd 2b       	or	r28, r29
    19d6:	d1 f0       	breq	.+52     	; 0x1a0c <I2C_0_writeNBytes+0x60>
    19d8:	b6 01       	movw	r22, r12
    19da:	c7 01       	movw	r24, r14
    19dc:	0e 94 84 0c 	call	0x1908	; 0x1908 <I2C_0_set_buffer>
    19e0:	60 e0       	ldi	r22, 0x00	; 0
    19e2:	70 e0       	ldi	r23, 0x00	; 0
    19e4:	81 e1       	ldi	r24, 0x11	; 17
    19e6:	9d e0       	ldi	r25, 0x0D	; 13
    19e8:	0e 94 13 0c 	call	0x1826	; 0x1826 <I2C_0_set_address_nack_callback>
    19ec:	0e 94 aa 0c 	call	0x1954	; 0x1954 <I2C_0_master_write>
    19f0:	c0 e1       	ldi	r28, 0x10	; 16
    19f2:	d7 e2       	ldi	r29, 0x27	; 39
    19f4:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <I2C_0_close>
    19f8:	81 30       	cpi	r24, 0x01	; 1
    19fa:	21 f4       	brne	.+8      	; 0x1a04 <I2C_0_writeNBytes+0x58>
    19fc:	21 97       	sbiw	r28, 0x01	; 1
    19fe:	d1 f7       	brne	.-12     	; 0x19f4 <I2C_0_writeNBytes+0x48>
    1a00:	82 e0       	ldi	r24, 0x02	; 2
    1a02:	07 c0       	rjmp	.+14     	; 0x1a12 <I2C_0_writeNBytes+0x66>
    1a04:	cd 2b       	or	r28, r29
    1a06:	21 f0       	breq	.+8      	; 0x1a10 <I2C_0_writeNBytes+0x64>
    1a08:	80 e0       	ldi	r24, 0x00	; 0
    1a0a:	03 c0       	rjmp	.+6      	; 0x1a12 <I2C_0_writeNBytes+0x66>
    1a0c:	81 e0       	ldi	r24, 0x01	; 1
    1a0e:	01 c0       	rjmp	.+2      	; 0x1a12 <I2C_0_writeNBytes+0x66>
    1a10:	82 e0       	ldi	r24, 0x02	; 2
    1a12:	df 91       	pop	r29
    1a14:	cf 91       	pop	r28
    1a16:	1f 91       	pop	r17
    1a18:	ff 90       	pop	r15
    1a1a:	ef 90       	pop	r14
    1a1c:	df 90       	pop	r13
    1a1e:	cf 90       	pop	r12
    1a20:	08 95       	ret

00001a22 <i2c_cb_restart_write>:
    1a22:	83 e0       	ldi	r24, 0x03	; 3
    1a24:	08 95       	ret

00001a26 <protected_write_io>:
    1a26:	1b be       	out	0x3b, r1	; 59
    1a28:	fc 01       	movw	r30, r24
    1a2a:	64 bf       	out	0x34, r22	; 52
    1a2c:	40 83       	st	Z, r20
    1a2e:	08 95       	ret

00001a30 <Timer_init>:
    1a30:	e0 e4       	ldi	r30, 0x40	; 64
    1a32:	f1 e0       	ldi	r31, 0x01	; 1
    1a34:	81 81       	ldd	r24, Z+1	; 0x01
    1a36:	81 11       	cpse	r24, r1
    1a38:	fd cf       	rjmp	.-6      	; 0x1a34 <Timer_init+0x4>
    1a3a:	e0 e4       	ldi	r30, 0x40	; 64
    1a3c:	f1 e0       	ldi	r31, 0x01	; 1
    1a3e:	81 e8       	ldi	r24, 0x81	; 129
    1a40:	80 83       	st	Z, r24
    1a42:	81 e0       	ldi	r24, 0x01	; 1
    1a44:	87 83       	std	Z+7, r24	; 0x07
    1a46:	82 e0       	ldi	r24, 0x02	; 2
    1a48:	82 83       	std	Z+2, r24	; 0x02
    1a4a:	80 e0       	ldi	r24, 0x00	; 0
    1a4c:	08 95       	ret

00001a4e <SLPCTRL_init>:
    1a4e:	83 e0       	ldi	r24, 0x03	; 3
    1a50:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x7e0050>
    1a54:	80 e0       	ldi	r24, 0x00	; 0
    1a56:	08 95       	ret

00001a58 <USART_init>:
 * \return Initialization status.
 */
int8_t USART_init()
{

	USART1.BAUD = (uint16_t)USART1_BAUD_RATE(115200); /* set baud rate register */
    1a58:	e0 e2       	ldi	r30, 0x20	; 32
    1a5a:	f8 e0       	ldi	r31, 0x08	; 8
    1a5c:	81 e4       	ldi	r24, 0x41	; 65
    1a5e:	93 e0       	ldi	r25, 0x03	; 3
    1a60:	80 87       	std	Z+8, r24	; 0x08
    1a62:	91 87       	std	Z+9, r25	; 0x09

	USART1.CTRLA = 0 << USART_ABEIE_bp    /* Auto-baud Error Interrupt Enable: disabled */
    1a64:	80 ec       	ldi	r24, 0xC0	; 192
    1a66:	85 83       	std	Z+5, r24	; 0x05
	               | USART_RS485_OFF_gc   /* RS485 Mode disabled */
	               | 1 << USART_RXCIE_bp  /* Receive Complete Interrupt Enable: enabled */
	               | 0 << USART_RXSIE_bp  /* Receiver Start Frame Interrupt Enable: disabled */
	               | 1 << USART_TXCIE_bp; /* Transmit Complete Interrupt Enable: enabled */

	USART1.CTRLB = 0 << USART_MPCM_bp       /* Multi-processor Communication Mode: disabled */
    1a68:	86 83       	std	Z+6, r24	; 0x06
	// USART1.RXPLCTRL = 0x0 << USART_RXPL_gp; /* Receiver Pulse Lenght: 0x0 */

	// USART1.TXPLCTRL = 0x0 << USART_TXPL_gp; /* Transmit pulse length: 0x0 */

	return 0;
}
    1a6a:	80 e0       	ldi	r24, 0x00	; 0
    1a6c:	08 95       	ret

00001a6e <check_for_aks_block>:
    1a6e:	cf 92       	push	r12
    1a70:	df 92       	push	r13
    1a72:	ff 92       	push	r15
    1a74:	0f 93       	push	r16
    1a76:	1f 93       	push	r17
    1a78:	cf 93       	push	r28
    1a7a:	df 93       	push	r29
    1a7c:	ec 01       	movw	r28, r24
    1a7e:	ae 81       	ldd	r26, Y+6	; 0x06
    1a80:	bf 81       	ldd	r27, Y+7	; 0x07
    1a82:	eb 01       	movw	r28, r22
    1a84:	cc 0f       	add	r28, r28
    1a86:	dd 1f       	adc	r29, r29
    1a88:	c6 0f       	add	r28, r22
    1a8a:	d7 1f       	adc	r29, r23
    1a8c:	ca 0f       	add	r28, r26
    1a8e:	db 1f       	adc	r29, r27
    1a90:	fa 80       	ldd	r15, Y+2	; 0x02
    1a92:	fc 01       	movw	r30, r24
    1a94:	44 81       	ldd	r20, Z+4	; 0x04
    1a96:	55 81       	ldd	r21, Z+5	; 0x05
    1a98:	e6 e0       	ldi	r30, 0x06	; 6
    1a9a:	e6 9f       	mul	r30, r22
    1a9c:	90 01       	movw	r18, r0
    1a9e:	e7 9f       	mul	r30, r23
    1aa0:	30 0d       	add	r19, r0
    1aa2:	11 24       	eor	r1, r1
    1aa4:	8a 01       	movw	r16, r20
    1aa6:	02 0f       	add	r16, r18
    1aa8:	13 1f       	adc	r17, r19
    1aaa:	f8 01       	movw	r30, r16
    1aac:	22 81       	ldd	r18, Z+2	; 0x02
    1aae:	33 81       	ldd	r19, Z+3	; 0x03
    1ab0:	f9 01       	movw	r30, r18
    1ab2:	21 81       	ldd	r18, Z+1	; 0x01
    1ab4:	32 81       	ldd	r19, Z+2	; 0x02
    1ab6:	f8 01       	movw	r30, r16
    1ab8:	04 81       	ldd	r16, Z+4	; 0x04
    1aba:	15 81       	ldd	r17, Z+5	; 0x05
    1abc:	20 1b       	sub	r18, r16
    1abe:	31 0b       	sbc	r19, r17
    1ac0:	e8 81       	ld	r30, Y
    1ac2:	2e 1b       	sub	r18, r30
    1ac4:	31 09       	sbc	r19, r1
    1ac6:	ec 01       	movw	r28, r24
    1ac8:	ea 81       	ldd	r30, Y+2	; 0x02
    1aca:	fb 81       	ldd	r31, Y+3	; 0x03
    1acc:	00 81       	ld	r16, Z
    1ace:	11 81       	ldd	r17, Z+1	; 0x01
    1ad0:	fa 01       	movw	r30, r20
    1ad2:	40 e0       	ldi	r20, 0x00	; 0
    1ad4:	50 e0       	ldi	r21, 0x00	; 0
    1ad6:	40 17       	cp	r20, r16
    1ad8:	51 07       	cpc	r21, r17
    1ada:	39 f1       	breq	.+78     	; 0x1b2a <check_for_aks_block+0xbc>
    1adc:	46 17       	cp	r20, r22
    1ade:	57 07       	cpc	r21, r23
    1ae0:	f9 f0       	breq	.+62     	; 0x1b20 <check_for_aks_block+0xb2>
    1ae2:	12 96       	adiw	r26, 0x02	; 2
    1ae4:	8c 91       	ld	r24, X
    1ae6:	12 97       	sbiw	r26, 0x02	; 2
    1ae8:	f8 12       	cpse	r15, r24
    1aea:	1a c0       	rjmp	.+52     	; 0x1b20 <check_for_aks_block+0xb2>
    1aec:	80 81       	ld	r24, Z
    1aee:	85 58       	subi	r24, 0x85	; 133
    1af0:	82 30       	cpi	r24, 0x02	; 2
    1af2:	e8 f0       	brcs	.+58     	; 0x1b2e <check_for_aks_block+0xc0>
    1af4:	c4 80       	ldd	r12, Z+4	; 0x04
    1af6:	d5 80       	ldd	r13, Z+5	; 0x05
    1af8:	82 81       	ldd	r24, Z+2	; 0x02
    1afa:	93 81       	ldd	r25, Z+3	; 0x03
    1afc:	ec 01       	movw	r28, r24
    1afe:	89 81       	ldd	r24, Y+1	; 0x01
    1b00:	9a 81       	ldd	r25, Y+2	; 0x02
    1b02:	c8 16       	cp	r12, r24
    1b04:	d9 06       	cpc	r13, r25
    1b06:	60 f4       	brcc	.+24     	; 0x1b20 <check_for_aks_block+0xb2>
    1b08:	8c 19       	sub	r24, r12
    1b0a:	9d 09       	sbc	r25, r13
    1b0c:	cc 91       	ld	r28, X
    1b0e:	d0 e0       	ldi	r29, 0x00	; 0
    1b10:	c8 17       	cp	r28, r24
    1b12:	d9 07       	cpc	r29, r25
    1b14:	28 f4       	brcc	.+10     	; 0x1b20 <check_for_aks_block+0xb2>
    1b16:	8c 1b       	sub	r24, r28
    1b18:	9d 0b       	sbc	r25, r29
    1b1a:	28 17       	cp	r18, r24
    1b1c:	39 07       	cpc	r19, r25
    1b1e:	38 f0       	brcs	.+14     	; 0x1b2e <check_for_aks_block+0xc0>
    1b20:	4f 5f       	subi	r20, 0xFF	; 255
    1b22:	5f 4f       	sbci	r21, 0xFF	; 255
    1b24:	13 96       	adiw	r26, 0x03	; 3
    1b26:	36 96       	adiw	r30, 0x06	; 6
    1b28:	d6 cf       	rjmp	.-84     	; 0x1ad6 <check_for_aks_block+0x68>
    1b2a:	80 e0       	ldi	r24, 0x00	; 0
    1b2c:	01 c0       	rjmp	.+2      	; 0x1b30 <check_for_aks_block+0xc2>
    1b2e:	81 e0       	ldi	r24, 0x01	; 1
    1b30:	df 91       	pop	r29
    1b32:	cf 91       	pop	r28
    1b34:	1f 91       	pop	r17
    1b36:	0f 91       	pop	r16
    1b38:	ff 90       	pop	r15
    1b3a:	df 90       	pop	r13
    1b3c:	cf 90       	pop	r12
    1b3e:	08 95       	ret

00001b40 <qtm_update_qtlib_timer>:
    1b40:	20 91 36 44 	lds	r18, 0x4436	; 0x804436 <qtm_local_ms_timecount>
    1b44:	30 91 37 44 	lds	r19, 0x4437	; 0x804437 <qtm_local_ms_timecount+0x1>
    1b48:	82 0f       	add	r24, r18
    1b4a:	93 1f       	adc	r25, r19
    1b4c:	80 93 36 44 	sts	0x4436, r24	; 0x804436 <qtm_local_ms_timecount>
    1b50:	90 93 37 44 	sts	0x4437, r25	; 0x804437 <qtm_local_ms_timecount+0x1>
    1b54:	08 95       	ret

00001b56 <qtm_init_sensor_key>:
    1b56:	00 97       	sbiw	r24, 0x00	; 0
    1b58:	d9 f0       	breq	.+54     	; 0x1b90 <qtm_init_sensor_key+0x3a>
    1b5a:	41 15       	cp	r20, r1
    1b5c:	51 05       	cpc	r21, r1
    1b5e:	c1 f0       	breq	.+48     	; 0x1b90 <qtm_init_sensor_key+0x3a>
    1b60:	26 e0       	ldi	r18, 0x06	; 6
    1b62:	62 9f       	mul	r22, r18
    1b64:	b0 01       	movw	r22, r0
    1b66:	11 24       	eor	r1, r1
    1b68:	dc 01       	movw	r26, r24
    1b6a:	14 96       	adiw	r26, 0x04	; 4
    1b6c:	ed 91       	ld	r30, X+
    1b6e:	fc 91       	ld	r31, X
    1b70:	15 97       	sbiw	r26, 0x05	; 5
    1b72:	e6 0f       	add	r30, r22
    1b74:	f7 1f       	adc	r31, r23
    1b76:	21 e0       	ldi	r18, 0x01	; 1
    1b78:	20 83       	st	Z, r18
    1b7a:	14 96       	adiw	r26, 0x04	; 4
    1b7c:	8d 91       	ld	r24, X+
    1b7e:	9c 91       	ld	r25, X
    1b80:	15 97       	sbiw	r26, 0x05	; 5
    1b82:	fc 01       	movw	r30, r24
    1b84:	e6 0f       	add	r30, r22
    1b86:	f7 1f       	adc	r31, r23
    1b88:	42 83       	std	Z+2, r20	; 0x02
    1b8a:	53 83       	std	Z+3, r21	; 0x03
    1b8c:	80 e0       	ldi	r24, 0x00	; 0
    1b8e:	08 95       	ret
    1b90:	8b e0       	ldi	r24, 0x0B	; 11
    1b92:	08 95       	ret

00001b94 <qtm_key_sensors_process>:
    1b94:	2f 92       	push	r2
    1b96:	3f 92       	push	r3
    1b98:	4f 92       	push	r4
    1b9a:	5f 92       	push	r5
    1b9c:	6f 92       	push	r6
    1b9e:	7f 92       	push	r7
    1ba0:	8f 92       	push	r8
    1ba2:	9f 92       	push	r9
    1ba4:	af 92       	push	r10
    1ba6:	bf 92       	push	r11
    1ba8:	cf 92       	push	r12
    1baa:	df 92       	push	r13
    1bac:	ef 92       	push	r14
    1bae:	ff 92       	push	r15
    1bb0:	0f 93       	push	r16
    1bb2:	1f 93       	push	r17
    1bb4:	cf 93       	push	r28
    1bb6:	df 93       	push	r29
    1bb8:	00 97       	sbiw	r24, 0x00	; 0
    1bba:	09 f4       	brne	.+2      	; 0x1bbe <qtm_key_sensors_process+0x2a>
    1bbc:	7d c3       	rjmp	.+1786   	; 0x22b8 <qtm_key_sensors_process+0x724>
    1bbe:	ec 01       	movw	r28, r24
    1bc0:	a1 2c       	mov	r10, r1
    1bc2:	b1 2c       	mov	r11, r1
    1bc4:	81 2c       	mov	r8, r1
    1bc6:	91 2c       	mov	r9, r1
    1bc8:	21 2c       	mov	r2, r1
    1bca:	d1 2c       	mov	r13, r1
    1bcc:	33 e0       	ldi	r19, 0x03	; 3
    1bce:	c3 2e       	mov	r12, r19
    1bd0:	45 e8       	ldi	r20, 0x85	; 133
    1bd2:	64 2e       	mov	r6, r20
    1bd4:	56 e8       	ldi	r21, 0x86	; 134
    1bd6:	75 2e       	mov	r7, r21
    1bd8:	67 e0       	ldi	r22, 0x07	; 7
    1bda:	36 2e       	mov	r3, r22
    1bdc:	72 e0       	ldi	r23, 0x02	; 2
    1bde:	47 2e       	mov	r4, r23
    1be0:	e8 e0       	ldi	r30, 0x08	; 8
    1be2:	5e 2e       	mov	r5, r30
    1be4:	ea 81       	ldd	r30, Y+2	; 0x02
    1be6:	fb 81       	ldd	r31, Y+3	; 0x03
    1be8:	80 81       	ld	r24, Z
    1bea:	91 81       	ldd	r25, Z+1	; 0x01
    1bec:	88 16       	cp	r8, r24
    1bee:	99 06       	cpc	r9, r25
    1bf0:	08 f0       	brcs	.+2      	; 0x1bf4 <qtm_key_sensors_process+0x60>
    1bf2:	a5 c1       	rjmp	.+842    	; 0x1f3e <qtm_key_sensors_process+0x3aa>
    1bf4:	75 01       	movw	r14, r10
    1bf6:	ee 0c       	add	r14, r14
    1bf8:	ff 1c       	adc	r15, r15
    1bfa:	0c 81       	ldd	r16, Y+4	; 0x04
    1bfc:	1d 81       	ldd	r17, Y+5	; 0x05
    1bfe:	0e 0d       	add	r16, r14
    1c00:	1f 1d       	adc	r17, r15
    1c02:	d8 01       	movw	r26, r16
    1c04:	8c 91       	ld	r24, X
    1c06:	84 30       	cpi	r24, 0x04	; 4
    1c08:	09 f4       	brne	.+2      	; 0x1c0c <qtm_key_sensors_process+0x78>
    1c0a:	a2 c0       	rjmp	.+324    	; 0x1d50 <qtm_key_sensors_process+0x1bc>
    1c0c:	38 f4       	brcc	.+14     	; 0x1c1c <qtm_key_sensors_process+0x88>
    1c0e:	82 30       	cpi	r24, 0x02	; 2
    1c10:	01 f1       	breq	.+64     	; 0x1c52 <qtm_key_sensors_process+0xbe>
    1c12:	08 f0       	brcs	.+2      	; 0x1c16 <qtm_key_sensors_process+0x82>
    1c14:	49 c0       	rjmp	.+146    	; 0x1ca8 <qtm_key_sensors_process+0x114>
    1c16:	81 30       	cpi	r24, 0x01	; 1
    1c18:	59 f0       	breq	.+22     	; 0x1c30 <qtm_key_sensors_process+0x9c>
    1c1a:	8a c1       	rjmp	.+788    	; 0x1f30 <qtm_key_sensors_process+0x39c>
    1c1c:	85 38       	cpi	r24, 0x85	; 133
    1c1e:	09 f4       	brne	.+2      	; 0x1c22 <qtm_key_sensors_process+0x8e>
    1c20:	c2 c0       	rjmp	.+388    	; 0x1da6 <qtm_key_sensors_process+0x212>
    1c22:	86 38       	cpi	r24, 0x86	; 134
    1c24:	09 f4       	brne	.+2      	; 0x1c28 <qtm_key_sensors_process+0x94>
    1c26:	f6 c0       	rjmp	.+492    	; 0x1e14 <qtm_key_sensors_process+0x280>
    1c28:	87 30       	cpi	r24, 0x07	; 7
    1c2a:	09 f0       	breq	.+2      	; 0x1c2e <qtm_key_sensors_process+0x9a>
    1c2c:	81 c1       	rjmp	.+770    	; 0x1f30 <qtm_key_sensors_process+0x39c>
    1c2e:	37 c1       	rjmp	.+622    	; 0x1e9e <qtm_key_sensors_process+0x30a>
    1c30:	d8 01       	movw	r26, r16
    1c32:	12 96       	adiw	r26, 0x02	; 2
    1c34:	ed 91       	ld	r30, X+
    1c36:	fc 91       	ld	r31, X
    1c38:	13 97       	sbiw	r26, 0x03	; 3
    1c3a:	80 81       	ld	r24, Z
    1c3c:	8e 71       	andi	r24, 0x1E	; 30
    1c3e:	09 f0       	breq	.+2      	; 0x1c42 <qtm_key_sensors_process+0xae>
    1c40:	69 c1       	rjmp	.+722    	; 0x1f14 <qtm_key_sensors_process+0x380>
    1c42:	4c 92       	st	X, r4
    1c44:	8c 81       	ldd	r24, Y+4	; 0x04
    1c46:	9d 81       	ldd	r25, Y+5	; 0x05
    1c48:	fc 01       	movw	r30, r24
    1c4a:	ee 0d       	add	r30, r14
    1c4c:	ff 1d       	adc	r31, r15
    1c4e:	51 82       	std	Z+1, r5	; 0x01
    1c50:	61 c1       	rjmp	.+706    	; 0x1f14 <qtm_key_sensors_process+0x380>
    1c52:	f8 01       	movw	r30, r16
    1c54:	21 81       	ldd	r18, Z+1	; 0x01
    1c56:	22 23       	and	r18, r18
    1c58:	29 f1       	breq	.+74     	; 0x1ca4 <qtm_key_sensors_process+0x110>
    1c5a:	02 80       	ldd	r0, Z+2	; 0x02
    1c5c:	f3 81       	ldd	r31, Z+3	; 0x03
    1c5e:	e0 2d       	mov	r30, r0
    1c60:	25 30       	cpi	r18, 0x05	; 5
    1c62:	20 f0       	brcs	.+8      	; 0x1c6c <qtm_key_sensors_process+0xd8>
    1c64:	81 81       	ldd	r24, Z+1	; 0x01
    1c66:	92 81       	ldd	r25, Z+2	; 0x02
    1c68:	d8 01       	movw	r26, r16
    1c6a:	0e c0       	rjmp	.+28     	; 0x1c88 <qtm_key_sensors_process+0xf4>
    1c6c:	d8 01       	movw	r26, r16
    1c6e:	14 96       	adiw	r26, 0x04	; 4
    1c70:	8d 91       	ld	r24, X+
    1c72:	9c 91       	ld	r25, X
    1c74:	15 97       	sbiw	r26, 0x05	; 5
    1c76:	41 81       	ldd	r20, Z+1	; 0x01
    1c78:	52 81       	ldd	r21, Z+2	; 0x02
    1c7a:	84 17       	cp	r24, r20
    1c7c:	95 07       	cpc	r25, r21
    1c7e:	69 f0       	breq	.+26     	; 0x1c9a <qtm_key_sensors_process+0x106>
    1c80:	48 17       	cp	r20, r24
    1c82:	59 07       	cpc	r21, r25
    1c84:	30 f4       	brcc	.+12     	; 0x1c92 <qtm_key_sensors_process+0xfe>
    1c86:	01 97       	sbiw	r24, 0x01	; 1
    1c88:	14 96       	adiw	r26, 0x04	; 4
    1c8a:	8d 93       	st	X+, r24
    1c8c:	9c 93       	st	X, r25
    1c8e:	15 97       	sbiw	r26, 0x05	; 5
    1c90:	04 c0       	rjmp	.+8      	; 0x1c9a <qtm_key_sensors_process+0x106>
    1c92:	01 96       	adiw	r24, 0x01	; 1
    1c94:	f8 01       	movw	r30, r16
    1c96:	84 83       	std	Z+4, r24	; 0x04
    1c98:	95 83       	std	Z+5, r25	; 0x05
    1c9a:	21 50       	subi	r18, 0x01	; 1
    1c9c:	d8 01       	movw	r26, r16
    1c9e:	11 96       	adiw	r26, 0x01	; 1
    1ca0:	2c 93       	st	X, r18
    1ca2:	38 c1       	rjmp	.+624    	; 0x1f14 <qtm_key_sensors_process+0x380>
    1ca4:	f8 01       	movw	r30, r16
    1ca6:	31 c1       	rjmp	.+610    	; 0x1f0a <qtm_key_sensors_process+0x376>
    1ca8:	d8 01       	movw	r26, r16
    1caa:	14 96       	adiw	r26, 0x04	; 4
    1cac:	2d 91       	ld	r18, X+
    1cae:	3c 91       	ld	r19, X
    1cb0:	15 97       	sbiw	r26, 0x05	; 5
    1cb2:	12 96       	adiw	r26, 0x02	; 2
    1cb4:	8d 91       	ld	r24, X+
    1cb6:	9c 91       	ld	r25, X
    1cb8:	13 97       	sbiw	r26, 0x03	; 3
    1cba:	dc 01       	movw	r26, r24
    1cbc:	11 96       	adiw	r26, 0x01	; 1
    1cbe:	4d 91       	ld	r20, X+
    1cc0:	5c 91       	ld	r21, X
    1cc2:	12 97       	sbiw	r26, 0x02	; 2
    1cc4:	24 17       	cp	r18, r20
    1cc6:	35 07       	cpc	r19, r21
    1cc8:	09 f4       	brne	.+2      	; 0x1ccc <qtm_key_sensors_process+0x138>
    1cca:	32 c1       	rjmp	.+612    	; 0x1f30 <qtm_key_sensors_process+0x39c>
    1ccc:	8e 81       	ldd	r24, Y+6	; 0x06
    1cce:	9f 81       	ldd	r25, Y+7	; 0x07
    1cd0:	42 17       	cp	r20, r18
    1cd2:	53 07       	cpc	r21, r19
    1cd4:	e0 f4       	brcc	.+56     	; 0x1d0e <qtm_key_sensors_process+0x17a>
    1cd6:	24 1b       	sub	r18, r20
    1cd8:	35 0b       	sbc	r19, r21
    1cda:	dc 01       	movw	r26, r24
    1cdc:	aa 0d       	add	r26, r10
    1cde:	bb 1d       	adc	r27, r11
    1ce0:	8c 91       	ld	r24, X
    1ce2:	90 e0       	ldi	r25, 0x00	; 0
    1ce4:	05 80       	ldd	r0, Z+5	; 0x05
    1ce6:	02 c0       	rjmp	.+4      	; 0x1cec <qtm_key_sensors_process+0x158>
    1ce8:	95 95       	asr	r25
    1cea:	87 95       	ror	r24
    1cec:	0a 94       	dec	r0
    1cee:	e2 f7       	brpl	.-8      	; 0x1ce8 <qtm_key_sensors_process+0x154>
    1cf0:	99 27       	eor	r25, r25
    1cf2:	28 17       	cp	r18, r24
    1cf4:	39 07       	cpc	r19, r25
    1cf6:	08 f4       	brcc	.+2      	; 0x1cfa <qtm_key_sensors_process+0x166>
    1cf8:	1b c1       	rjmp	.+566    	; 0x1f30 <qtm_key_sensors_process+0x39c>
    1cfa:	84 81       	ldd	r24, Z+4	; 0x04
    1cfc:	88 23       	and	r24, r24
    1cfe:	09 f4       	brne	.+2      	; 0x1d02 <qtm_key_sensors_process+0x16e>
    1d00:	17 c1       	rjmp	.+558    	; 0x1f30 <qtm_key_sensors_process+0x39c>
    1d02:	f8 01       	movw	r30, r16
    1d04:	30 82       	st	Z, r3
    1d06:	ea 81       	ldd	r30, Y+2	; 0x02
    1d08:	fb 81       	ldd	r31, Y+3	; 0x03
    1d0a:	24 81       	ldd	r18, Z+4	; 0x04
    1d0c:	1a c0       	rjmp	.+52     	; 0x1d42 <qtm_key_sensors_process+0x1ae>
    1d0e:	fc 01       	movw	r30, r24
    1d10:	ea 0d       	add	r30, r10
    1d12:	fb 1d       	adc	r31, r11
    1d14:	42 1b       	sub	r20, r18
    1d16:	53 0b       	sbc	r21, r19
    1d18:	80 81       	ld	r24, Z
    1d1a:	90 e0       	ldi	r25, 0x00	; 0
    1d1c:	48 17       	cp	r20, r24
    1d1e:	59 07       	cpc	r21, r25
    1d20:	08 f4       	brcc	.+2      	; 0x1d24 <qtm_key_sensors_process+0x190>
    1d22:	06 c1       	rjmp	.+524    	; 0x1f30 <qtm_key_sensors_process+0x39c>
    1d24:	82 81       	ldd	r24, Z+2	; 0x02
    1d26:	88 23       	and	r24, r24
    1d28:	31 f0       	breq	.+12     	; 0x1d36 <qtm_key_sensors_process+0x1a2>
    1d2a:	b4 01       	movw	r22, r8
    1d2c:	ce 01       	movw	r24, r28
    1d2e:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <check_for_aks_block>
    1d32:	81 11       	cpse	r24, r1
    1d34:	fd c0       	rjmp	.+506    	; 0x1f30 <qtm_key_sensors_process+0x39c>
    1d36:	e4 e0       	ldi	r30, 0x04	; 4
    1d38:	d8 01       	movw	r26, r16
    1d3a:	ec 93       	st	X, r30
    1d3c:	ea 81       	ldd	r30, Y+2	; 0x02
    1d3e:	fb 81       	ldd	r31, Y+3	; 0x03
    1d40:	22 81       	ldd	r18, Z+2	; 0x02
    1d42:	8c 81       	ldd	r24, Y+4	; 0x04
    1d44:	9d 81       	ldd	r25, Y+5	; 0x05
    1d46:	fc 01       	movw	r30, r24
    1d48:	ee 0d       	add	r30, r14
    1d4a:	ff 1d       	adc	r31, r15
    1d4c:	21 83       	std	Z+1, r18	; 0x01
    1d4e:	e2 c0       	rjmp	.+452    	; 0x1f14 <qtm_key_sensors_process+0x380>
    1d50:	d8 01       	movw	r26, r16
    1d52:	14 96       	adiw	r26, 0x04	; 4
    1d54:	2d 91       	ld	r18, X+
    1d56:	3c 91       	ld	r19, X
    1d58:	15 97       	sbiw	r26, 0x05	; 5
    1d5a:	12 96       	adiw	r26, 0x02	; 2
    1d5c:	ed 91       	ld	r30, X+
    1d5e:	fc 91       	ld	r31, X
    1d60:	13 97       	sbiw	r26, 0x03	; 3
    1d62:	81 81       	ldd	r24, Z+1	; 0x01
    1d64:	92 81       	ldd	r25, Z+2	; 0x02
    1d66:	82 17       	cp	r24, r18
    1d68:	93 07       	cpc	r25, r19
    1d6a:	08 f4       	brcc	.+2      	; 0x1d6e <qtm_key_sensors_process+0x1da>
    1d6c:	d7 c0       	rjmp	.+430    	; 0x1f1c <qtm_key_sensors_process+0x388>
    1d6e:	ee 81       	ldd	r30, Y+6	; 0x06
    1d70:	ff 81       	ldd	r31, Y+7	; 0x07
    1d72:	ea 0d       	add	r30, r10
    1d74:	fb 1d       	adc	r31, r11
    1d76:	82 1b       	sub	r24, r18
    1d78:	93 0b       	sbc	r25, r19
    1d7a:	20 81       	ld	r18, Z
    1d7c:	30 e0       	ldi	r19, 0x00	; 0
    1d7e:	28 17       	cp	r18, r24
    1d80:	39 07       	cpc	r19, r25
    1d82:	08 f0       	brcs	.+2      	; 0x1d86 <qtm_key_sensors_process+0x1f2>
    1d84:	af c0       	rjmp	.+350    	; 0x1ee4 <qtm_key_sensors_process+0x350>
    1d86:	82 81       	ldd	r24, Z+2	; 0x02
    1d88:	88 23       	and	r24, r24
    1d8a:	31 f0       	breq	.+12     	; 0x1d98 <qtm_key_sensors_process+0x204>
    1d8c:	b4 01       	movw	r22, r8
    1d8e:	ce 01       	movw	r24, r28
    1d90:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <check_for_aks_block>
    1d94:	81 11       	cpse	r24, r1
    1d96:	cc c0       	rjmp	.+408    	; 0x1f30 <qtm_key_sensors_process+0x39c>
    1d98:	f8 01       	movw	r30, r16
    1d9a:	81 81       	ldd	r24, Z+1	; 0x01
    1d9c:	88 23       	and	r24, r24
    1d9e:	09 f4       	brne	.+2      	; 0x1da2 <qtm_key_sensors_process+0x20e>
    1da0:	67 c0       	rjmp	.+206    	; 0x1e70 <qtm_key_sensors_process+0x2dc>
    1da2:	81 50       	subi	r24, 0x01	; 1
    1da4:	b6 c0       	rjmp	.+364    	; 0x1f12 <qtm_key_sensors_process+0x37e>
    1da6:	a8 81       	ld	r26, Y
    1da8:	b9 81       	ldd	r27, Y+1	; 0x01
    1daa:	80 85       	ldd	r24, Z+8	; 0x08
    1dac:	13 96       	adiw	r26, 0x03	; 3
    1dae:	8c 93       	st	X, r24
    1db0:	ec 81       	ldd	r30, Y+4	; 0x04
    1db2:	fd 81       	ldd	r31, Y+5	; 0x05
    1db4:	ee 0d       	add	r30, r14
    1db6:	ff 1d       	adc	r31, r15
    1db8:	44 81       	ldd	r20, Z+4	; 0x04
    1dba:	55 81       	ldd	r21, Z+5	; 0x05
    1dbc:	a2 81       	ldd	r26, Z+2	; 0x02
    1dbe:	b3 81       	ldd	r27, Z+3	; 0x03
    1dc0:	11 96       	adiw	r26, 0x01	; 1
    1dc2:	8d 91       	ld	r24, X+
    1dc4:	9c 91       	ld	r25, X
    1dc6:	12 97       	sbiw	r26, 0x02	; 2
    1dc8:	84 17       	cp	r24, r20
    1dca:	95 07       	cpc	r25, r21
    1dcc:	c0 f0       	brcs	.+48     	; 0x1dfe <qtm_key_sensors_process+0x26a>
    1dce:	ae 81       	ldd	r26, Y+6	; 0x06
    1dd0:	bf 81       	ldd	r27, Y+7	; 0x07
    1dd2:	aa 0d       	add	r26, r10
    1dd4:	bb 1d       	adc	r27, r11
    1dd6:	6c 91       	ld	r22, X
    1dd8:	26 2f       	mov	r18, r22
    1dda:	30 e0       	ldi	r19, 0x00	; 0
    1ddc:	11 96       	adiw	r26, 0x01	; 1
    1dde:	7c 91       	ld	r23, X
    1de0:	7f 5f       	subi	r23, 0xFF	; 255
    1de2:	02 c0       	rjmp	.+4      	; 0x1de8 <qtm_key_sensors_process+0x254>
    1de4:	35 95       	asr	r19
    1de6:	27 95       	ror	r18
    1de8:	7a 95       	dec	r23
    1dea:	e2 f7       	brpl	.-8      	; 0x1de4 <qtm_key_sensors_process+0x250>
    1dec:	84 1b       	sub	r24, r20
    1dee:	95 0b       	sbc	r25, r21
    1df0:	62 1b       	sub	r22, r18
    1df2:	26 2f       	mov	r18, r22
    1df4:	30 e0       	ldi	r19, 0x00	; 0
    1df6:	28 17       	cp	r18, r24
    1df8:	39 07       	cpc	r19, r25
    1dfa:	08 f4       	brcc	.+2      	; 0x1dfe <qtm_key_sensors_process+0x26a>
    1dfc:	97 c0       	rjmp	.+302    	; 0x1f2c <qtm_key_sensors_process+0x398>
    1dfe:	70 82       	st	Z, r7
    1e00:	ea 81       	ldd	r30, Y+2	; 0x02
    1e02:	fb 81       	ldd	r31, Y+3	; 0x03
    1e04:	22 81       	ldd	r18, Z+2	; 0x02
    1e06:	8c 81       	ldd	r24, Y+4	; 0x04
    1e08:	9d 81       	ldd	r25, Y+5	; 0x05
    1e0a:	fc 01       	movw	r30, r24
    1e0c:	ee 0d       	add	r30, r14
    1e0e:	ff 1d       	adc	r31, r15
    1e10:	21 83       	std	Z+1, r18	; 0x01
    1e12:	42 c0       	rjmp	.+132    	; 0x1e98 <qtm_key_sensors_process+0x304>
    1e14:	d8 01       	movw	r26, r16
    1e16:	14 96       	adiw	r26, 0x04	; 4
    1e18:	6d 91       	ld	r22, X+
    1e1a:	7c 91       	ld	r23, X
    1e1c:	15 97       	sbiw	r26, 0x05	; 5
    1e1e:	12 96       	adiw	r26, 0x02	; 2
    1e20:	ed 91       	ld	r30, X+
    1e22:	fc 91       	ld	r31, X
    1e24:	13 97       	sbiw	r26, 0x03	; 3
    1e26:	21 81       	ldd	r18, Z+1	; 0x01
    1e28:	32 81       	ldd	r19, Z+2	; 0x02
    1e2a:	26 17       	cp	r18, r22
    1e2c:	37 07       	cpc	r19, r23
    1e2e:	58 f4       	brcc	.+22     	; 0x1e46 <qtm_key_sensors_process+0x2b2>
    1e30:	11 96       	adiw	r26, 0x01	; 1
    1e32:	8c 91       	ld	r24, X
    1e34:	11 97       	sbiw	r26, 0x01	; 1
    1e36:	81 11       	cpse	r24, r1
    1e38:	02 c0       	rjmp	.+4      	; 0x1e3e <qtm_key_sensors_process+0x2aa>
    1e3a:	cc 92       	st	X, r12
    1e3c:	77 c0       	rjmp	.+238    	; 0x1f2c <qtm_key_sensors_process+0x398>
    1e3e:	81 50       	subi	r24, 0x01	; 1
    1e40:	f8 01       	movw	r30, r16
    1e42:	81 83       	std	Z+1, r24	; 0x01
    1e44:	73 c0       	rjmp	.+230    	; 0x1f2c <qtm_key_sensors_process+0x398>
    1e46:	ee 81       	ldd	r30, Y+6	; 0x06
    1e48:	ff 81       	ldd	r31, Y+7	; 0x07
    1e4a:	ea 0d       	add	r30, r10
    1e4c:	fb 1d       	adc	r31, r11
    1e4e:	80 81       	ld	r24, Z
    1e50:	48 2f       	mov	r20, r24
    1e52:	50 e0       	ldi	r21, 0x00	; 0
    1e54:	91 81       	ldd	r25, Z+1	; 0x01
    1e56:	9f 5f       	subi	r25, 0xFF	; 255
    1e58:	02 c0       	rjmp	.+4      	; 0x1e5e <qtm_key_sensors_process+0x2ca>
    1e5a:	55 95       	asr	r21
    1e5c:	47 95       	ror	r20
    1e5e:	9a 95       	dec	r25
    1e60:	e2 f7       	brpl	.-8      	; 0x1e5a <qtm_key_sensors_process+0x2c6>
    1e62:	26 1b       	sub	r18, r22
    1e64:	37 0b       	sbc	r19, r23
    1e66:	84 1b       	sub	r24, r20
    1e68:	90 e0       	ldi	r25, 0x00	; 0
    1e6a:	82 17       	cp	r24, r18
    1e6c:	93 07       	cpc	r25, r19
    1e6e:	60 f4       	brcc	.+24     	; 0x1e88 <qtm_key_sensors_process+0x2f4>
    1e70:	d8 01       	movw	r26, r16
    1e72:	6c 92       	st	X, r6
    1e74:	ea 81       	ldd	r30, Y+2	; 0x02
    1e76:	fb 81       	ldd	r31, Y+3	; 0x03
    1e78:	23 81       	ldd	r18, Z+3	; 0x03
    1e7a:	8c 81       	ldd	r24, Y+4	; 0x04
    1e7c:	9d 81       	ldd	r25, Y+5	; 0x05
    1e7e:	fc 01       	movw	r30, r24
    1e80:	ee 0d       	add	r30, r14
    1e82:	ff 1d       	adc	r31, r15
    1e84:	21 83       	std	Z+1, r18	; 0x01
    1e86:	52 c0       	rjmp	.+164    	; 0x1f2c <qtm_key_sensors_process+0x398>
    1e88:	f8 01       	movw	r30, r16
    1e8a:	81 81       	ldd	r24, Z+1	; 0x01
    1e8c:	81 11       	cpse	r24, r1
    1e8e:	02 c0       	rjmp	.+4      	; 0x1e94 <qtm_key_sensors_process+0x300>
    1e90:	c0 82       	st	Z, r12
    1e92:	4c c0       	rjmp	.+152    	; 0x1f2c <qtm_key_sensors_process+0x398>
    1e94:	81 50       	subi	r24, 0x01	; 1
    1e96:	81 83       	std	Z+1, r24	; 0x01
    1e98:	22 24       	eor	r2, r2
    1e9a:	23 94       	inc	r2
    1e9c:	3b c0       	rjmp	.+118    	; 0x1f14 <qtm_key_sensors_process+0x380>
    1e9e:	d8 01       	movw	r26, r16
    1ea0:	14 96       	adiw	r26, 0x04	; 4
    1ea2:	2d 91       	ld	r18, X+
    1ea4:	3c 91       	ld	r19, X
    1ea6:	15 97       	sbiw	r26, 0x05	; 5
    1ea8:	12 96       	adiw	r26, 0x02	; 2
    1eaa:	8d 91       	ld	r24, X+
    1eac:	9c 91       	ld	r25, X
    1eae:	13 97       	sbiw	r26, 0x03	; 3
    1eb0:	dc 01       	movw	r26, r24
    1eb2:	11 96       	adiw	r26, 0x01	; 1
    1eb4:	8d 91       	ld	r24, X+
    1eb6:	9c 91       	ld	r25, X
    1eb8:	12 97       	sbiw	r26, 0x02	; 2
    1eba:	82 17       	cp	r24, r18
    1ebc:	93 07       	cpc	r25, r19
    1ebe:	68 f5       	brcc	.+90     	; 0x1f1a <qtm_key_sensors_process+0x386>
    1ec0:	28 1b       	sub	r18, r24
    1ec2:	39 0b       	sbc	r19, r25
    1ec4:	ae 81       	ldd	r26, Y+6	; 0x06
    1ec6:	bf 81       	ldd	r27, Y+7	; 0x07
    1ec8:	aa 0d       	add	r26, r10
    1eca:	bb 1d       	adc	r27, r11
    1ecc:	8c 91       	ld	r24, X
    1ece:	90 e0       	ldi	r25, 0x00	; 0
    1ed0:	05 80       	ldd	r0, Z+5	; 0x05
    1ed2:	02 c0       	rjmp	.+4      	; 0x1ed8 <qtm_key_sensors_process+0x344>
    1ed4:	95 95       	asr	r25
    1ed6:	87 95       	ror	r24
    1ed8:	0a 94       	dec	r0
    1eda:	e2 f7       	brpl	.-8      	; 0x1ed4 <qtm_key_sensors_process+0x340>
    1edc:	99 27       	eor	r25, r25
    1ede:	28 17       	cp	r18, r24
    1ee0:	39 07       	cpc	r19, r25
    1ee2:	18 f4       	brcc	.+6      	; 0x1eea <qtm_key_sensors_process+0x356>
    1ee4:	f8 01       	movw	r30, r16
    1ee6:	c0 82       	st	Z, r12
    1ee8:	1a c0       	rjmp	.+52     	; 0x1f1e <qtm_key_sensors_process+0x38a>
    1eea:	d8 01       	movw	r26, r16
    1eec:	11 96       	adiw	r26, 0x01	; 1
    1eee:	8c 91       	ld	r24, X
    1ef0:	11 97       	sbiw	r26, 0x01	; 1
    1ef2:	81 11       	cpse	r24, r1
    1ef4:	0c c0       	rjmp	.+24     	; 0x1f0e <qtm_key_sensors_process+0x37a>
    1ef6:	81 e0       	ldi	r24, 0x01	; 1
    1ef8:	8c 93       	st	X, r24
    1efa:	8c 81       	ldd	r24, Y+4	; 0x04
    1efc:	9d 81       	ldd	r25, Y+5	; 0x05
    1efe:	fc 01       	movw	r30, r24
    1f00:	ee 0d       	add	r30, r14
    1f02:	ff 1d       	adc	r31, r15
    1f04:	02 80       	ldd	r0, Z+2	; 0x02
    1f06:	f3 81       	ldd	r31, Z+3	; 0x03
    1f08:	e0 2d       	mov	r30, r0
    1f0a:	c0 82       	st	Z, r12
    1f0c:	11 c0       	rjmp	.+34     	; 0x1f30 <qtm_key_sensors_process+0x39c>
    1f0e:	81 50       	subi	r24, 0x01	; 1
    1f10:	f8 01       	movw	r30, r16
    1f12:	81 83       	std	Z+1, r24	; 0x01
    1f14:	dd 24       	eor	r13, r13
    1f16:	d3 94       	inc	r13
    1f18:	0b c0       	rjmp	.+22     	; 0x1f30 <qtm_key_sensors_process+0x39c>
    1f1a:	d8 01       	movw	r26, r16
    1f1c:	cc 92       	st	X, r12
    1f1e:	8c 81       	ldd	r24, Y+4	; 0x04
    1f20:	9d 81       	ldd	r25, Y+5	; 0x05
    1f22:	fc 01       	movw	r30, r24
    1f24:	ee 0d       	add	r30, r14
    1f26:	ff 1d       	adc	r31, r15
    1f28:	11 82       	std	Z+1, r1	; 0x01
    1f2a:	02 c0       	rjmp	.+4      	; 0x1f30 <qtm_key_sensors_process+0x39c>
    1f2c:	22 24       	eor	r2, r2
    1f2e:	23 94       	inc	r2
    1f30:	bf ef       	ldi	r27, 0xFF	; 255
    1f32:	8b 1a       	sub	r8, r27
    1f34:	9b 0a       	sbc	r9, r27
    1f36:	e3 e0       	ldi	r30, 0x03	; 3
    1f38:	ae 0e       	add	r10, r30
    1f3a:	b1 1c       	adc	r11, r1
    1f3c:	53 ce       	rjmp	.-858    	; 0x1be4 <qtm_key_sensors_process+0x50>
    1f3e:	e8 81       	ld	r30, Y
    1f40:	f9 81       	ldd	r31, Y+1	; 0x01
    1f42:	80 81       	ld	r24, Z
    1f44:	87 ff       	sbrs	r24, 7
    1f46:	23 c0       	rjmp	.+70     	; 0x1f8e <qtm_key_sensors_process+0x3fa>
    1f48:	40 e0       	ldi	r20, 0x00	; 0
    1f4a:	50 e0       	ldi	r21, 0x00	; 0
    1f4c:	20 e0       	ldi	r18, 0x00	; 0
    1f4e:	30 e0       	ldi	r19, 0x00	; 0
    1f50:	ea 81       	ldd	r30, Y+2	; 0x02
    1f52:	fb 81       	ldd	r31, Y+3	; 0x03
    1f54:	80 81       	ld	r24, Z
    1f56:	91 81       	ldd	r25, Z+1	; 0x01
    1f58:	28 17       	cp	r18, r24
    1f5a:	39 07       	cpc	r19, r25
    1f5c:	98 f4       	brcc	.+38     	; 0x1f84 <qtm_key_sensors_process+0x3f0>
    1f5e:	ec 81       	ldd	r30, Y+4	; 0x04
    1f60:	fd 81       	ldd	r31, Y+5	; 0x05
    1f62:	e4 0f       	add	r30, r20
    1f64:	f5 1f       	adc	r31, r21
    1f66:	a2 81       	ldd	r26, Z+2	; 0x02
    1f68:	b3 81       	ldd	r27, Z+3	; 0x03
    1f6a:	8c 91       	ld	r24, X
    1f6c:	80 fd       	sbrc	r24, 0
    1f6e:	05 c0       	rjmp	.+10     	; 0x1f7a <qtm_key_sensors_process+0x3e6>
    1f70:	90 81       	ld	r25, Z
    1f72:	97 7f       	andi	r25, 0xF7	; 247
    1f74:	11 f0       	breq	.+4      	; 0x1f7a <qtm_key_sensors_process+0x3e6>
    1f76:	81 60       	ori	r24, 0x01	; 1
    1f78:	8c 93       	st	X, r24
    1f7a:	2f 5f       	subi	r18, 0xFF	; 255
    1f7c:	3f 4f       	sbci	r19, 0xFF	; 255
    1f7e:	4a 5f       	subi	r20, 0xFA	; 250
    1f80:	5f 4f       	sbci	r21, 0xFF	; 255
    1f82:	e6 cf       	rjmp	.-52     	; 0x1f50 <qtm_key_sensors_process+0x3bc>
    1f84:	e8 81       	ld	r30, Y
    1f86:	f9 81       	ldd	r31, Y+1	; 0x01
    1f88:	80 81       	ld	r24, Z
    1f8a:	8f 77       	andi	r24, 0x7F	; 127
    1f8c:	80 83       	st	Z, r24
    1f8e:	d1 10       	cpse	r13, r1
    1f90:	07 c0       	rjmp	.+14     	; 0x1fa0 <qtm_key_sensors_process+0x40c>
    1f92:	e8 81       	ld	r30, Y
    1f94:	f9 81       	ldd	r31, Y+1	; 0x01
    1f96:	21 10       	cpse	r2, r1
    1f98:	6f c0       	rjmp	.+222    	; 0x2078 <qtm_key_sensors_process+0x4e4>
    1f9a:	80 81       	ld	r24, Z
    1f9c:	8e 7f       	andi	r24, 0xFE	; 254
    1f9e:	6e c0       	rjmp	.+220    	; 0x207c <qtm_key_sensors_process+0x4e8>
    1fa0:	ea 81       	ldd	r30, Y+2	; 0x02
    1fa2:	fb 81       	ldd	r31, Y+3	; 0x03
    1fa4:	81 85       	ldd	r24, Z+9	; 0x09
    1fa6:	88 23       	and	r24, r24
    1fa8:	a1 f3       	breq	.-24     	; 0x1f92 <qtm_key_sensors_process+0x3fe>
    1faa:	e8 81       	ld	r30, Y
    1fac:	f9 81       	ldd	r31, Y+1	; 0x01
    1fae:	80 81       	ld	r24, Z
    1fb0:	80 68       	ori	r24, 0x80	; 128
    1fb2:	80 83       	st	Z, r24
    1fb4:	ea 81       	ldd	r30, Y+2	; 0x02
    1fb6:	fb 81       	ldd	r31, Y+3	; 0x03
    1fb8:	81 85       	ldd	r24, Z+9	; 0x09
    1fba:	81 30       	cpi	r24, 0x01	; 1
    1fbc:	51 f7       	brne	.-44     	; 0x1f92 <qtm_key_sensors_process+0x3fe>
    1fbe:	40 e0       	ldi	r20, 0x00	; 0
    1fc0:	50 e0       	ldi	r21, 0x00	; 0
    1fc2:	20 e0       	ldi	r18, 0x00	; 0
    1fc4:	30 e0       	ldi	r19, 0x00	; 0
    1fc6:	96 e0       	ldi	r25, 0x06	; 6
    1fc8:	d9 2e       	mov	r13, r25
    1fca:	ea 81       	ldd	r30, Y+2	; 0x02
    1fcc:	fb 81       	ldd	r31, Y+3	; 0x03
    1fce:	60 81       	ld	r22, Z
    1fd0:	71 81       	ldd	r23, Z+1	; 0x01
    1fd2:	26 17       	cp	r18, r22
    1fd4:	37 07       	cpc	r19, r23
    1fd6:	e8 f6       	brcc	.-70     	; 0x1f92 <qtm_key_sensors_process+0x3fe>
    1fd8:	0c 81       	ldd	r16, Y+4	; 0x04
    1fda:	1d 81       	ldd	r17, Y+5	; 0x05
    1fdc:	fa 01       	movw	r30, r20
    1fde:	ee 0f       	add	r30, r30
    1fe0:	ff 1f       	adc	r31, r31
    1fe2:	e0 0f       	add	r30, r16
    1fe4:	f1 1f       	adc	r31, r17
    1fe6:	80 81       	ld	r24, Z
    1fe8:	98 2f       	mov	r25, r24
    1fea:	97 7f       	andi	r25, 0xF7	; 247
    1fec:	a1 f1       	breq	.+104    	; 0x2056 <qtm_key_sensors_process+0x4c2>
    1fee:	85 38       	cpi	r24, 0x85	; 133
    1ff0:	11 f0       	breq	.+4      	; 0x1ff6 <qtm_key_sensors_process+0x462>
    1ff2:	83 30       	cpi	r24, 0x03	; 3
    1ff4:	b1 f5       	brne	.+108    	; 0x2062 <qtm_key_sensors_process+0x4ce>
    1ff6:	ee 80       	ldd	r14, Y+6	; 0x06
    1ff8:	ff 80       	ldd	r15, Y+7	; 0x07
    1ffa:	d7 01       	movw	r26, r14
    1ffc:	a4 0f       	add	r26, r20
    1ffe:	b5 1f       	adc	r27, r21
    2000:	12 96       	adiw	r26, 0x02	; 2
    2002:	bc 90       	ld	r11, X
    2004:	bb 20       	and	r11, r11
    2006:	39 f1       	breq	.+78     	; 0x2056 <qtm_key_sensors_process+0x4c2>
    2008:	80 e0       	ldi	r24, 0x00	; 0
    200a:	90 e0       	ldi	r25, 0x00	; 0
    200c:	c1 2c       	mov	r12, r1
    200e:	86 17       	cp	r24, r22
    2010:	97 07       	cpc	r25, r23
    2012:	f8 f4       	brcc	.+62     	; 0x2052 <qtm_key_sensors_process+0x4be>
    2014:	28 17       	cp	r18, r24
    2016:	39 07       	cpc	r19, r25
    2018:	d1 f0       	breq	.+52     	; 0x204e <qtm_key_sensors_process+0x4ba>
    201a:	d8 9e       	mul	r13, r24
    201c:	d0 01       	movw	r26, r0
    201e:	d9 9e       	mul	r13, r25
    2020:	b0 0d       	add	r27, r0
    2022:	11 24       	eor	r1, r1
    2024:	a0 0f       	add	r26, r16
    2026:	b1 1f       	adc	r27, r17
    2028:	ac 91       	ld	r26, X
    202a:	a4 30       	cpi	r26, 0x04	; 4
    202c:	11 f0       	breq	.+4      	; 0x2032 <qtm_key_sensors_process+0x49e>
    202e:	a6 38       	cpi	r26, 0x86	; 134
    2030:	71 f4       	brne	.+28     	; 0x204e <qtm_key_sensors_process+0x4ba>
    2032:	dc 01       	movw	r26, r24
    2034:	aa 0f       	add	r26, r26
    2036:	bb 1f       	adc	r27, r27
    2038:	a8 0f       	add	r26, r24
    203a:	b9 1f       	adc	r27, r25
    203c:	ae 0d       	add	r26, r14
    203e:	bf 1d       	adc	r27, r15
    2040:	12 96       	adiw	r26, 0x02	; 2
    2042:	ac 91       	ld	r26, X
    2044:	ba 12       	cpse	r11, r26
    2046:	03 c0       	rjmp	.+6      	; 0x204e <qtm_key_sensors_process+0x4ba>
    2048:	cb 01       	movw	r24, r22
    204a:	cc 24       	eor	r12, r12
    204c:	c3 94       	inc	r12
    204e:	01 96       	adiw	r24, 0x01	; 1
    2050:	de cf       	rjmp	.-68     	; 0x200e <qtm_key_sensors_process+0x47a>
    2052:	c1 10       	cpse	r12, r1
    2054:	06 c0       	rjmp	.+12     	; 0x2062 <qtm_key_sensors_process+0x4ce>
    2056:	02 80       	ldd	r0, Z+2	; 0x02
    2058:	f3 81       	ldd	r31, Z+3	; 0x03
    205a:	e0 2d       	mov	r30, r0
    205c:	80 81       	ld	r24, Z
    205e:	8e 7f       	andi	r24, 0xFE	; 254
    2060:	05 c0       	rjmp	.+10     	; 0x206c <qtm_key_sensors_process+0x4d8>
    2062:	02 80       	ldd	r0, Z+2	; 0x02
    2064:	f3 81       	ldd	r31, Z+3	; 0x03
    2066:	e0 2d       	mov	r30, r0
    2068:	80 81       	ld	r24, Z
    206a:	81 60       	ori	r24, 0x01	; 1
    206c:	80 83       	st	Z, r24
    206e:	2f 5f       	subi	r18, 0xFF	; 255
    2070:	3f 4f       	sbci	r19, 0xFF	; 255
    2072:	4d 5f       	subi	r20, 0xFD	; 253
    2074:	5f 4f       	sbci	r21, 0xFF	; 255
    2076:	a9 cf       	rjmp	.-174    	; 0x1fca <qtm_key_sensors_process+0x436>
    2078:	80 81       	ld	r24, Z
    207a:	81 60       	ori	r24, 0x01	; 1
    207c:	80 83       	st	Z, r24
    207e:	80 91 36 44 	lds	r24, 0x4436	; 0x804436 <qtm_local_ms_timecount>
    2082:	90 91 37 44 	lds	r25, 0x4437	; 0x804437 <qtm_local_ms_timecount+0x1>
    2086:	e8 81       	ld	r30, Y
    2088:	f9 81       	ldd	r31, Y+1	; 0x01
    208a:	21 81       	ldd	r18, Z+1	; 0x01
    208c:	32 81       	ldd	r19, Z+2	; 0x02
    208e:	a9 01       	movw	r20, r18
    2090:	48 53       	subi	r20, 0x38	; 56
    2092:	5f 4f       	sbci	r21, 0xFF	; 255
    2094:	48 17       	cp	r20, r24
    2096:	59 07       	cpc	r21, r25
    2098:	38 f4       	brcc	.+14     	; 0x20a8 <qtm_key_sensors_process+0x514>
    209a:	82 1b       	sub	r24, r18
    209c:	93 0b       	sbc	r25, r19
    209e:	aa 24       	eor	r10, r10
    20a0:	a3 94       	inc	r10
    20a2:	a3 e0       	ldi	r26, 0x03	; 3
    20a4:	ba 2e       	mov	r11, r26
    20a6:	44 c0       	rjmp	.+136    	; 0x2130 <qtm_key_sensors_process+0x59c>
    20a8:	82 17       	cp	r24, r18
    20aa:	93 07       	cpc	r25, r19
    20ac:	10 f0       	brcs	.+4      	; 0x20b2 <qtm_key_sensors_process+0x51e>
    20ae:	80 e0       	ldi	r24, 0x00	; 0
    20b0:	04 c1       	rjmp	.+520    	; 0x22ba <qtm_key_sensors_process+0x726>
    20b2:	82 1b       	sub	r24, r18
    20b4:	93 0b       	sbc	r25, r19
    20b6:	01 97       	sbiw	r24, 0x01	; 1
    20b8:	89 3c       	cpi	r24, 0xC9	; 201
    20ba:	91 05       	cpc	r25, r1
    20bc:	c0 f3       	brcs	.-16     	; 0x20ae <qtm_key_sensors_process+0x51a>
    20be:	ef cf       	rjmp	.-34     	; 0x209e <qtm_key_sensors_process+0x50a>
    20c0:	88 5c       	subi	r24, 0xC8	; 200
    20c2:	91 09       	sbc	r25, r1
    20c4:	e8 81       	ld	r30, Y
    20c6:	f9 81       	ldd	r31, Y+1	; 0x01
    20c8:	21 81       	ldd	r18, Z+1	; 0x01
    20ca:	32 81       	ldd	r19, Z+2	; 0x02
    20cc:	28 53       	subi	r18, 0x38	; 56
    20ce:	3f 4f       	sbci	r19, 0xFF	; 255
    20d0:	21 83       	std	Z+1, r18	; 0x01
    20d2:	32 83       	std	Z+2, r19	; 0x02
    20d4:	23 81       	ldd	r18, Z+3	; 0x03
    20d6:	21 11       	cpse	r18, r1
    20d8:	96 c0       	rjmp	.+300    	; 0x2206 <qtm_key_sensors_process+0x672>
    20da:	24 81       	ldd	r18, Z+4	; 0x04
    20dc:	22 23       	and	r18, r18
    20de:	11 f0       	breq	.+4      	; 0x20e4 <qtm_key_sensors_process+0x550>
    20e0:	21 50       	subi	r18, 0x01	; 1
    20e2:	24 83       	std	Z+4, r18	; 0x04
    20e4:	e8 81       	ld	r30, Y
    20e6:	f9 81       	ldd	r31, Y+1	; 0x01
    20e8:	25 81       	ldd	r18, Z+5	; 0x05
    20ea:	22 23       	and	r18, r18
    20ec:	11 f0       	breq	.+4      	; 0x20f2 <qtm_key_sensors_process+0x55e>
    20ee:	21 50       	subi	r18, 0x01	; 1
    20f0:	25 83       	std	Z+5, r18	; 0x05
    20f2:	8a 80       	ldd	r8, Y+2	; 0x02
    20f4:	9b 80       	ldd	r9, Y+3	; 0x03
    20f6:	d4 01       	movw	r26, r8
    20f8:	16 96       	adiw	r26, 0x06	; 6
    20fa:	2c 91       	ld	r18, X
    20fc:	16 97       	sbiw	r26, 0x06	; 6
    20fe:	21 11       	cpse	r18, r1
    2100:	1b c0       	rjmp	.+54     	; 0x2138 <qtm_key_sensors_process+0x5a4>
    2102:	8a 80       	ldd	r8, Y+2	; 0x02
    2104:	9b 80       	ldd	r9, Y+3	; 0x03
    2106:	f4 01       	movw	r30, r8
    2108:	27 81       	ldd	r18, Z+7	; 0x07
    210a:	21 11       	cpse	r18, r1
    210c:	48 c0       	rjmp	.+144    	; 0x219e <qtm_key_sensors_process+0x60a>
    210e:	ea 81       	ldd	r30, Y+2	; 0x02
    2110:	fb 81       	ldd	r31, Y+3	; 0x03
    2112:	23 81       	ldd	r18, Z+3	; 0x03
    2114:	22 23       	and	r18, r18
    2116:	61 f0       	breq	.+24     	; 0x2130 <qtm_key_sensors_process+0x59c>
    2118:	20 e0       	ldi	r18, 0x00	; 0
    211a:	30 e0       	ldi	r19, 0x00	; 0
    211c:	a0 e0       	ldi	r26, 0x00	; 0
    211e:	b0 e0       	ldi	r27, 0x00	; 0
    2120:	ea 81       	ldd	r30, Y+2	; 0x02
    2122:	fb 81       	ldd	r31, Y+3	; 0x03
    2124:	40 81       	ld	r20, Z
    2126:	51 81       	ldd	r21, Z+1	; 0x01
    2128:	a4 17       	cp	r26, r20
    212a:	b5 07       	cpc	r27, r21
    212c:	08 f4       	brcc	.+2      	; 0x2130 <qtm_key_sensors_process+0x59c>
    212e:	6e c0       	rjmp	.+220    	; 0x220c <qtm_key_sensors_process+0x678>
    2130:	89 3c       	cpi	r24, 0xC9	; 201
    2132:	91 05       	cpc	r25, r1
    2134:	28 f6       	brcc	.-118    	; 0x20c0 <qtm_key_sensors_process+0x52c>
    2136:	bb cf       	rjmp	.-138    	; 0x20ae <qtm_key_sensors_process+0x51a>
    2138:	08 81       	ld	r16, Y
    213a:	19 81       	ldd	r17, Y+1	; 0x01
    213c:	f8 01       	movw	r30, r16
    213e:	24 81       	ldd	r18, Z+4	; 0x04
    2140:	21 11       	cpse	r18, r1
    2142:	df cf       	rjmp	.-66     	; 0x2102 <qtm_key_sensors_process+0x56e>
    2144:	ed 90       	ld	r14, X+
    2146:	fc 90       	ld	r15, X
    2148:	60 e0       	ldi	r22, 0x00	; 0
    214a:	70 e0       	ldi	r23, 0x00	; 0
    214c:	40 e0       	ldi	r20, 0x00	; 0
    214e:	50 e0       	ldi	r21, 0x00	; 0
    2150:	4e 15       	cp	r20, r14
    2152:	5f 05       	cpc	r21, r15
    2154:	f1 f0       	breq	.+60     	; 0x2192 <qtm_key_sensors_process+0x5fe>
    2156:	ec 81       	ldd	r30, Y+4	; 0x04
    2158:	fd 81       	ldd	r31, Y+5	; 0x05
    215a:	e6 0f       	add	r30, r22
    215c:	f7 1f       	adc	r31, r23
    215e:	20 81       	ld	r18, Z
    2160:	23 30       	cpi	r18, 0x03	; 3
    2162:	11 f0       	breq	.+4      	; 0x2168 <qtm_key_sensors_process+0x5d4>
    2164:	28 30       	cpi	r18, 0x08	; 8
    2166:	81 f4       	brne	.+32     	; 0x2188 <qtm_key_sensors_process+0x5f4>
    2168:	24 81       	ldd	r18, Z+4	; 0x04
    216a:	35 81       	ldd	r19, Z+5	; 0x05
    216c:	c2 80       	ldd	r12, Z+2	; 0x02
    216e:	d3 80       	ldd	r13, Z+3	; 0x03
    2170:	d6 01       	movw	r26, r12
    2172:	11 96       	adiw	r26, 0x01	; 1
    2174:	cd 90       	ld	r12, X+
    2176:	dc 90       	ld	r13, X
    2178:	12 97       	sbiw	r26, 0x02	; 2
    217a:	2c 15       	cp	r18, r12
    217c:	3d 05       	cpc	r19, r13
    217e:	20 f4       	brcc	.+8      	; 0x2188 <qtm_key_sensors_process+0x5f4>
    2180:	2f 5f       	subi	r18, 0xFF	; 255
    2182:	3f 4f       	sbci	r19, 0xFF	; 255
    2184:	24 83       	std	Z+4, r18	; 0x04
    2186:	35 83       	std	Z+5, r19	; 0x05
    2188:	4f 5f       	subi	r20, 0xFF	; 255
    218a:	5f 4f       	sbci	r21, 0xFF	; 255
    218c:	6a 5f       	subi	r22, 0xFA	; 250
    218e:	7f 4f       	sbci	r23, 0xFF	; 255
    2190:	df cf       	rjmp	.-66     	; 0x2150 <qtm_key_sensors_process+0x5bc>
    2192:	f4 01       	movw	r30, r8
    2194:	26 81       	ldd	r18, Z+6	; 0x06
    2196:	d8 01       	movw	r26, r16
    2198:	14 96       	adiw	r26, 0x04	; 4
    219a:	2c 93       	st	X, r18
    219c:	b2 cf       	rjmp	.-156    	; 0x2102 <qtm_key_sensors_process+0x56e>
    219e:	08 81       	ld	r16, Y
    21a0:	19 81       	ldd	r17, Y+1	; 0x01
    21a2:	d8 01       	movw	r26, r16
    21a4:	15 96       	adiw	r26, 0x05	; 5
    21a6:	2c 91       	ld	r18, X
    21a8:	21 11       	cpse	r18, r1
    21aa:	b1 cf       	rjmp	.-158    	; 0x210e <qtm_key_sensors_process+0x57a>
    21ac:	e0 80       	ld	r14, Z
    21ae:	f1 80       	ldd	r15, Z+1	; 0x01
    21b0:	60 e0       	ldi	r22, 0x00	; 0
    21b2:	70 e0       	ldi	r23, 0x00	; 0
    21b4:	40 e0       	ldi	r20, 0x00	; 0
    21b6:	50 e0       	ldi	r21, 0x00	; 0
    21b8:	4e 15       	cp	r20, r14
    21ba:	5f 05       	cpc	r21, r15
    21bc:	f1 f0       	breq	.+60     	; 0x21fa <qtm_key_sensors_process+0x666>
    21be:	ec 81       	ldd	r30, Y+4	; 0x04
    21c0:	fd 81       	ldd	r31, Y+5	; 0x05
    21c2:	e6 0f       	add	r30, r22
    21c4:	f7 1f       	adc	r31, r23
    21c6:	20 81       	ld	r18, Z
    21c8:	23 30       	cpi	r18, 0x03	; 3
    21ca:	11 f0       	breq	.+4      	; 0x21d0 <qtm_key_sensors_process+0x63c>
    21cc:	28 30       	cpi	r18, 0x08	; 8
    21ce:	81 f4       	brne	.+32     	; 0x21f0 <qtm_key_sensors_process+0x65c>
    21d0:	24 81       	ldd	r18, Z+4	; 0x04
    21d2:	35 81       	ldd	r19, Z+5	; 0x05
    21d4:	c2 80       	ldd	r12, Z+2	; 0x02
    21d6:	d3 80       	ldd	r13, Z+3	; 0x03
    21d8:	d6 01       	movw	r26, r12
    21da:	11 96       	adiw	r26, 0x01	; 1
    21dc:	cd 90       	ld	r12, X+
    21de:	dc 90       	ld	r13, X
    21e0:	12 97       	sbiw	r26, 0x02	; 2
    21e2:	c2 16       	cp	r12, r18
    21e4:	d3 06       	cpc	r13, r19
    21e6:	20 f4       	brcc	.+8      	; 0x21f0 <qtm_key_sensors_process+0x65c>
    21e8:	21 50       	subi	r18, 0x01	; 1
    21ea:	31 09       	sbc	r19, r1
    21ec:	24 83       	std	Z+4, r18	; 0x04
    21ee:	35 83       	std	Z+5, r19	; 0x05
    21f0:	4f 5f       	subi	r20, 0xFF	; 255
    21f2:	5f 4f       	sbci	r21, 0xFF	; 255
    21f4:	6a 5f       	subi	r22, 0xFA	; 250
    21f6:	7f 4f       	sbci	r23, 0xFF	; 255
    21f8:	df cf       	rjmp	.-66     	; 0x21b8 <qtm_key_sensors_process+0x624>
    21fa:	f4 01       	movw	r30, r8
    21fc:	27 81       	ldd	r18, Z+7	; 0x07
    21fe:	d8 01       	movw	r26, r16
    2200:	15 96       	adiw	r26, 0x05	; 5
    2202:	2c 93       	st	X, r18
    2204:	84 cf       	rjmp	.-248    	; 0x210e <qtm_key_sensors_process+0x57a>
    2206:	21 50       	subi	r18, 0x01	; 1
    2208:	23 83       	std	Z+3, r18	; 0x03
    220a:	81 cf       	rjmp	.-254    	; 0x210e <qtm_key_sensors_process+0x57a>
    220c:	a9 01       	movw	r20, r18
    220e:	44 0f       	add	r20, r20
    2210:	55 1f       	adc	r21, r21
    2212:	ec 81       	ldd	r30, Y+4	; 0x04
    2214:	fd 81       	ldd	r31, Y+5	; 0x05
    2216:	e4 0f       	add	r30, r20
    2218:	f5 1f       	adc	r31, r21
    221a:	60 81       	ld	r22, Z
    221c:	65 38       	cpi	r22, 0x85	; 133
    221e:	09 f0       	breq	.+2      	; 0x2222 <qtm_key_sensors_process+0x68e>
    2220:	47 c0       	rjmp	.+142    	; 0x22b0 <qtm_key_sensors_process+0x71c>
    2222:	61 81       	ldd	r22, Z+1	; 0x01
    2224:	66 23       	and	r22, r22
    2226:	19 f0       	breq	.+6      	; 0x222e <qtm_key_sensors_process+0x69a>
    2228:	61 50       	subi	r22, 0x01	; 1
    222a:	61 83       	std	Z+1, r22	; 0x01
    222c:	41 c0       	rjmp	.+130    	; 0x22b0 <qtm_key_sensors_process+0x71c>
    222e:	a0 82       	st	Z, r10
    2230:	6c 81       	ldd	r22, Y+4	; 0x04
    2232:	7d 81       	ldd	r23, Y+5	; 0x05
    2234:	fb 01       	movw	r30, r22
    2236:	e4 0f       	add	r30, r20
    2238:	f5 1f       	adc	r31, r21
    223a:	02 80       	ldd	r0, Z+2	; 0x02
    223c:	f3 81       	ldd	r31, Z+3	; 0x03
    223e:	e0 2d       	mov	r30, r0
    2240:	b0 82       	st	Z, r11
    2242:	ee 81       	ldd	r30, Y+6	; 0x06
    2244:	ff 81       	ldd	r31, Y+7	; 0x07
    2246:	e2 0f       	add	r30, r18
    2248:	f3 1f       	adc	r31, r19
    224a:	d2 80       	ldd	r13, Z+2	; 0x02
    224c:	dd 20       	and	r13, r13
    224e:	81 f1       	breq	.+96     	; 0x22b0 <qtm_key_sensors_process+0x71c>
    2250:	40 e0       	ldi	r20, 0x00	; 0
    2252:	50 e0       	ldi	r21, 0x00	; 0
    2254:	00 e0       	ldi	r16, 0x00	; 0
    2256:	10 e0       	ldi	r17, 0x00	; 0
    2258:	ea 81       	ldd	r30, Y+2	; 0x02
    225a:	fb 81       	ldd	r31, Y+3	; 0x03
    225c:	60 81       	ld	r22, Z
    225e:	71 81       	ldd	r23, Z+1	; 0x01
    2260:	06 17       	cp	r16, r22
    2262:	17 07       	cpc	r17, r23
    2264:	28 f5       	brcc	.+74     	; 0x22b0 <qtm_key_sensors_process+0x71c>
    2266:	ee 81       	ldd	r30, Y+6	; 0x06
    2268:	ff 81       	ldd	r31, Y+7	; 0x07
    226a:	e4 0f       	add	r30, r20
    226c:	f5 1f       	adc	r31, r21
    226e:	62 81       	ldd	r22, Z+2	; 0x02
    2270:	d6 12       	cpse	r13, r22
    2272:	19 c0       	rjmp	.+50     	; 0x22a6 <qtm_key_sensors_process+0x712>
    2274:	ba 01       	movw	r22, r20
    2276:	66 0f       	add	r22, r22
    2278:	77 1f       	adc	r23, r23
    227a:	ec 81       	ldd	r30, Y+4	; 0x04
    227c:	fd 81       	ldd	r31, Y+5	; 0x05
    227e:	4f 01       	movw	r8, r30
    2280:	86 0e       	add	r8, r22
    2282:	97 1e       	adc	r9, r23
    2284:	f4 01       	movw	r30, r8
    2286:	e2 80       	ldd	r14, Z+2	; 0x02
    2288:	f3 80       	ldd	r15, Z+3	; 0x03
    228a:	f7 01       	movw	r30, r14
    228c:	f0 80       	ld	r15, Z
    228e:	f0 fe       	sbrs	r15, 0
    2290:	0a c0       	rjmp	.+20     	; 0x22a6 <qtm_key_sensors_process+0x712>
    2292:	f4 01       	movw	r30, r8
    2294:	a0 82       	st	Z, r10
    2296:	ec 81       	ldd	r30, Y+4	; 0x04
    2298:	fd 81       	ldd	r31, Y+5	; 0x05
    229a:	e6 0f       	add	r30, r22
    229c:	f7 1f       	adc	r31, r23
    229e:	02 80       	ldd	r0, Z+2	; 0x02
    22a0:	f3 81       	ldd	r31, Z+3	; 0x03
    22a2:	e0 2d       	mov	r30, r0
    22a4:	b0 82       	st	Z, r11
    22a6:	0f 5f       	subi	r16, 0xFF	; 255
    22a8:	1f 4f       	sbci	r17, 0xFF	; 255
    22aa:	4d 5f       	subi	r20, 0xFD	; 253
    22ac:	5f 4f       	sbci	r21, 0xFF	; 255
    22ae:	d4 cf       	rjmp	.-88     	; 0x2258 <qtm_key_sensors_process+0x6c4>
    22b0:	11 96       	adiw	r26, 0x01	; 1
    22b2:	2d 5f       	subi	r18, 0xFD	; 253
    22b4:	3f 4f       	sbci	r19, 0xFF	; 255
    22b6:	34 cf       	rjmp	.-408    	; 0x2120 <qtm_key_sensors_process+0x58c>
    22b8:	8b e0       	ldi	r24, 0x0B	; 11
    22ba:	df 91       	pop	r29
    22bc:	cf 91       	pop	r28
    22be:	1f 91       	pop	r17
    22c0:	0f 91       	pop	r16
    22c2:	ff 90       	pop	r15
    22c4:	ef 90       	pop	r14
    22c6:	df 90       	pop	r13
    22c8:	cf 90       	pop	r12
    22ca:	bf 90       	pop	r11
    22cc:	af 90       	pop	r10
    22ce:	9f 90       	pop	r9
    22d0:	8f 90       	pop	r8
    22d2:	7f 90       	pop	r7
    22d4:	6f 90       	pop	r6
    22d6:	5f 90       	pop	r5
    22d8:	4f 90       	pop	r4
    22da:	3f 90       	pop	r3
    22dc:	2f 90       	pop	r2
    22de:	08 95       	ret

000022e0 <getSwipeDirection>:
    22e0:	20 91 68 44 	lds	r18, 0x4468	; 0x804468 <touchDown>
    22e4:	30 91 69 44 	lds	r19, 0x4469	; 0x804469 <touchDown+0x1>
    22e8:	80 91 64 44 	lds	r24, 0x4464	; 0x804464 <touchStream>
    22ec:	90 91 65 44 	lds	r25, 0x4465	; 0x804465 <touchStream+0x1>
    22f0:	28 1b       	sub	r18, r24
    22f2:	39 0b       	sbc	r19, r25
    22f4:	80 91 6a 44 	lds	r24, 0x446A	; 0x80446a <touchDown+0x2>
    22f8:	90 91 6b 44 	lds	r25, 0x446B	; 0x80446b <touchDown+0x3>
    22fc:	40 91 66 44 	lds	r20, 0x4466	; 0x804466 <touchStream+0x2>
    2300:	50 91 67 44 	lds	r21, 0x4467	; 0x804467 <touchStream+0x3>
    2304:	84 1b       	sub	r24, r20
    2306:	95 0b       	sbc	r25, r21
    2308:	b9 01       	movw	r22, r18
    230a:	37 ff       	sbrs	r19, 7
    230c:	04 c0       	rjmp	.+8      	; 0x2316 <getSwipeDirection+0x36>
    230e:	66 27       	eor	r22, r22
    2310:	77 27       	eor	r23, r23
    2312:	62 1b       	sub	r22, r18
    2314:	73 0b       	sbc	r23, r19
    2316:	ac 01       	movw	r20, r24
    2318:	97 ff       	sbrs	r25, 7
    231a:	04 c0       	rjmp	.+8      	; 0x2324 <getSwipeDirection+0x44>
    231c:	44 27       	eor	r20, r20
    231e:	55 27       	eor	r21, r21
    2320:	48 1b       	sub	r20, r24
    2322:	59 0b       	sbc	r21, r25
    2324:	64 17       	cp	r22, r20
    2326:	75 07       	cpc	r23, r21
    2328:	2c f0       	brlt	.+10     	; 0x2334 <getSwipeDirection+0x54>
    232a:	12 16       	cp	r1, r18
    232c:	13 06       	cpc	r1, r19
    232e:	3c f0       	brlt	.+14     	; 0x233e <getSwipeDirection+0x5e>
    2330:	80 e0       	ldi	r24, 0x00	; 0
    2332:	08 95       	ret
    2334:	18 16       	cp	r1, r24
    2336:	19 06       	cpc	r1, r25
    2338:	24 f0       	brlt	.+8      	; 0x2342 <getSwipeDirection+0x62>
    233a:	83 e0       	ldi	r24, 0x03	; 3
    233c:	08 95       	ret
    233e:	82 e0       	ldi	r24, 0x02	; 2
    2340:	08 95       	ret
    2342:	81 e0       	ldi	r24, 0x01	; 1
    2344:	08 95       	ret

00002346 <appendEvent>:
    2346:	4f 92       	push	r4
    2348:	5f 92       	push	r5
    234a:	6f 92       	push	r6
    234c:	7f 92       	push	r7
    234e:	8f 92       	push	r8
    2350:	9f 92       	push	r9
    2352:	af 92       	push	r10
    2354:	bf 92       	push	r11
    2356:	cf 92       	push	r12
    2358:	df 92       	push	r13
    235a:	ef 92       	push	r14
    235c:	ff 92       	push	r15
    235e:	c8 2e       	mov	r12, r24
    2360:	d1 2c       	mov	r13, r1
    2362:	e1 2c       	mov	r14, r1
    2364:	f1 2c       	mov	r15, r1
    2366:	90 91 5e 44 	lds	r25, 0x445E	; 0x80445e <eventCounter>
    236a:	94 30       	cpi	r25, 0x04	; 4
    236c:	b8 f0       	brcs	.+46     	; 0x239c <appendEvent+0x56>
    236e:	91 50       	subi	r25, 0x01	; 1
    2370:	90 93 5e 44 	sts	0x445E, r25	; 0x80445e <eventCounter>
    2374:	40 91 5a 44 	lds	r20, 0x445A	; 0x80445a <eventQueue>
    2378:	50 91 5b 44 	lds	r21, 0x445B	; 0x80445b <eventQueue+0x1>
    237c:	60 91 5c 44 	lds	r22, 0x445C	; 0x80445c <eventQueue+0x2>
    2380:	70 91 5d 44 	lds	r23, 0x445D	; 0x80445d <eventQueue+0x3>
    2384:	45 2f       	mov	r20, r21
    2386:	56 2f       	mov	r21, r22
    2388:	67 2f       	mov	r22, r23
    238a:	77 27       	eor	r23, r23
    238c:	40 93 5a 44 	sts	0x445A, r20	; 0x80445a <eventQueue>
    2390:	50 93 5b 44 	sts	0x445B, r21	; 0x80445b <eventQueue+0x1>
    2394:	60 93 5c 44 	sts	0x445C, r22	; 0x80445c <eventQueue+0x2>
    2398:	70 93 5d 44 	sts	0x445D, r23	; 0x80445d <eventQueue+0x3>
    239c:	40 91 5e 44 	lds	r20, 0x445E	; 0x80445e <eventCounter>
    23a0:	94 2f       	mov	r25, r20
    23a2:	99 0f       	add	r25, r25
    23a4:	99 0f       	add	r25, r25
    23a6:	99 0f       	add	r25, r25
    23a8:	04 c0       	rjmp	.+8      	; 0x23b2 <appendEvent+0x6c>
    23aa:	cc 0c       	add	r12, r12
    23ac:	dd 1c       	adc	r13, r13
    23ae:	ee 1c       	adc	r14, r14
    23b0:	ff 1c       	adc	r15, r15
    23b2:	9a 95       	dec	r25
    23b4:	d2 f7       	brpl	.-12     	; 0x23aa <appendEvent+0x64>
    23b6:	80 90 5a 44 	lds	r8, 0x445A	; 0x80445a <eventQueue>
    23ba:	90 90 5b 44 	lds	r9, 0x445B	; 0x80445b <eventQueue+0x1>
    23be:	a0 90 5c 44 	lds	r10, 0x445C	; 0x80445c <eventQueue+0x2>
    23c2:	b0 90 5d 44 	lds	r11, 0x445D	; 0x80445d <eventQueue+0x3>
    23c6:	c8 28       	or	r12, r8
    23c8:	d9 28       	or	r13, r9
    23ca:	ea 28       	or	r14, r10
    23cc:	fb 28       	or	r15, r11
    23ce:	c0 92 5a 44 	sts	0x445A, r12	; 0x80445a <eventQueue>
    23d2:	d0 92 5b 44 	sts	0x445B, r13	; 0x80445b <eventQueue+0x1>
    23d6:	e0 92 5c 44 	sts	0x445C, r14	; 0x80445c <eventQueue+0x2>
    23da:	f0 92 5d 44 	sts	0x445D, r15	; 0x80445d <eventQueue+0x3>
    23de:	90 91 4d 44 	lds	r25, 0x444D	; 0x80444d <value>
    23e2:	90 3f       	cpi	r25, 0xF0	; 240
    23e4:	09 f4       	brne	.+2      	; 0x23e8 <appendEvent+0xa2>
    23e6:	40 c0       	rjmp	.+128    	; 0x2468 <appendEvent+0x122>
    23e8:	e7 e0       	ldi	r30, 0x07	; 7
    23ea:	f2 e4       	ldi	r31, 0x42	; 66
    23ec:	20 e0       	ldi	r18, 0x00	; 0
    23ee:	30 e0       	ldi	r19, 0x00	; 0
    23f0:	80 80       	ld	r8, Z
    23f2:	91 80       	ldd	r9, Z+1	; 0x01
    23f4:	a2 80       	ldd	r10, Z+2	; 0x02
    23f6:	b3 80       	ldd	r11, Z+3	; 0x03
    23f8:	8c 24       	eor	r8, r12
    23fa:	9d 24       	eor	r9, r13
    23fc:	ae 24       	eor	r10, r14
    23fe:	bf 24       	eor	r11, r15
    2400:	44 80       	ldd	r4, Z+4	; 0x04
    2402:	55 80       	ldd	r5, Z+5	; 0x05
    2404:	66 80       	ldd	r6, Z+6	; 0x06
    2406:	77 80       	ldd	r7, Z+7	; 0x07
    2408:	84 20       	and	r8, r4
    240a:	95 20       	and	r9, r5
    240c:	a6 20       	and	r10, r6
    240e:	b7 20       	and	r11, r7
    2410:	89 28       	or	r8, r9
    2412:	8a 28       	or	r8, r10
    2414:	8b 28       	or	r8, r11
    2416:	11 f5       	brne	.+68     	; 0x245c <appendEvent+0x116>
    2418:	5b e0       	ldi	r21, 0x0B	; 11
    241a:	52 9f       	mul	r21, r18
    241c:	f0 01       	movw	r30, r0
    241e:	53 9f       	mul	r21, r19
    2420:	f0 0d       	add	r31, r0
    2422:	11 24       	eor	r1, r1
    2424:	e9 5f       	subi	r30, 0xF9	; 249
    2426:	fd 4b       	sbci	r31, 0xBD	; 189
    2428:	90 85       	ldd	r25, Z+8	; 0x08
    242a:	af e4       	ldi	r26, 0x4F	; 79
    242c:	b4 e4       	ldi	r27, 0x44	; 68
    242e:	01 90       	ld	r0, Z+
    2430:	0d 92       	st	X+, r0
    2432:	5a 95       	dec	r21
    2434:	e1 f7       	brne	.-8      	; 0x242e <appendEvent+0xe8>
    2436:	90 39       	cpi	r25, 0x90	; 144
    2438:	31 f4       	brne	.+12     	; 0x2446 <appendEvent+0x100>
    243a:	90 91 5f 44 	lds	r25, 0x445F	; 0x80445f <tapCount>
    243e:	99 23       	and	r25, r25
    2440:	99 f0       	breq	.+38     	; 0x2468 <appendEvent+0x122>
    2442:	90 69       	ori	r25, 0x90	; 144
    2444:	08 c0       	rjmp	.+16     	; 0x2456 <appendEvent+0x110>
    2446:	9f 38       	cpi	r25, 0x8F	; 143
    2448:	31 f4       	brne	.+12     	; 0x2456 <appendEvent+0x110>
    244a:	90 91 5f 44 	lds	r25, 0x445F	; 0x80445f <tapCount>
    244e:	9f 5f       	subi	r25, 0xFF	; 255
    2450:	90 93 5f 44 	sts	0x445F, r25	; 0x80445f <tapCount>
    2454:	09 c0       	rjmp	.+18     	; 0x2468 <appendEvent+0x122>
    2456:	90 93 4d 44 	sts	0x444D, r25	; 0x80444d <value>
    245a:	06 c0       	rjmp	.+12     	; 0x2468 <appendEvent+0x122>
    245c:	2f 5f       	subi	r18, 0xFF	; 255
    245e:	3f 4f       	sbci	r19, 0xFF	; 255
    2460:	3b 96       	adiw	r30, 0x0b	; 11
    2462:	24 31       	cpi	r18, 0x14	; 20
    2464:	31 05       	cpc	r19, r1
    2466:	21 f6       	brne	.-120    	; 0x23f0 <appendEvent+0xaa>
    2468:	90 91 49 44 	lds	r25, 0x4449	; 0x804449 <dualFingerGesture>
    246c:	91 11       	cpse	r25, r1
    246e:	e7 c0       	rjmp	.+462    	; 0x263e <appendEvent+0x2f8>
    2470:	98 2f       	mov	r25, r24
    2472:	90 7f       	andi	r25, 0xF0	; 240
    2474:	90 35       	cpi	r25, 0x50	; 80
    2476:	09 f0       	breq	.+2      	; 0x247a <appendEvent+0x134>
    2478:	c6 c0       	rjmp	.+396    	; 0x2606 <appendEvent+0x2c0>
    247a:	58 2f       	mov	r21, r24
    247c:	53 70       	andi	r21, 0x03	; 3
    247e:	20 91 7d 41 	lds	r18, 0x417D	; 0x80417d <first_time.1959>
    2482:	90 91 3c 44 	lds	r25, 0x443C	; 0x80443c <wheelDir.1956>
    2486:	22 23       	and	r18, r18
    2488:	61 f0       	breq	.+24     	; 0x24a2 <appendEvent+0x15c>
    248a:	91 11       	cpse	r25, r1
    248c:	0a c0       	rjmp	.+20     	; 0x24a2 <appendEvent+0x15c>
    248e:	e0 91 c4 45 	lds	r30, 0x45C4	; 0x8045c4 <cfgRam>
    2492:	f0 91 c5 45 	lds	r31, 0x45C5	; 0x8045c5 <cfgRam+0x1>
    2496:	97 89       	ldd	r25, Z+23	; 0x17
    2498:	90 93 3b 44 	sts	0x443B, r25	; 0x80443b <quadrant_count.1953>
    249c:	10 92 7d 41 	sts	0x417D, r1	; 0x80417d <first_time.1959>
    24a0:	02 c0       	rjmp	.+4      	; 0x24a6 <appendEvent+0x160>
    24a2:	91 11       	cpse	r25, r1
    24a4:	3a c0       	rjmp	.+116    	; 0x251a <appendEvent+0x1d4>
    24a6:	e5 2f       	mov	r30, r21
    24a8:	f0 e0       	ldi	r31, 0x00	; 0
    24aa:	90 91 7c 41 	lds	r25, 0x417C	; 0x80417c <lastEventDir.1954>
    24ae:	29 2f       	mov	r18, r25
    24b0:	30 e0       	ldi	r19, 0x00	; 0
    24b2:	b9 01       	movw	r22, r18
    24b4:	6f 5f       	subi	r22, 0xFF	; 255
    24b6:	7f 4f       	sbci	r23, 0xFF	; 255
    24b8:	63 70       	andi	r22, 0x03	; 3
    24ba:	77 27       	eor	r23, r23
    24bc:	e6 17       	cp	r30, r22
    24be:	f7 07       	cpc	r31, r23
    24c0:	21 f4       	brne	.+8      	; 0x24ca <appendEvent+0x184>
    24c2:	90 91 3a 44 	lds	r25, 0x443A	; 0x80443a <wheelStart.1955>
    24c6:	9f 5f       	subi	r25, 0xFF	; 255
    24c8:	0a c0       	rjmp	.+20     	; 0x24de <appendEvent+0x198>
    24ca:	21 50       	subi	r18, 0x01	; 1
    24cc:	31 09       	sbc	r19, r1
    24ce:	23 70       	andi	r18, 0x03	; 3
    24d0:	33 27       	eor	r19, r19
    24d2:	e2 17       	cp	r30, r18
    24d4:	f3 07       	cpc	r31, r19
    24d6:	41 f4       	brne	.+16     	; 0x24e8 <appendEvent+0x1a2>
    24d8:	90 91 3a 44 	lds	r25, 0x443A	; 0x80443a <wheelStart.1955>
    24dc:	91 50       	subi	r25, 0x01	; 1
    24de:	90 93 3a 44 	sts	0x443A, r25	; 0x80443a <wheelStart.1955>
    24e2:	10 92 39 44 	sts	0x4439, r1	; 0x804439 <wheelCount.1957>
    24e6:	03 c0       	rjmp	.+6      	; 0x24ee <appendEvent+0x1a8>
    24e8:	59 13       	cpse	r21, r25
    24ea:	10 92 3a 44 	sts	0x443A, r1	; 0x80443a <wheelStart.1955>
    24ee:	60 91 3a 44 	lds	r22, 0x443A	; 0x80443a <wheelStart.1955>
    24f2:	20 91 3b 44 	lds	r18, 0x443B	; 0x80443b <quadrant_count.1953>
    24f6:	62 13       	cpse	r22, r18
    24f8:	02 c0       	rjmp	.+4      	; 0x24fe <appendEvent+0x1b8>
    24fa:	91 e0       	ldi	r25, 0x01	; 1
    24fc:	0c c0       	rjmp	.+24     	; 0x2516 <appendEvent+0x1d0>
    24fe:	06 2e       	mov	r0, r22
    2500:	00 0c       	add	r0, r0
    2502:	77 0b       	sbc	r23, r23
    2504:	33 27       	eor	r19, r19
    2506:	21 95       	neg	r18
    2508:	0c f4       	brge	.+2      	; 0x250c <appendEvent+0x1c6>
    250a:	30 95       	com	r19
    250c:	62 17       	cp	r22, r18
    250e:	73 07       	cpc	r23, r19
    2510:	09 f0       	breq	.+2      	; 0x2514 <appendEvent+0x1ce>
    2512:	76 c0       	rjmp	.+236    	; 0x2600 <appendEvent+0x2ba>
    2514:	9f ef       	ldi	r25, 0xFF	; 255
    2516:	90 93 3c 44 	sts	0x443C, r25	; 0x80443c <wheelDir.1956>
    251a:	60 91 3c 44 	lds	r22, 0x443C	; 0x80443c <wheelDir.1956>
    251e:	61 30       	cpi	r22, 0x01	; 1
    2520:	19 f0       	breq	.+6      	; 0x2528 <appendEvent+0x1e2>
    2522:	6f 3f       	cpi	r22, 0xFF	; 255
    2524:	09 f0       	breq	.+2      	; 0x2528 <appendEvent+0x1e2>
    2526:	6c c0       	rjmp	.+216    	; 0x2600 <appendEvent+0x2ba>
    2528:	2f ef       	ldi	r18, 0xFF	; 255
    252a:	3f ef       	ldi	r19, 0xFF	; 255
    252c:	20 93 c2 45 	sts	0x45C2, r18	; 0x8045c2 <timer>
    2530:	30 93 c3 45 	sts	0x45C3, r19	; 0x8045c3 <timer+0x1>
    2534:	90 91 7c 41 	lds	r25, 0x417C	; 0x80417c <lastEventDir.1954>
    2538:	e0 91 c4 45 	lds	r30, 0x45C4	; 0x8045c4 <cfgRam>
    253c:	f0 91 c5 45 	lds	r31, 0x45C5	; 0x8045c5 <cfgRam+0x1>
    2540:	59 17       	cp	r21, r25
    2542:	49 f0       	breq	.+18     	; 0x2556 <appendEvent+0x210>
    2544:	a5 2f       	mov	r26, r21
    2546:	b0 e0       	ldi	r27, 0x00	; 0
    2548:	26 2f       	mov	r18, r22
    254a:	29 0f       	add	r18, r25
    254c:	23 70       	andi	r18, 0x03	; 3
    254e:	30 e0       	ldi	r19, 0x00	; 0
    2550:	a2 17       	cp	r26, r18
    2552:	b3 07       	cpc	r27, r19
    2554:	c9 f4       	brne	.+50     	; 0x2588 <appendEvent+0x242>
    2556:	20 91 39 44 	lds	r18, 0x4439	; 0x804439 <wheelCount.1957>
    255a:	61 30       	cpi	r22, 0x01	; 1
    255c:	29 f4       	brne	.+10     	; 0x2568 <appendEvent+0x222>
    255e:	36 89       	ldd	r19, Z+22	; 0x16
    2560:	23 17       	cp	r18, r19
    2562:	ec f4       	brge	.+58     	; 0x259e <appendEvent+0x258>
    2564:	2f 5f       	subi	r18, 0xFF	; 255
    2566:	0d c0       	rjmp	.+26     	; 0x2582 <appendEvent+0x23c>
    2568:	66 89       	ldd	r22, Z+22	; 0x16
    256a:	77 27       	eor	r23, r23
    256c:	61 95       	neg	r22
    256e:	0c f4       	brge	.+2      	; 0x2572 <appendEvent+0x22c>
    2570:	70 95       	com	r23
    2572:	a2 2f       	mov	r26, r18
    2574:	02 2e       	mov	r0, r18
    2576:	00 0c       	add	r0, r0
    2578:	bb 0b       	sbc	r27, r27
    257a:	6a 17       	cp	r22, r26
    257c:	7b 07       	cpc	r23, r27
    257e:	7c f4       	brge	.+30     	; 0x259e <appendEvent+0x258>
    2580:	21 50       	subi	r18, 0x01	; 1
    2582:	20 93 39 44 	sts	0x4439, r18	; 0x804439 <wheelCount.1957>
    2586:	0b c0       	rjmp	.+22     	; 0x259e <appendEvent+0x258>
    2588:	10 92 3c 44 	sts	0x443C, r1	; 0x80443c <wheelDir.1956>
    258c:	10 92 3a 44 	sts	0x443A, r1	; 0x80443a <wheelStart.1955>
    2590:	20 8d       	ldd	r18, Z+24	; 0x18
    2592:	20 93 3b 44 	sts	0x443B, r18	; 0x80443b <quadrant_count.1953>
    2596:	10 92 c2 45 	sts	0x45C2, r1	; 0x8045c2 <timer>
    259a:	10 92 c3 45 	sts	0x45C3, r1	; 0x8045c3 <timer+0x1>
    259e:	26 89       	ldd	r18, Z+22	; 0x16
    25a0:	60 91 39 44 	lds	r22, 0x4439	; 0x804439 <wheelCount.1957>
    25a4:	26 13       	cpse	r18, r22
    25a6:	07 c0       	rjmp	.+14     	; 0x25b6 <appendEvent+0x270>
    25a8:	20 ef       	ldi	r18, 0xF0	; 240
    25aa:	20 93 4d 44 	sts	0x444D, r18	; 0x80444d <value>
    25ae:	20 91 38 44 	lds	r18, 0x4438	; 0x804438 <wheelOutputCounter.1958>
    25b2:	2f 5f       	subi	r18, 0xFF	; 255
    25b4:	10 c0       	rjmp	.+32     	; 0x25d6 <appendEvent+0x290>
    25b6:	06 2e       	mov	r0, r22
    25b8:	00 0c       	add	r0, r0
    25ba:	77 0b       	sbc	r23, r23
    25bc:	33 27       	eor	r19, r19
    25be:	21 95       	neg	r18
    25c0:	0c f4       	brge	.+2      	; 0x25c4 <appendEvent+0x27e>
    25c2:	30 95       	com	r19
    25c4:	62 17       	cp	r22, r18
    25c6:	73 07       	cpc	r23, r19
    25c8:	d9 f4       	brne	.+54     	; 0x2600 <appendEvent+0x2ba>
    25ca:	21 ef       	ldi	r18, 0xF1	; 241
    25cc:	20 93 4d 44 	sts	0x444D, r18	; 0x80444d <value>
    25d0:	20 91 38 44 	lds	r18, 0x4438	; 0x804438 <wheelOutputCounter.1958>
    25d4:	21 50       	subi	r18, 0x01	; 1
    25d6:	2f 70       	andi	r18, 0x0F	; 15
    25d8:	20 93 38 44 	sts	0x4438, r18	; 0x804438 <wheelOutputCounter.1958>
    25dc:	99 0f       	add	r25, r25
    25de:	99 0f       	add	r25, r25
    25e0:	91 60       	ori	r25, 0x01	; 1
    25e2:	22 95       	swap	r18
    25e4:	20 7f       	andi	r18, 0xF0	; 240
    25e6:	29 2b       	or	r18, r25
    25e8:	91 e0       	ldi	r25, 0x01	; 1
    25ea:	30 91 3c 44 	lds	r19, 0x443C	; 0x80443c <wheelDir.1956>
    25ee:	13 16       	cp	r1, r19
    25f0:	0c f0       	brlt	.+2      	; 0x25f4 <appendEvent+0x2ae>
    25f2:	90 e0       	ldi	r25, 0x00	; 0
    25f4:	99 0f       	add	r25, r25
    25f6:	29 2b       	or	r18, r25
    25f8:	20 93 4c 44 	sts	0x444C, r18	; 0x80444c <diag>
    25fc:	10 92 39 44 	sts	0x4439, r1	; 0x804439 <wheelCount.1957>
    2600:	50 93 7c 41 	sts	0x417C, r21	; 0x80417c <lastEventDir.1954>
    2604:	1c c0       	rjmp	.+56     	; 0x263e <appendEvent+0x2f8>
    2606:	28 2f       	mov	r18, r24
    2608:	2f 77       	andi	r18, 0x7F	; 127
    260a:	20 32       	cpi	r18, 0x20	; 32
    260c:	99 f4       	brne	.+38     	; 0x2634 <appendEvent+0x2ee>
    260e:	10 92 3c 44 	sts	0x443C, r1	; 0x80443c <wheelDir.1956>
    2612:	10 92 3a 44 	sts	0x443A, r1	; 0x80443a <wheelStart.1955>
    2616:	10 92 39 44 	sts	0x4439, r1	; 0x804439 <wheelCount.1957>
    261a:	90 91 4d 44 	lds	r25, 0x444D	; 0x80444d <value>
    261e:	9e 7f       	andi	r25, 0xFE	; 254
    2620:	90 3f       	cpi	r25, 0xF0	; 240
    2622:	11 f4       	brne	.+4      	; 0x2628 <appendEvent+0x2e2>
    2624:	10 92 4d 44 	sts	0x444D, r1	; 0x80444d <value>
    2628:	90 ef       	ldi	r25, 0xF0	; 240
    262a:	90 93 7c 41 	sts	0x417C, r25	; 0x80417c <lastEventDir.1954>
    262e:	10 92 38 44 	sts	0x4438, r1	; 0x804438 <wheelOutputCounter.1958>
    2632:	05 c0       	rjmp	.+10     	; 0x263e <appendEvent+0x2f8>
    2634:	90 31       	cpi	r25, 0x10	; 16
    2636:	19 f4       	brne	.+6      	; 0x263e <appendEvent+0x2f8>
    2638:	91 e0       	ldi	r25, 0x01	; 1
    263a:	90 93 7d 41 	sts	0x417D, r25	; 0x80417d <first_time.1959>
    263e:	4f 5f       	subi	r20, 0xFF	; 255
    2640:	40 93 5e 44 	sts	0x445E, r20	; 0x80445e <eventCounter>
    2644:	ff 90       	pop	r15
    2646:	ef 90       	pop	r14
    2648:	df 90       	pop	r13
    264a:	cf 90       	pop	r12
    264c:	bf 90       	pop	r11
    264e:	af 90       	pop	r10
    2650:	9f 90       	pop	r9
    2652:	8f 90       	pop	r8
    2654:	7f 90       	pop	r7
    2656:	6f 90       	pop	r6
    2658:	5f 90       	pop	r5
    265a:	4f 90       	pop	r4
    265c:	08 95       	ret

0000265e <Gestures_QueryStatus>:
    265e:	81 e0       	ldi	r24, 0x01	; 1
    2660:	90 91 4e 44 	lds	r25, 0x444E	; 0x80444e <status>
    2664:	91 11       	cpse	r25, r1
    2666:	01 c0       	rjmp	.+2      	; 0x266a <Gestures_QueryStatus+0xc>
    2668:	80 e0       	ldi	r24, 0x00	; 0
    266a:	08 95       	ret

0000266c <qtm_gestures_2d_clearGesture>:
    266c:	10 92 4e 44 	sts	0x444E, r1	; 0x80444e <status>
    2670:	10 92 4d 44 	sts	0x444D, r1	; 0x80444d <value>
    2674:	08 95       	ret

00002676 <qtm_init_gestures_2d>:
    2676:	10 92 5f 44 	sts	0x445F, r1	; 0x80445f <tapCount>
    267a:	10 92 5e 44 	sts	0x445E, r1	; 0x80445e <eventCounter>
    267e:	10 92 5a 44 	sts	0x445A, r1	; 0x80445a <eventQueue>
    2682:	10 92 5b 44 	sts	0x445B, r1	; 0x80445b <eventQueue+0x1>
    2686:	10 92 5c 44 	sts	0x445C, r1	; 0x80445c <eventQueue+0x2>
    268a:	10 92 5d 44 	sts	0x445D, r1	; 0x80445d <eventQueue+0x3>
    268e:	8f ef       	ldi	r24, 0xFF	; 255
    2690:	9f ef       	ldi	r25, 0xFF	; 255
    2692:	80 93 c2 45 	sts	0x45C2, r24	; 0x8045c2 <timer>
    2696:	90 93 c3 45 	sts	0x45C3, r25	; 0x8045c3 <timer+0x1>
    269a:	10 92 4a 44 	sts	0x444A, r1	; 0x80444a <timeouttrack>
    269e:	80 e0       	ldi	r24, 0x00	; 0
    26a0:	08 95       	ret

000026a2 <qtm_update_gesture_2d_timer>:
    26a2:	20 91 c2 45 	lds	r18, 0x45C2	; 0x8045c2 <timer>
    26a6:	30 91 c3 45 	lds	r19, 0x45C3	; 0x8045c3 <timer+0x1>
    26aa:	37 fd       	sbrc	r19, 7
    26ac:	06 c0       	rjmp	.+12     	; 0x26ba <qtm_update_gesture_2d_timer+0x18>
    26ae:	28 0f       	add	r18, r24
    26b0:	39 1f       	adc	r19, r25
    26b2:	20 93 c2 45 	sts	0x45C2, r18	; 0x8045c2 <timer>
    26b6:	30 93 c3 45 	sts	0x45C3, r19	; 0x8045c3 <timer+0x1>
    26ba:	08 95       	ret

000026bc <qtm_gestures_2d_process>:
    26bc:	af 92       	push	r10
    26be:	bf 92       	push	r11
    26c0:	cf 92       	push	r12
    26c2:	df 92       	push	r13
    26c4:	ef 92       	push	r14
    26c6:	ff 92       	push	r15
    26c8:	0f 93       	push	r16
    26ca:	1f 93       	push	r17
    26cc:	cf 93       	push	r28
    26ce:	df 93       	push	r29
    26d0:	ec 01       	movw	r28, r24
    26d2:	89 2b       	or	r24, r25
    26d4:	09 f4       	brne	.+2      	; 0x26d8 <qtm_gestures_2d_process+0x1c>
    26d6:	ec c2       	rjmp	.+1496   	; 0x2cb0 <qtm_gestures_2d_process+0x5f4>
    26d8:	ea 81       	ldd	r30, Y+2	; 0x02
    26da:	fb 81       	ldd	r31, Y+3	; 0x03
    26dc:	e0 93 c4 45 	sts	0x45C4, r30	; 0x8045c4 <cfgRam>
    26e0:	f0 93 c5 45 	sts	0x45C5, r31	; 0x8045c5 <cfgRam+0x1>
    26e4:	a4 81       	ldd	r26, Z+4	; 0x04
    26e6:	b5 81       	ldd	r27, Z+5	; 0x05
    26e8:	2c 91       	ld	r18, X
    26ea:	a2 85       	ldd	r26, Z+10	; 0x0a
    26ec:	b3 85       	ldd	r27, Z+11	; 0x0b
    26ee:	10 97       	sbiw	r26, 0x00	; 0
    26f0:	11 f0       	breq	.+4      	; 0x26f6 <qtm_gestures_2d_process+0x3a>
    26f2:	9c 91       	ld	r25, X
    26f4:	01 c0       	rjmp	.+2      	; 0x26f8 <qtm_gestures_2d_process+0x3c>
    26f6:	90 e0       	ldi	r25, 0x00	; 0
    26f8:	21 70       	andi	r18, 0x01	; 1
    26fa:	91 70       	andi	r25, 0x01	; 1
    26fc:	39 2f       	mov	r19, r25
    26fe:	33 0f       	add	r19, r19
    2700:	32 2b       	or	r19, r18
    2702:	80 91 40 44 	lds	r24, 0x4440	; 0x804440 <last_contact_status.1901>
    2706:	28 13       	cpse	r18, r24
    2708:	04 c0       	rjmp	.+8      	; 0x2712 <qtm_gestures_2d_process+0x56>
    270a:	22 23       	and	r18, r18
    270c:	31 f0       	breq	.+12     	; 0x271a <qtm_gestures_2d_process+0x5e>
    270e:	a3 e0       	ldi	r26, 0x03	; 3
    2710:	07 c0       	rjmp	.+14     	; 0x2720 <qtm_gestures_2d_process+0x64>
    2712:	22 23       	and	r18, r18
    2714:	21 f0       	breq	.+8      	; 0x271e <qtm_gestures_2d_process+0x62>
    2716:	a1 e0       	ldi	r26, 0x01	; 1
    2718:	03 c0       	rjmp	.+6      	; 0x2720 <qtm_gestures_2d_process+0x64>
    271a:	a0 e0       	ldi	r26, 0x00	; 0
    271c:	01 c0       	rjmp	.+2      	; 0x2720 <qtm_gestures_2d_process+0x64>
    271e:	a2 e0       	ldi	r26, 0x02	; 2
    2720:	20 93 40 44 	sts	0x4440, r18	; 0x804440 <last_contact_status.1901>
    2724:	80 91 41 44 	lds	r24, 0x4441	; 0x804441 <last_contact_status.1901+0x1>
    2728:	98 13       	cpse	r25, r24
    272a:	04 c0       	rjmp	.+8      	; 0x2734 <qtm_gestures_2d_process+0x78>
    272c:	99 23       	and	r25, r25
    272e:	31 f0       	breq	.+12     	; 0x273c <qtm_gestures_2d_process+0x80>
    2730:	83 e0       	ldi	r24, 0x03	; 3
    2732:	07 c0       	rjmp	.+14     	; 0x2742 <qtm_gestures_2d_process+0x86>
    2734:	99 23       	and	r25, r25
    2736:	21 f0       	breq	.+8      	; 0x2740 <qtm_gestures_2d_process+0x84>
    2738:	81 e0       	ldi	r24, 0x01	; 1
    273a:	03 c0       	rjmp	.+6      	; 0x2742 <qtm_gestures_2d_process+0x86>
    273c:	80 e0       	ldi	r24, 0x00	; 0
    273e:	01 c0       	rjmp	.+2      	; 0x2742 <qtm_gestures_2d_process+0x86>
    2740:	82 e0       	ldi	r24, 0x02	; 2
    2742:	90 93 41 44 	sts	0x4441, r25	; 0x804441 <last_contact_status.1901+0x1>
    2746:	24 e0       	ldi	r18, 0x04	; 4
    2748:	a2 9f       	mul	r26, r18
    274a:	d0 01       	movw	r26, r0
    274c:	11 24       	eor	r1, r1
    274e:	ad 51       	subi	r26, 0x1D	; 29
    2750:	bd 4b       	sbci	r27, 0xBD	; 189
    2752:	a8 0f       	add	r26, r24
    2754:	b1 1d       	adc	r27, r1
    2756:	8c 91       	ld	r24, X
    2758:	33 30       	cpi	r19, 0x03	; 3
    275a:	51 f4       	brne	.+20     	; 0x2770 <qtm_gestures_2d_process+0xb4>
    275c:	90 91 49 44 	lds	r25, 0x4449	; 0x804449 <dualFingerGesture>
    2760:	91 11       	cpse	r25, r1
    2762:	15 c0       	rjmp	.+42     	; 0x278e <qtm_gestures_2d_process+0xd2>
    2764:	91 e0       	ldi	r25, 0x01	; 1
    2766:	90 93 49 44 	sts	0x4449, r25	; 0x804449 <dualFingerGesture>
    276a:	90 93 4b 44 	sts	0x444B, r25	; 0x80444b <distanceTrackingStatus>
    276e:	0b c0       	rjmp	.+22     	; 0x2786 <qtm_gestures_2d_process+0xca>
    2770:	10 92 4b 44 	sts	0x444B, r1	; 0x80444b <distanceTrackingStatus>
    2774:	40 91 c2 45 	lds	r20, 0x45C2	; 0x8045c2 <timer>
    2778:	50 91 c3 45 	lds	r21, 0x45C3	; 0x8045c3 <timer+0x1>
    277c:	4f 3f       	cpi	r20, 0xFF	; 255
    277e:	5f 4f       	sbci	r21, 0xFF	; 255
    2780:	11 f4       	brne	.+4      	; 0x2786 <qtm_gestures_2d_process+0xca>
    2782:	10 92 49 44 	sts	0x4449, r1	; 0x804449 <dualFingerGesture>
    2786:	90 91 49 44 	lds	r25, 0x4449	; 0x804449 <dualFingerGesture>
    278a:	99 23       	and	r25, r25
    278c:	19 f1       	breq	.+70     	; 0x27d4 <qtm_gestures_2d_process+0x118>
    278e:	a0 81       	ld	r26, Z
    2790:	b1 81       	ldd	r27, Z+1	; 0x01
    2792:	2d 91       	ld	r18, X+
    2794:	3c 91       	ld	r19, X
    2796:	a9 01       	movw	r20, r18
    2798:	56 95       	lsr	r21
    279a:	47 95       	ror	r20
    279c:	a6 81       	ldd	r26, Z+6	; 0x06
    279e:	b7 81       	ldd	r27, Z+7	; 0x07
    27a0:	2d 91       	ld	r18, X+
    27a2:	3c 91       	ld	r19, X
    27a4:	36 95       	lsr	r19
    27a6:	27 95       	ror	r18
    27a8:	24 0f       	add	r18, r20
    27aa:	35 1f       	adc	r19, r21
    27ac:	20 93 47 44 	sts	0x4447, r18	; 0x804447 <x_position.1918>
    27b0:	30 93 48 44 	sts	0x4448, r19	; 0x804448 <x_position.1918+0x1>
    27b4:	a2 81       	ldd	r26, Z+2	; 0x02
    27b6:	b3 81       	ldd	r27, Z+3	; 0x03
    27b8:	2d 91       	ld	r18, X+
    27ba:	3c 91       	ld	r19, X
    27bc:	a9 01       	movw	r20, r18
    27be:	56 95       	lsr	r21
    27c0:	47 95       	ror	r20
    27c2:	a0 85       	ldd	r26, Z+8	; 0x08
    27c4:	b1 85       	ldd	r27, Z+9	; 0x09
    27c6:	2d 91       	ld	r18, X+
    27c8:	3c 91       	ld	r19, X
    27ca:	36 95       	lsr	r19
    27cc:	27 95       	ror	r18
    27ce:	24 0f       	add	r18, r20
    27d0:	35 1f       	adc	r19, r21
    27d2:	1b c0       	rjmp	.+54     	; 0x280a <qtm_gestures_2d_process+0x14e>
    27d4:	31 30       	cpi	r19, 0x01	; 1
    27d6:	59 f4       	brne	.+22     	; 0x27ee <qtm_gestures_2d_process+0x132>
    27d8:	a0 81       	ld	r26, Z
    27da:	b1 81       	ldd	r27, Z+1	; 0x01
    27dc:	2d 91       	ld	r18, X+
    27de:	3c 91       	ld	r19, X
    27e0:	20 93 47 44 	sts	0x4447, r18	; 0x804447 <x_position.1918>
    27e4:	30 93 48 44 	sts	0x4448, r19	; 0x804448 <x_position.1918+0x1>
    27e8:	a2 81       	ldd	r26, Z+2	; 0x02
    27ea:	b3 81       	ldd	r27, Z+3	; 0x03
    27ec:	0c c0       	rjmp	.+24     	; 0x2806 <qtm_gestures_2d_process+0x14a>
    27ee:	32 30       	cpi	r19, 0x02	; 2
    27f0:	81 f4       	brne	.+32     	; 0x2812 <qtm_gestures_2d_process+0x156>
    27f2:	a6 81       	ldd	r26, Z+6	; 0x06
    27f4:	b7 81       	ldd	r27, Z+7	; 0x07
    27f6:	2d 91       	ld	r18, X+
    27f8:	3c 91       	ld	r19, X
    27fa:	20 93 47 44 	sts	0x4447, r18	; 0x804447 <x_position.1918>
    27fe:	30 93 48 44 	sts	0x4448, r19	; 0x804448 <x_position.1918+0x1>
    2802:	a0 85       	ldd	r26, Z+8	; 0x08
    2804:	b1 85       	ldd	r27, Z+9	; 0x09
    2806:	2d 91       	ld	r18, X+
    2808:	3c 91       	ld	r19, X
    280a:	20 93 45 44 	sts	0x4445, r18	; 0x804445 <y_position.1919>
    280e:	30 93 46 44 	sts	0x4446, r19	; 0x804446 <y_position.1919+0x1>
    2812:	81 30       	cpi	r24, 0x01	; 1
    2814:	49 f0       	breq	.+18     	; 0x2828 <qtm_gestures_2d_process+0x16c>
    2816:	08 f4       	brcc	.+2      	; 0x281a <qtm_gestures_2d_process+0x15e>
    2818:	ed c1       	rjmp	.+986    	; 0x2bf4 <qtm_gestures_2d_process+0x538>
    281a:	82 30       	cpi	r24, 0x02	; 2
    281c:	09 f4       	brne	.+2      	; 0x2820 <qtm_gestures_2d_process+0x164>
    281e:	79 c0       	rjmp	.+242    	; 0x2912 <qtm_gestures_2d_process+0x256>
    2820:	83 30       	cpi	r24, 0x03	; 3
    2822:	09 f4       	brne	.+2      	; 0x2826 <qtm_gestures_2d_process+0x16a>
    2824:	a1 c0       	rjmp	.+322    	; 0x2968 <qtm_gestures_2d_process+0x2ac>
    2826:	fc c1       	rjmp	.+1016   	; 0x2c20 <qtm_gestures_2d_process+0x564>
    2828:	10 92 5e 44 	sts	0x445E, r1	; 0x80445e <eventCounter>
    282c:	10 92 5a 44 	sts	0x445A, r1	; 0x80445a <eventQueue>
    2830:	10 92 5b 44 	sts	0x445B, r1	; 0x80445b <eventQueue+0x1>
    2834:	10 92 5c 44 	sts	0x445C, r1	; 0x80445c <eventQueue+0x2>
    2838:	10 92 5d 44 	sts	0x445D, r1	; 0x80445d <eventQueue+0x3>
    283c:	10 92 43 44 	sts	0x4443, r1	; 0x804443 <swipeCounter.1916>
    2840:	8b e0       	ldi	r24, 0x0B	; 11
    2842:	2f e4       	ldi	r18, 0x4F	; 79
    2844:	34 e4       	ldi	r19, 0x44	; 68
    2846:	d9 01       	movw	r26, r18
    2848:	1d 92       	st	X+, r1
    284a:	8a 95       	dec	r24
    284c:	e9 f7       	brne	.-6      	; 0x2848 <qtm_gestures_2d_process+0x18c>
    284e:	10 92 42 44 	sts	0x4442, r1	; 0x804442 <tapThreshExceeded.1917>
    2852:	10 92 4d 44 	sts	0x444D, r1	; 0x80444d <value>
    2856:	10 92 4c 44 	sts	0x444C, r1	; 0x80444c <diag>
    285a:	e0 90 47 44 	lds	r14, 0x4447	; 0x804447 <x_position.1918>
    285e:	f0 90 48 44 	lds	r15, 0x4448	; 0x804448 <x_position.1918+0x1>
    2862:	e0 92 68 44 	sts	0x4468, r14	; 0x804468 <touchDown>
    2866:	f0 92 69 44 	sts	0x4469, r15	; 0x804469 <touchDown+0x1>
    286a:	00 91 45 44 	lds	r16, 0x4445	; 0x804445 <y_position.1919>
    286e:	10 91 46 44 	lds	r17, 0x4446	; 0x804446 <y_position.1919+0x1>
    2872:	00 93 6a 44 	sts	0x446A, r16	; 0x80446a <touchDown+0x2>
    2876:	10 93 6b 44 	sts	0x446B, r17	; 0x80446b <touchDown+0x3>
    287a:	25 89       	ldd	r18, Z+21	; 0x15
    287c:	30 e0       	ldi	r19, 0x00	; 0
    287e:	e2 16       	cp	r14, r18
    2880:	f3 06       	cpc	r15, r19
    2882:	10 f4       	brcc	.+4      	; 0x2888 <qtm_gestures_2d_process+0x1cc>
    2884:	82 e1       	ldi	r24, 0x12	; 18
    2886:	01 c0       	rjmp	.+2      	; 0x288a <qtm_gestures_2d_process+0x1ce>
    2888:	80 e1       	ldi	r24, 0x10	; 16
    288a:	40 e0       	ldi	r20, 0x00	; 0
    288c:	51 e0       	ldi	r21, 0x01	; 1
    288e:	42 1b       	sub	r20, r18
    2890:	53 0b       	sbc	r21, r19
    2892:	4e 15       	cp	r20, r14
    2894:	5f 05       	cpc	r21, r15
    2896:	08 f4       	brcc	.+2      	; 0x289a <qtm_gestures_2d_process+0x1de>
    2898:	81 60       	ori	r24, 0x01	; 1
    289a:	02 17       	cp	r16, r18
    289c:	13 07       	cpc	r17, r19
    289e:	08 f4       	brcc	.+2      	; 0x28a2 <qtm_gestures_2d_process+0x1e6>
    28a0:	88 60       	ori	r24, 0x08	; 8
    28a2:	40 17       	cp	r20, r16
    28a4:	51 07       	cpc	r21, r17
    28a6:	08 f4       	brcc	.+2      	; 0x28aa <qtm_gestures_2d_process+0x1ee>
    28a8:	84 60       	ori	r24, 0x04	; 4
    28aa:	0e 94 a3 11 	call	0x2346	; 0x2346 <appendEvent>
    28ae:	80 93 44 44 	sts	0x4444, r24	; 0x804444 <lastEvent.1915>
    28b2:	80 91 5f 44 	lds	r24, 0x445F	; 0x80445f <tapCount>
    28b6:	88 23       	and	r24, r24
    28b8:	09 f4       	brne	.+2      	; 0x28bc <qtm_gestures_2d_process+0x200>
    28ba:	51 c0       	rjmp	.+162    	; 0x295e <qtm_gestures_2d_process+0x2a2>
    28bc:	80 91 60 44 	lds	r24, 0x4460	; 0x804460 <touchUp>
    28c0:	90 91 61 44 	lds	r25, 0x4461	; 0x804461 <touchUp+0x1>
    28c4:	e8 16       	cp	r14, r24
    28c6:	f9 06       	cpc	r15, r25
    28c8:	20 f0       	brcs	.+8      	; 0x28d2 <qtm_gestures_2d_process+0x216>
    28ca:	97 01       	movw	r18, r14
    28cc:	28 1b       	sub	r18, r24
    28ce:	39 0b       	sbc	r19, r25
    28d0:	03 c0       	rjmp	.+6      	; 0x28d8 <qtm_gestures_2d_process+0x21c>
    28d2:	9c 01       	movw	r18, r24
    28d4:	2e 19       	sub	r18, r14
    28d6:	3f 09       	sbc	r19, r15
    28d8:	80 91 62 44 	lds	r24, 0x4462	; 0x804462 <touchUp+0x2>
    28dc:	90 91 63 44 	lds	r25, 0x4463	; 0x804463 <touchUp+0x3>
    28e0:	08 17       	cp	r16, r24
    28e2:	19 07       	cpc	r17, r25
    28e4:	28 f0       	brcs	.+10     	; 0x28f0 <qtm_gestures_2d_process+0x234>
    28e6:	f8 01       	movw	r30, r16
    28e8:	e8 1b       	sub	r30, r24
    28ea:	f9 0b       	sbc	r31, r25
    28ec:	cf 01       	movw	r24, r30
    28ee:	02 c0       	rjmp	.+4      	; 0x28f4 <qtm_gestures_2d_process+0x238>
    28f0:	80 1b       	sub	r24, r16
    28f2:	91 0b       	sbc	r25, r17
    28f4:	e0 91 c4 45 	lds	r30, 0x45C4	; 0x8045c4 <cfgRam>
    28f8:	f0 91 c5 45 	lds	r31, 0x45C5	; 0x8045c5 <cfgRam+0x1>
    28fc:	44 89       	ldd	r20, Z+20	; 0x14
    28fe:	50 e0       	ldi	r21, 0x00	; 0
    2900:	42 17       	cp	r20, r18
    2902:	53 07       	cpc	r21, r19
    2904:	18 f0       	brcs	.+6      	; 0x290c <qtm_gestures_2d_process+0x250>
    2906:	48 17       	cp	r20, r24
    2908:	59 07       	cpc	r21, r25
    290a:	48 f5       	brcc	.+82     	; 0x295e <qtm_gestures_2d_process+0x2a2>
    290c:	10 92 5f 44 	sts	0x445F, r1	; 0x80445f <tapCount>
    2910:	26 c0       	rjmp	.+76     	; 0x295e <qtm_gestures_2d_process+0x2a2>
    2912:	80 91 47 44 	lds	r24, 0x4447	; 0x804447 <x_position.1918>
    2916:	90 91 48 44 	lds	r25, 0x4448	; 0x804448 <x_position.1918+0x1>
    291a:	80 93 60 44 	sts	0x4460, r24	; 0x804460 <touchUp>
    291e:	90 93 61 44 	sts	0x4461, r25	; 0x804461 <touchUp+0x1>
    2922:	80 91 45 44 	lds	r24, 0x4445	; 0x804445 <y_position.1919>
    2926:	90 91 46 44 	lds	r25, 0x4446	; 0x804446 <y_position.1919+0x1>
    292a:	80 93 62 44 	sts	0x4462, r24	; 0x804462 <touchUp+0x2>
    292e:	90 93 63 44 	sts	0x4463, r25	; 0x804463 <touchUp+0x3>
    2932:	10 92 4a 44 	sts	0x444A, r1	; 0x80444a <timeouttrack>
    2936:	80 91 58 44 	lds	r24, 0x4458	; 0x804458 <currentGesture+0x9>
    293a:	88 23       	and	r24, r24
    293c:	21 f0       	breq	.+8      	; 0x2946 <qtm_gestures_2d_process+0x28a>
    293e:	88 ea       	ldi	r24, 0xA8	; 168
    2940:	80 93 4d 44 	sts	0x444D, r24	; 0x80444d <value>
    2944:	05 c0       	rjmp	.+10     	; 0x2950 <qtm_gestures_2d_process+0x294>
    2946:	80 e2       	ldi	r24, 0x20	; 32
    2948:	0e 94 a3 11 	call	0x2346	; 0x2346 <appendEvent>
    294c:	80 93 44 44 	sts	0x4444, r24	; 0x804444 <lastEvent.1915>
    2950:	8b e0       	ldi	r24, 0x0B	; 11
    2952:	ef e4       	ldi	r30, 0x4F	; 79
    2954:	f4 e4       	ldi	r31, 0x44	; 68
    2956:	df 01       	movw	r26, r30
    2958:	1d 92       	st	X+, r1
    295a:	8a 95       	dec	r24
    295c:	e9 f7       	brne	.-6      	; 0x2958 <qtm_gestures_2d_process+0x29c>
    295e:	10 92 c2 45 	sts	0x45C2, r1	; 0x8045c2 <timer>
    2962:	10 92 c3 45 	sts	0x45C3, r1	; 0x8045c3 <timer+0x1>
    2966:	5c c1       	rjmp	.+696    	; 0x2c20 <qtm_gestures_2d_process+0x564>
    2968:	99 23       	and	r25, r25
    296a:	09 f4       	brne	.+2      	; 0x296e <qtm_gestures_2d_process+0x2b2>
    296c:	66 c0       	rjmp	.+204    	; 0x2a3a <qtm_gestures_2d_process+0x37e>
    296e:	a2 81       	ldd	r26, Z+2	; 0x02
    2970:	b3 81       	ldd	r27, Z+3	; 0x03
    2972:	2d 91       	ld	r18, X+
    2974:	3c 91       	ld	r19, X
    2976:	a0 85       	ldd	r26, Z+8	; 0x08
    2978:	b1 85       	ldd	r27, Z+9	; 0x09
    297a:	8d 91       	ld	r24, X+
    297c:	9c 91       	ld	r25, X
    297e:	28 17       	cp	r18, r24
    2980:	39 07       	cpc	r19, r25
    2982:	28 f0       	brcs	.+10     	; 0x298e <qtm_gestures_2d_process+0x2d2>
    2984:	a9 01       	movw	r20, r18
    2986:	48 1b       	sub	r20, r24
    2988:	59 0b       	sbc	r21, r25
    298a:	ca 01       	movw	r24, r20
    298c:	02 c0       	rjmp	.+4      	; 0x2992 <qtm_gestures_2d_process+0x2d6>
    298e:	82 1b       	sub	r24, r18
    2990:	93 0b       	sbc	r25, r19
    2992:	a0 81       	ld	r26, Z
    2994:	b1 81       	ldd	r27, Z+1	; 0x01
    2996:	2d 91       	ld	r18, X+
    2998:	3c 91       	ld	r19, X
    299a:	a6 81       	ldd	r26, Z+6	; 0x06
    299c:	b7 81       	ldd	r27, Z+7	; 0x07
    299e:	4d 91       	ld	r20, X+
    29a0:	5c 91       	ld	r21, X
    29a2:	24 17       	cp	r18, r20
    29a4:	35 07       	cpc	r19, r21
    29a6:	18 f0       	brcs	.+6      	; 0x29ae <qtm_gestures_2d_process+0x2f2>
    29a8:	24 1b       	sub	r18, r20
    29aa:	35 0b       	sbc	r19, r21
    29ac:	04 c0       	rjmp	.+8      	; 0x29b6 <qtm_gestures_2d_process+0x2fa>
    29ae:	ba 01       	movw	r22, r20
    29b0:	62 1b       	sub	r22, r18
    29b2:	73 0b       	sbc	r23, r19
    29b4:	9b 01       	movw	r18, r22
    29b6:	40 91 4b 44 	lds	r20, 0x444B	; 0x80444b <distanceTrackingStatus>
    29ba:	42 30       	cpi	r20, 0x02	; 2
    29bc:	60 f4       	brcc	.+24     	; 0x29d6 <qtm_gestures_2d_process+0x31a>
    29be:	10 92 3f 44 	sts	0x443F, r1	; 0x80443f <increment.1908>
    29c2:	28 0f       	add	r18, r24
    29c4:	39 1f       	adc	r19, r25
    29c6:	20 93 3d 44 	sts	0x443D, r18	; 0x80443d <previousFingerDistance.1907>
    29ca:	30 93 3e 44 	sts	0x443E, r19	; 0x80443e <previousFingerDistance.1907+0x1>
    29ce:	82 e0       	ldi	r24, 0x02	; 2
    29d0:	80 93 4b 44 	sts	0x444B, r24	; 0x80444b <distanceTrackingStatus>
    29d4:	29 c0       	rjmp	.+82     	; 0x2a28 <qtm_gestures_2d_process+0x36c>
    29d6:	42 30       	cpi	r20, 0x02	; 2
    29d8:	39 f5       	brne	.+78     	; 0x2a28 <qtm_gestures_2d_process+0x36c>
    29da:	28 0f       	add	r18, r24
    29dc:	39 1f       	adc	r19, r25
    29de:	81 8d       	ldd	r24, Z+25	; 0x19
    29e0:	90 e0       	ldi	r25, 0x00	; 0
    29e2:	40 91 3d 44 	lds	r20, 0x443D	; 0x80443d <previousFingerDistance.1907>
    29e6:	50 91 3e 44 	lds	r21, 0x443E	; 0x80443e <previousFingerDistance.1907+0x1>
    29ea:	bc 01       	movw	r22, r24
    29ec:	64 0f       	add	r22, r20
    29ee:	75 1f       	adc	r23, r21
    29f0:	62 17       	cp	r22, r18
    29f2:	73 07       	cpc	r23, r19
    29f4:	38 f0       	brcs	.+14     	; 0x2a04 <qtm_gestures_2d_process+0x348>
    29f6:	82 0f       	add	r24, r18
    29f8:	93 1f       	adc	r25, r19
    29fa:	84 17       	cp	r24, r20
    29fc:	95 07       	cpc	r25, r21
    29fe:	08 f4       	brcc	.+2      	; 0x2a02 <qtm_gestures_2d_process+0x346>
    2a00:	59 c1       	rjmp	.+690    	; 0x2cb4 <qtm_gestures_2d_process+0x5f8>
    2a02:	12 c0       	rjmp	.+36     	; 0x2a28 <qtm_gestures_2d_process+0x36c>
    2a04:	91 e0       	ldi	r25, 0x01	; 1
    2a06:	80 91 3f 44 	lds	r24, 0x443F	; 0x80443f <increment.1908>
    2a0a:	89 0f       	add	r24, r25
    2a0c:	80 93 3f 44 	sts	0x443F, r24	; 0x80443f <increment.1908>
    2a10:	20 93 3d 44 	sts	0x443D, r18	; 0x80443d <previousFingerDistance.1907>
    2a14:	30 93 3e 44 	sts	0x443E, r19	; 0x80443e <previousFingerDistance.1907+0x1>
    2a18:	91 30       	cpi	r25, 0x01	; 1
    2a1a:	09 f0       	breq	.+2      	; 0x2a1e <qtm_gestures_2d_process+0x362>
    2a1c:	4d c1       	rjmp	.+666    	; 0x2cb8 <qtm_gestures_2d_process+0x5fc>
    2a1e:	91 ec       	ldi	r25, 0xC1	; 193
    2a20:	90 93 4d 44 	sts	0x444D, r25	; 0x80444d <value>
    2a24:	80 93 4c 44 	sts	0x444C, r24	; 0x80444c <diag>
    2a28:	80 91 4d 44 	lds	r24, 0x444D	; 0x80444d <value>
    2a2c:	88 23       	and	r24, r24
    2a2e:	29 f0       	breq	.+10     	; 0x2a3a <qtm_gestures_2d_process+0x37e>
    2a30:	80 ec       	ldi	r24, 0xC0	; 192
    2a32:	0e 94 a3 11 	call	0x2346	; 0x2346 <appendEvent>
    2a36:	80 93 44 44 	sts	0x4444, r24	; 0x804444 <lastEvent.1915>
    2a3a:	e0 91 c4 45 	lds	r30, 0x45C4	; 0x8045c4 <cfgRam>
    2a3e:	f0 91 c5 45 	lds	r31, 0x45C5	; 0x8045c5 <cfgRam+0x1>
    2a42:	20 91 c2 45 	lds	r18, 0x45C2	; 0x8045c2 <timer>
    2a46:	30 91 c3 45 	lds	r19, 0x45C3	; 0x8045c3 <timer+0x1>
    2a4a:	85 85       	ldd	r24, Z+13	; 0x0d
    2a4c:	90 e0       	ldi	r25, 0x00	; 0
    2a4e:	28 17       	cp	r18, r24
    2a50:	39 07       	cpc	r19, r25
    2a52:	7c f0       	brlt	.+30     	; 0x2a72 <qtm_gestures_2d_process+0x3b6>
    2a54:	80 91 42 44 	lds	r24, 0x4442	; 0x804442 <tapThreshExceeded.1917>
    2a58:	81 11       	cpse	r24, r1
    2a5a:	0b c0       	rjmp	.+22     	; 0x2a72 <qtm_gestures_2d_process+0x3b6>
    2a5c:	10 91 4a 44 	lds	r17, 0x444A	; 0x80444a <timeouttrack>
    2a60:	10 fd       	sbrc	r17, 0
    2a62:	07 c0       	rjmp	.+14     	; 0x2a72 <qtm_gestures_2d_process+0x3b6>
    2a64:	80 e8       	ldi	r24, 0x80	; 128
    2a66:	0e 94 a3 11 	call	0x2346	; 0x2346 <appendEvent>
    2a6a:	80 93 44 44 	sts	0x4444, r24	; 0x804444 <lastEvent.1915>
    2a6e:	11 60       	ori	r17, 0x01	; 1
    2a70:	0f c0       	rjmp	.+30     	; 0x2a90 <qtm_gestures_2d_process+0x3d4>
    2a72:	87 85       	ldd	r24, Z+15	; 0x0f
    2a74:	90 e0       	ldi	r25, 0x00	; 0
    2a76:	28 17       	cp	r18, r24
    2a78:	39 07       	cpc	r19, r25
    2a7a:	6c f0       	brlt	.+26     	; 0x2a96 <qtm_gestures_2d_process+0x3da>
    2a7c:	10 91 4a 44 	lds	r17, 0x444A	; 0x80444a <timeouttrack>
    2a80:	11 fd       	sbrc	r17, 1
    2a82:	09 c0       	rjmp	.+18     	; 0x2a96 <qtm_gestures_2d_process+0x3da>
    2a84:	80 ea       	ldi	r24, 0xA0	; 160
    2a86:	0e 94 a3 11 	call	0x2346	; 0x2346 <appendEvent>
    2a8a:	80 93 44 44 	sts	0x4444, r24	; 0x804444 <lastEvent.1915>
    2a8e:	12 60       	ori	r17, 0x02	; 2
    2a90:	10 93 4a 44 	sts	0x444A, r17	; 0x80444a <timeouttrack>
    2a94:	1a c0       	rjmp	.+52     	; 0x2aca <qtm_gestures_2d_process+0x40e>
    2a96:	86 85       	ldd	r24, Z+14	; 0x0e
    2a98:	90 e0       	ldi	r25, 0x00	; 0
    2a9a:	28 17       	cp	r18, r24
    2a9c:	39 07       	cpc	r19, r25
    2a9e:	ac f0       	brlt	.+42     	; 0x2aca <qtm_gestures_2d_process+0x40e>
    2aa0:	80 91 42 44 	lds	r24, 0x4442	; 0x804442 <tapThreshExceeded.1917>
    2aa4:	81 11       	cpse	r24, r1
    2aa6:	11 c0       	rjmp	.+34     	; 0x2aca <qtm_gestures_2d_process+0x40e>
    2aa8:	80 91 4a 44 	lds	r24, 0x444A	; 0x80444a <timeouttrack>
    2aac:	83 30       	cpi	r24, 0x03	; 3
    2aae:	69 f4       	brne	.+26     	; 0x2aca <qtm_gestures_2d_process+0x40e>
    2ab0:	80 e9       	ldi	r24, 0x90	; 144
    2ab2:	0e 94 a3 11 	call	0x2346	; 0x2346 <appendEvent>
    2ab6:	80 93 44 44 	sts	0x4444, r24	; 0x804444 <lastEvent.1915>
    2aba:	10 92 4a 44 	sts	0x444A, r1	; 0x80444a <timeouttrack>
    2abe:	8f ef       	ldi	r24, 0xFF	; 255
    2ac0:	9f ef       	ldi	r25, 0xFF	; 255
    2ac2:	80 93 c2 45 	sts	0x45C2, r24	; 0x8045c2 <timer>
    2ac6:	90 93 c3 45 	sts	0x45C3, r25	; 0x8045c3 <timer+0x1>
    2aca:	a0 90 47 44 	lds	r10, 0x4447	; 0x804447 <x_position.1918>
    2ace:	b0 90 48 44 	lds	r11, 0x4448	; 0x804448 <x_position.1918+0x1>
    2ad2:	a0 92 64 44 	sts	0x4464, r10	; 0x804464 <touchStream>
    2ad6:	b0 92 65 44 	sts	0x4465, r11	; 0x804465 <touchStream+0x1>
    2ada:	c0 90 45 44 	lds	r12, 0x4445	; 0x804445 <y_position.1919>
    2ade:	d0 90 46 44 	lds	r13, 0x4446	; 0x804446 <y_position.1919+0x1>
    2ae2:	c0 92 66 44 	sts	0x4466, r12	; 0x804466 <touchStream+0x2>
    2ae6:	d0 92 67 44 	sts	0x4467, r13	; 0x804467 <touchStream+0x3>
    2aea:	e0 90 68 44 	lds	r14, 0x4468	; 0x804468 <touchDown>
    2aee:	f0 90 69 44 	lds	r15, 0x4469	; 0x804469 <touchDown+0x1>
    2af2:	ae 14       	cp	r10, r14
    2af4:	bf 04       	cpc	r11, r15
    2af6:	28 f0       	brcs	.+10     	; 0x2b02 <qtm_gestures_2d_process+0x446>
    2af8:	c5 01       	movw	r24, r10
    2afa:	8e 19       	sub	r24, r14
    2afc:	9f 09       	sbc	r25, r15
    2afe:	7c 01       	movw	r14, r24
    2b00:	02 c0       	rjmp	.+4      	; 0x2b06 <qtm_gestures_2d_process+0x44a>
    2b02:	ea 18       	sub	r14, r10
    2b04:	fb 08       	sbc	r15, r11
    2b06:	00 91 6a 44 	lds	r16, 0x446A	; 0x80446a <touchDown+0x2>
    2b0a:	10 91 6b 44 	lds	r17, 0x446B	; 0x80446b <touchDown+0x3>
    2b0e:	c0 16       	cp	r12, r16
    2b10:	d1 06       	cpc	r13, r17
    2b12:	28 f0       	brcs	.+10     	; 0x2b1e <qtm_gestures_2d_process+0x462>
    2b14:	d6 01       	movw	r26, r12
    2b16:	a0 1b       	sub	r26, r16
    2b18:	b1 0b       	sbc	r27, r17
    2b1a:	8d 01       	movw	r16, r26
    2b1c:	02 c0       	rjmp	.+4      	; 0x2b22 <qtm_gestures_2d_process+0x466>
    2b1e:	0c 19       	sub	r16, r12
    2b20:	1d 09       	sbc	r17, r13
    2b22:	e0 91 c4 45 	lds	r30, 0x45C4	; 0x8045c4 <cfgRam>
    2b26:	f0 91 c5 45 	lds	r31, 0x45C5	; 0x8045c5 <cfgRam+0x1>
    2b2a:	83 89       	ldd	r24, Z+19	; 0x13
    2b2c:	90 e0       	ldi	r25, 0x00	; 0
    2b2e:	8e 15       	cp	r24, r14
    2b30:	9f 05       	cpc	r25, r15
    2b32:	18 f0       	brcs	.+6      	; 0x2b3a <qtm_gestures_2d_process+0x47e>
    2b34:	80 17       	cp	r24, r16
    2b36:	91 07       	cpc	r25, r17
    2b38:	70 f4       	brcc	.+28     	; 0x2b56 <qtm_gestures_2d_process+0x49a>
    2b3a:	80 91 42 44 	lds	r24, 0x4442	; 0x804442 <tapThreshExceeded.1917>
    2b3e:	81 11       	cpse	r24, r1
    2b40:	0a c0       	rjmp	.+20     	; 0x2b56 <qtm_gestures_2d_process+0x49a>
    2b42:	0e 94 70 11 	call	0x22e0	; 0x22e0 <getSwipeDirection>
    2b46:	80 63       	ori	r24, 0x30	; 48
    2b48:	0e 94 a3 11 	call	0x2346	; 0x2346 <appendEvent>
    2b4c:	80 93 44 44 	sts	0x4444, r24	; 0x804444 <lastEvent.1915>
    2b50:	81 e0       	ldi	r24, 0x01	; 1
    2b52:	80 93 42 44 	sts	0x4442, r24	; 0x804442 <tapThreshExceeded.1917>
    2b56:	80 91 42 44 	lds	r24, 0x4442	; 0x804442 <tapThreshExceeded.1917>
    2b5a:	88 23       	and	r24, r24
    2b5c:	09 f4       	brne	.+2      	; 0x2b60 <qtm_gestures_2d_process+0x4a4>
    2b5e:	60 c0       	rjmp	.+192    	; 0x2c20 <qtm_gestures_2d_process+0x564>
    2b60:	e0 91 c4 45 	lds	r30, 0x45C4	; 0x8045c4 <cfgRam>
    2b64:	f0 91 c5 45 	lds	r31, 0x45C5	; 0x8045c5 <cfgRam+0x1>
    2b68:	87 85       	ldd	r24, Z+15	; 0x0f
    2b6a:	90 e0       	ldi	r25, 0x00	; 0
    2b6c:	20 91 c2 45 	lds	r18, 0x45C2	; 0x8045c2 <timer>
    2b70:	30 91 c3 45 	lds	r19, 0x45C3	; 0x8045c3 <timer+0x1>
    2b74:	28 17       	cp	r18, r24
    2b76:	39 07       	cpc	r19, r25
    2b78:	0c f0       	brlt	.+2      	; 0x2b7c <qtm_gestures_2d_process+0x4c0>
    2b7a:	52 c0       	rjmp	.+164    	; 0x2c20 <qtm_gestures_2d_process+0x564>
    2b7c:	80 89       	ldd	r24, Z+16	; 0x10
    2b7e:	90 e0       	ldi	r25, 0x00	; 0
    2b80:	8e 15       	cp	r24, r14
    2b82:	9f 05       	cpc	r25, r15
    2b84:	30 f0       	brcs	.+12     	; 0x2b92 <qtm_gestures_2d_process+0x4d6>
    2b86:	81 89       	ldd	r24, Z+17	; 0x11
    2b88:	90 e0       	ldi	r25, 0x00	; 0
    2b8a:	80 17       	cp	r24, r16
    2b8c:	91 07       	cpc	r25, r17
    2b8e:	08 f0       	brcs	.+2      	; 0x2b92 <qtm_gestures_2d_process+0x4d6>
    2b90:	47 c0       	rjmp	.+142    	; 0x2c20 <qtm_gestures_2d_process+0x564>
    2b92:	0e 94 70 11 	call	0x22e0	; 0x22e0 <getSwipeDirection>
    2b96:	80 3f       	cpi	r24, 0xF0	; 240
    2b98:	d1 f0       	breq	.+52     	; 0x2bce <qtm_gestures_2d_process+0x512>
    2b9a:	90 91 43 44 	lds	r25, 0x4443	; 0x804443 <swipeCounter.1916>
    2b9e:	80 65       	ori	r24, 0x50	; 80
    2ba0:	99 23       	and	r25, r25
    2ba2:	61 f0       	breq	.+24     	; 0x2bbc <qtm_gestures_2d_process+0x500>
    2ba4:	20 91 44 44 	lds	r18, 0x4444	; 0x804444 <lastEvent.1915>
    2ba8:	82 13       	cpse	r24, r18
    2baa:	08 c0       	rjmp	.+16     	; 0x2bbc <qtm_gestures_2d_process+0x500>
    2bac:	20 91 5e 44 	lds	r18, 0x445E	; 0x80445e <eventCounter>
    2bb0:	21 50       	subi	r18, 0x01	; 1
    2bb2:	20 93 5e 44 	sts	0x445E, r18	; 0x80445e <eventCounter>
    2bb6:	91 50       	subi	r25, 0x01	; 1
    2bb8:	90 93 43 44 	sts	0x4443, r25	; 0x804443 <swipeCounter.1916>
    2bbc:	0e 94 a3 11 	call	0x2346	; 0x2346 <appendEvent>
    2bc0:	80 93 44 44 	sts	0x4444, r24	; 0x804444 <lastEvent.1915>
    2bc4:	80 91 43 44 	lds	r24, 0x4443	; 0x804443 <swipeCounter.1916>
    2bc8:	8f 5f       	subi	r24, 0xFF	; 255
    2bca:	80 93 43 44 	sts	0x4443, r24	; 0x804443 <swipeCounter.1916>
    2bce:	80 91 c2 45 	lds	r24, 0x45C2	; 0x8045c2 <timer>
    2bd2:	90 91 c3 45 	lds	r25, 0x45C3	; 0x8045c3 <timer+0x1>
    2bd6:	01 96       	adiw	r24, 0x01	; 1
    2bd8:	21 f0       	breq	.+8      	; 0x2be2 <qtm_gestures_2d_process+0x526>
    2bda:	10 92 c2 45 	sts	0x45C2, r1	; 0x8045c2 <timer>
    2bde:	10 92 c3 45 	sts	0x45C3, r1	; 0x8045c3 <timer+0x1>
    2be2:	a0 92 68 44 	sts	0x4468, r10	; 0x804468 <touchDown>
    2be6:	b0 92 69 44 	sts	0x4469, r11	; 0x804469 <touchDown+0x1>
    2bea:	c0 92 6a 44 	sts	0x446A, r12	; 0x80446a <touchDown+0x2>
    2bee:	d0 92 6b 44 	sts	0x446B, r13	; 0x80446b <touchDown+0x3>
    2bf2:	16 c0       	rjmp	.+44     	; 0x2c20 <qtm_gestures_2d_process+0x564>
    2bf4:	85 85       	ldd	r24, Z+13	; 0x0d
    2bf6:	90 e0       	ldi	r25, 0x00	; 0
    2bf8:	20 91 c2 45 	lds	r18, 0x45C2	; 0x8045c2 <timer>
    2bfc:	30 91 c3 45 	lds	r19, 0x45C3	; 0x8045c3 <timer+0x1>
    2c00:	82 17       	cp	r24, r18
    2c02:	93 07       	cpc	r25, r19
    2c04:	6c f4       	brge	.+26     	; 0x2c20 <qtm_gestures_2d_process+0x564>
    2c06:	80 e8       	ldi	r24, 0x80	; 128
    2c08:	0e 94 a3 11 	call	0x2346	; 0x2346 <appendEvent>
    2c0c:	80 93 44 44 	sts	0x4444, r24	; 0x804444 <lastEvent.1915>
    2c10:	10 92 5f 44 	sts	0x445F, r1	; 0x80445f <tapCount>
    2c14:	8f ef       	ldi	r24, 0xFF	; 255
    2c16:	9f ef       	ldi	r25, 0xFF	; 255
    2c18:	80 93 c2 45 	sts	0x45C2, r24	; 0x8045c2 <timer>
    2c1c:	90 93 c3 45 	sts	0x45C3, r25	; 0x8045c3 <timer+0x1>
    2c20:	80 91 59 44 	lds	r24, 0x4459	; 0x804459 <currentGesture+0xa>
    2c24:	81 30       	cpi	r24, 0x01	; 1
    2c26:	21 f4       	brne	.+8      	; 0x2c30 <qtm_gestures_2d_process+0x574>
    2c28:	80 91 57 44 	lds	r24, 0x4457	; 0x804457 <currentGesture+0x8>
    2c2c:	80 93 4d 44 	sts	0x444D, r24	; 0x80444d <value>
    2c30:	80 91 4d 44 	lds	r24, 0x444D	; 0x80444d <value>
    2c34:	98 2f       	mov	r25, r24
    2c36:	9e 7f       	andi	r25, 0xFE	; 254
    2c38:	10 91 4c 44 	lds	r17, 0x444C	; 0x80444c <diag>
    2c3c:	90 3f       	cpi	r25, 0xF0	; 240
    2c3e:	31 f4       	brne	.+12     	; 0x2c4c <qtm_gestures_2d_process+0x590>
    2c40:	10 ff       	sbrs	r17, 0
    2c42:	06 c0       	rjmp	.+12     	; 0x2c50 <qtm_gestures_2d_process+0x594>
    2c44:	91 e0       	ldi	r25, 0x01	; 1
    2c46:	90 93 4e 44 	sts	0x444E, r25	; 0x80444e <status>
    2c4a:	02 c0       	rjmp	.+4      	; 0x2c50 <qtm_gestures_2d_process+0x594>
    2c4c:	81 11       	cpse	r24, r1
    2c4e:	fa cf       	rjmp	.-12     	; 0x2c44 <qtm_gestures_2d_process+0x588>
    2c50:	90 91 49 44 	lds	r25, 0x4449	; 0x804449 <dualFingerGesture>
    2c54:	99 23       	and	r25, r25
    2c56:	e1 f0       	breq	.+56     	; 0x2c90 <qtm_gestures_2d_process+0x5d4>
    2c58:	90 91 4e 44 	lds	r25, 0x444E	; 0x80444e <status>
    2c5c:	99 23       	and	r25, r25
    2c5e:	c1 f0       	breq	.+48     	; 0x2c90 <qtm_gestures_2d_process+0x5d4>
    2c60:	9f ef       	ldi	r25, 0xFF	; 255
    2c62:	98 0f       	add	r25, r24
    2c64:	93 34       	cpi	r25, 0x43	; 67
    2c66:	10 f4       	brcc	.+4      	; 0x2c6c <qtm_gestures_2d_process+0x5b0>
    2c68:	8c 5f       	subi	r24, 0xFC	; 252
    2c6a:	09 c0       	rjmp	.+18     	; 0x2c7e <qtm_gestures_2d_process+0x5c2>
    2c6c:	98 2f       	mov	r25, r24
    2c6e:	90 7f       	andi	r25, 0xF0	; 240
    2c70:	90 39       	cpi	r25, 0x90	; 144
    2c72:	11 f4       	brne	.+4      	; 0x2c78 <qtm_gestures_2d_process+0x5bc>
    2c74:	80 5f       	subi	r24, 0xF0	; 240
    2c76:	03 c0       	rjmp	.+6      	; 0x2c7e <qtm_gestures_2d_process+0x5c2>
    2c78:	80 3d       	cpi	r24, 0xD0	; 208
    2c7a:	19 f4       	brne	.+6      	; 0x2c82 <qtm_gestures_2d_process+0x5c6>
    2c7c:	84 ed       	ldi	r24, 0xD4	; 212
    2c7e:	80 93 4d 44 	sts	0x444D, r24	; 0x80444d <value>
    2c82:	80 91 4d 44 	lds	r24, 0x444D	; 0x80444d <value>
    2c86:	80 7c       	andi	r24, 0xC0	; 192
    2c88:	80 3c       	cpi	r24, 0xC0	; 192
    2c8a:	11 f0       	breq	.+4      	; 0x2c90 <qtm_gestures_2d_process+0x5d4>
    2c8c:	10 92 49 44 	sts	0x4449, r1	; 0x804449 <dualFingerGesture>
    2c90:	e8 80       	ld	r14, Y
    2c92:	f9 80       	ldd	r15, Y+1	; 0x01
    2c94:	0e 94 2f 13 	call	0x265e	; 0x265e <Gestures_QueryStatus>
    2c98:	f7 01       	movw	r30, r14
    2c9a:	80 83       	st	Z, r24
    2c9c:	e8 81       	ld	r30, Y
    2c9e:	f9 81       	ldd	r31, Y+1	; 0x01
    2ca0:	80 91 4d 44 	lds	r24, 0x444D	; 0x80444d <value>
    2ca4:	81 83       	std	Z+1, r24	; 0x01
    2ca6:	e8 81       	ld	r30, Y
    2ca8:	f9 81       	ldd	r31, Y+1	; 0x01
    2caa:	12 83       	std	Z+2, r17	; 0x02
    2cac:	80 e0       	ldi	r24, 0x00	; 0
    2cae:	06 c0       	rjmp	.+12     	; 0x2cbc <qtm_gestures_2d_process+0x600>
    2cb0:	8b e0       	ldi	r24, 0x0B	; 11
    2cb2:	04 c0       	rjmp	.+8      	; 0x2cbc <qtm_gestures_2d_process+0x600>
    2cb4:	9f ef       	ldi	r25, 0xFF	; 255
    2cb6:	a7 ce       	rjmp	.-690    	; 0x2a06 <qtm_gestures_2d_process+0x34a>
    2cb8:	90 ec       	ldi	r25, 0xC0	; 192
    2cba:	b2 ce       	rjmp	.-668    	; 0x2a20 <qtm_gestures_2d_process+0x364>
    2cbc:	df 91       	pop	r29
    2cbe:	cf 91       	pop	r28
    2cc0:	1f 91       	pop	r17
    2cc2:	0f 91       	pop	r16
    2cc4:	ff 90       	pop	r15
    2cc6:	ef 90       	pop	r14
    2cc8:	df 90       	pop	r13
    2cca:	cf 90       	pop	r12
    2ccc:	bf 90       	pop	r11
    2cce:	af 90       	pop	r10
    2cd0:	08 95       	ret

00002cd2 <divide>:
    2cd2:	9c 01       	movw	r18, r24
    2cd4:	61 15       	cp	r22, r1
    2cd6:	71 05       	cpc	r23, r1
    2cd8:	09 f1       	breq	.+66     	; 0x2d1c <divide+0x4a>
    2cda:	4f 5f       	subi	r20, 0xFF	; 255
    2cdc:	37 fd       	sbrc	r19, 7
    2cde:	06 c0       	rjmp	.+12     	; 0x2cec <divide+0x1a>
    2ce0:	44 23       	and	r20, r20
    2ce2:	21 f0       	breq	.+8      	; 0x2cec <divide+0x1a>
    2ce4:	41 50       	subi	r20, 0x01	; 1
    2ce6:	22 0f       	add	r18, r18
    2ce8:	33 1f       	adc	r19, r19
    2cea:	f8 cf       	rjmp	.-16     	; 0x2cdc <divide+0xa>
    2cec:	77 fd       	sbrc	r23, 7
    2cee:	04 c0       	rjmp	.+8      	; 0x2cf8 <divide+0x26>
    2cf0:	4f 5f       	subi	r20, 0xFF	; 255
    2cf2:	66 0f       	add	r22, r22
    2cf4:	77 1f       	adc	r23, r23
    2cf6:	fa cf       	rjmp	.-12     	; 0x2cec <divide+0x1a>
    2cf8:	80 e0       	ldi	r24, 0x00	; 0
    2cfa:	90 e0       	ldi	r25, 0x00	; 0
    2cfc:	44 23       	and	r20, r20
    2cfe:	81 f0       	breq	.+32     	; 0x2d20 <divide+0x4e>
    2d00:	97 fd       	sbrc	r25, 7
    2d02:	0c c0       	rjmp	.+24     	; 0x2d1c <divide+0x4a>
    2d04:	88 0f       	add	r24, r24
    2d06:	99 1f       	adc	r25, r25
    2d08:	41 50       	subi	r20, 0x01	; 1
    2d0a:	26 17       	cp	r18, r22
    2d0c:	37 07       	cpc	r19, r23
    2d0e:	18 f0       	brcs	.+6      	; 0x2d16 <divide+0x44>
    2d10:	26 1b       	sub	r18, r22
    2d12:	37 0b       	sbc	r19, r23
    2d14:	01 96       	adiw	r24, 0x01	; 1
    2d16:	76 95       	lsr	r23
    2d18:	67 95       	ror	r22
    2d1a:	f0 cf       	rjmp	.-32     	; 0x2cfc <divide+0x2a>
    2d1c:	8f ef       	ldi	r24, 0xFF	; 255
    2d1e:	9f ef       	ldi	r25, 0xFF	; 255
    2d20:	08 95       	ret

00002d22 <median_filter_update>:
    2d22:	26 e0       	ldi	r18, 0x06	; 6
    2d24:	82 9f       	mul	r24, r18
    2d26:	c0 01       	movw	r24, r0
    2d28:	11 24       	eor	r1, r1
    2d2a:	fc 01       	movw	r30, r24
    2d2c:	e3 59       	subi	r30, 0x93	; 147
    2d2e:	fb 4b       	sbci	r31, 0xBB	; 187
    2d30:	22 81       	ldd	r18, Z+2	; 0x02
    2d32:	33 81       	ldd	r19, Z+3	; 0x03
    2d34:	20 83       	st	Z, r18
    2d36:	31 83       	std	Z+1, r19	; 0x01
    2d38:	54 81       	ldd	r21, Z+4	; 0x04
    2d3a:	45 81       	ldd	r20, Z+5	; 0x05
    2d3c:	52 83       	std	Z+2, r21	; 0x02
    2d3e:	43 83       	std	Z+3, r20	; 0x03
    2d40:	64 83       	std	Z+4, r22	; 0x04
    2d42:	75 83       	std	Z+5, r23	; 0x05
    2d44:	85 2f       	mov	r24, r21
    2d46:	94 2f       	mov	r25, r20
    2d48:	68 17       	cp	r22, r24
    2d4a:	79 07       	cpc	r23, r25
    2d4c:	d9 f0       	breq	.+54     	; 0x2d84 <median_filter_update+0x62>
    2d4e:	82 17       	cp	r24, r18
    2d50:	93 07       	cpc	r25, r19
    2d52:	c1 f0       	breq	.+48     	; 0x2d84 <median_filter_update+0x62>
    2d54:	62 17       	cp	r22, r18
    2d56:	73 07       	cpc	r23, r19
    2d58:	a1 f0       	breq	.+40     	; 0x2d82 <median_filter_update+0x60>
    2d5a:	86 17       	cp	r24, r22
    2d5c:	97 07       	cpc	r25, r23
    2d5e:	40 f4       	brcc	.+16     	; 0x2d70 <median_filter_update+0x4e>
    2d60:	28 17       	cp	r18, r24
    2d62:	39 07       	cpc	r19, r25
    2d64:	78 f0       	brcs	.+30     	; 0x2d84 <median_filter_update+0x62>
    2d66:	cb 01       	movw	r24, r22
    2d68:	26 17       	cp	r18, r22
    2d6a:	37 07       	cpc	r19, r23
    2d6c:	58 f4       	brcc	.+22     	; 0x2d84 <median_filter_update+0x62>
    2d6e:	07 c0       	rjmp	.+14     	; 0x2d7e <median_filter_update+0x5c>
    2d70:	82 17       	cp	r24, r18
    2d72:	93 07       	cpc	r25, r19
    2d74:	38 f0       	brcs	.+14     	; 0x2d84 <median_filter_update+0x62>
    2d76:	cb 01       	movw	r24, r22
    2d78:	62 17       	cp	r22, r18
    2d7a:	73 07       	cpc	r23, r19
    2d7c:	18 f4       	brcc	.+6      	; 0x2d84 <median_filter_update+0x62>
    2d7e:	c9 01       	movw	r24, r18
    2d80:	08 95       	ret
    2d82:	cb 01       	movw	r24, r22
    2d84:	08 95       	ret

00002d86 <get_key_delta>:
    2d86:	26 e0       	ldi	r18, 0x06	; 6
    2d88:	26 9f       	mul	r18, r22
    2d8a:	f0 01       	movw	r30, r0
    2d8c:	27 9f       	mul	r18, r23
    2d8e:	f0 0d       	add	r31, r0
    2d90:	11 24       	eor	r1, r1
    2d92:	e8 0f       	add	r30, r24
    2d94:	f9 1f       	adc	r31, r25
    2d96:	a2 81       	ldd	r26, Z+2	; 0x02
    2d98:	b3 81       	ldd	r27, Z+3	; 0x03
    2d9a:	11 96       	adiw	r26, 0x01	; 1
    2d9c:	8d 91       	ld	r24, X+
    2d9e:	9c 91       	ld	r25, X
    2da0:	12 97       	sbiw	r26, 0x02	; 2
    2da2:	24 81       	ldd	r18, Z+4	; 0x04
    2da4:	35 81       	ldd	r19, Z+5	; 0x05
    2da6:	82 1b       	sub	r24, r18
    2da8:	93 0b       	sbc	r25, r19
    2daa:	08 95       	ret

00002dac <get_axis_contact_size>:
    2dac:	9f 92       	push	r9
    2dae:	af 92       	push	r10
    2db0:	bf 92       	push	r11
    2db2:	cf 92       	push	r12
    2db4:	df 92       	push	r13
    2db6:	ef 92       	push	r14
    2db8:	ff 92       	push	r15
    2dba:	0f 93       	push	r16
    2dbc:	1f 93       	push	r17
    2dbe:	cf 93       	push	r28
    2dc0:	df 93       	push	r29
    2dc2:	5c 01       	movw	r10, r24
    2dc4:	6b 01       	movw	r12, r22
    2dc6:	94 2e       	mov	r9, r20
    2dc8:	79 01       	movw	r14, r18
    2dca:	b9 01       	movw	r22, r18
    2dcc:	0e 94 c3 16 	call	0x2d86	; 0x2d86 <get_key_delta>
    2dd0:	18 16       	cp	r1, r24
    2dd2:	19 06       	cpc	r1, r25
    2dd4:	14 f4       	brge	.+4      	; 0x2dda <get_axis_contact_size+0x2e>
    2dd6:	ec 01       	movw	r28, r24
    2dd8:	02 c0       	rjmp	.+4      	; 0x2dde <get_axis_contact_size+0x32>
    2dda:	c0 e0       	ldi	r28, 0x00	; 0
    2ddc:	d0 e0       	ldi	r29, 0x00	; 0
    2dde:	ce 14       	cp	r12, r14
    2de0:	df 04       	cpc	r13, r15
    2de2:	58 f4       	brcc	.+22     	; 0x2dfa <get_axis_contact_size+0x4e>
    2de4:	b7 01       	movw	r22, r14
    2de6:	61 50       	subi	r22, 0x01	; 1
    2de8:	71 09       	sbc	r23, r1
    2dea:	c5 01       	movw	r24, r10
    2dec:	0e 94 c3 16 	call	0x2d86	; 0x2d86 <get_key_delta>
    2df0:	18 16       	cp	r1, r24
    2df2:	19 06       	cpc	r1, r25
    2df4:	14 f4       	brge	.+4      	; 0x2dfa <get_axis_contact_size+0x4e>
    2df6:	8c 01       	movw	r16, r24
    2df8:	02 c0       	rjmp	.+4      	; 0x2dfe <get_axis_contact_size+0x52>
    2dfa:	00 e0       	ldi	r16, 0x00	; 0
    2dfc:	10 e0       	ldi	r17, 0x00	; 0
    2dfe:	c9 0c       	add	r12, r9
    2e00:	d1 1c       	adc	r13, r1
    2e02:	81 e0       	ldi	r24, 0x01	; 1
    2e04:	c8 1a       	sub	r12, r24
    2e06:	d1 08       	sbc	r13, r1
    2e08:	ec 14       	cp	r14, r12
    2e0a:	fd 04       	cpc	r15, r13
    2e0c:	48 f4       	brcc	.+18     	; 0x2e20 <get_axis_contact_size+0x74>
    2e0e:	b7 01       	movw	r22, r14
    2e10:	6f 5f       	subi	r22, 0xFF	; 255
    2e12:	7f 4f       	sbci	r23, 0xFF	; 255
    2e14:	c5 01       	movw	r24, r10
    2e16:	0e 94 c3 16 	call	0x2d86	; 0x2d86 <get_key_delta>
    2e1a:	18 16       	cp	r1, r24
    2e1c:	19 06       	cpc	r1, r25
    2e1e:	14 f0       	brlt	.+4      	; 0x2e24 <get_axis_contact_size+0x78>
    2e20:	80 e0       	ldi	r24, 0x00	; 0
    2e22:	90 e0       	ldi	r25, 0x00	; 0
    2e24:	80 17       	cp	r24, r16
    2e26:	91 07       	cpc	r25, r17
    2e28:	08 f4       	brcc	.+2      	; 0x2e2c <get_axis_contact_size+0x80>
    2e2a:	c8 01       	movw	r24, r16
    2e2c:	8c 0f       	add	r24, r28
    2e2e:	9d 1f       	adc	r25, r29
    2e30:	df 91       	pop	r29
    2e32:	cf 91       	pop	r28
    2e34:	1f 91       	pop	r17
    2e36:	0f 91       	pop	r16
    2e38:	ff 90       	pop	r15
    2e3a:	ef 90       	pop	r14
    2e3c:	df 90       	pop	r13
    2e3e:	cf 90       	pop	r12
    2e40:	bf 90       	pop	r11
    2e42:	af 90       	pop	r10
    2e44:	9f 90       	pop	r9
    2e46:	08 95       	ret

00002e48 <get_interpolated_position.isra.0>:
    2e48:	2f 92       	push	r2
    2e4a:	3f 92       	push	r3
    2e4c:	4f 92       	push	r4
    2e4e:	5f 92       	push	r5
    2e50:	6f 92       	push	r6
    2e52:	7f 92       	push	r7
    2e54:	8f 92       	push	r8
    2e56:	9f 92       	push	r9
    2e58:	af 92       	push	r10
    2e5a:	bf 92       	push	r11
    2e5c:	cf 92       	push	r12
    2e5e:	df 92       	push	r13
    2e60:	ef 92       	push	r14
    2e62:	ff 92       	push	r15
    2e64:	0f 93       	push	r16
    2e66:	1f 93       	push	r17
    2e68:	cf 93       	push	r28
    2e6a:	df 93       	push	r29
    2e6c:	cd b7       	in	r28, 0x3d	; 61
    2e6e:	de b7       	in	r29, 0x3e	; 62
    2e70:	25 97       	sbiw	r28, 0x05	; 5
    2e72:	cd bf       	out	0x3d, r28	; 61
    2e74:	de bf       	out	0x3e, r29	; 62
    2e76:	2b 01       	movw	r4, r22
    2e78:	4a 83       	std	Y+2, r20	; 0x02
    2e7a:	89 01       	movw	r16, r18
    2e7c:	fc 01       	movw	r30, r24
    2e7e:	c3 84       	ldd	r12, Z+11	; 0x0b
    2e80:	d4 84       	ldd	r13, Z+12	; 0x0c
    2e82:	f6 81       	ldd	r31, Z+6	; 0x06
    2e84:	f9 83       	std	Y+1, r31	; 0x01
    2e86:	f2 95       	swap	r31
    2e88:	ff 70       	andi	r31, 0x0F	; 15
    2e8a:	fb 83       	std	Y+3, r31	; 0x03
    2e8c:	b9 01       	movw	r22, r18
    2e8e:	c6 01       	movw	r24, r12
    2e90:	0e 94 c3 16 	call	0x2d86	; 0x2d86 <get_key_delta>
    2e94:	8c 83       	std	Y+4, r24	; 0x04
    2e96:	9d 83       	std	Y+5, r25	; 0x05
    2e98:	97 ff       	sbrs	r25, 7
    2e9a:	02 c0       	rjmp	.+4      	; 0x2ea0 <get_interpolated_position.isra.0+0x58>
    2e9c:	1c 82       	std	Y+4, r1	; 0x04
    2e9e:	1d 82       	std	Y+5, r1	; 0x05
    2ea0:	04 15       	cp	r16, r4
    2ea2:	15 05       	cpc	r17, r5
    2ea4:	49 f0       	breq	.+18     	; 0x2eb8 <get_interpolated_position.isra.0+0x70>
    2ea6:	b8 01       	movw	r22, r16
    2ea8:	61 50       	subi	r22, 0x01	; 1
    2eaa:	71 09       	sbc	r23, r1
    2eac:	c6 01       	movw	r24, r12
    2eae:	0e 94 c3 16 	call	0x2d86	; 0x2d86 <get_key_delta>
    2eb2:	7c 01       	movw	r14, r24
    2eb4:	97 ff       	sbrs	r25, 7
    2eb6:	02 c0       	rjmp	.+4      	; 0x2ebc <get_interpolated_position.isra.0+0x74>
    2eb8:	e1 2c       	mov	r14, r1
    2eba:	f1 2c       	mov	r15, r1
    2ebc:	2a 81       	ldd	r18, Y+2	; 0x02
    2ebe:	22 2e       	mov	r2, r18
    2ec0:	31 2c       	mov	r3, r1
    2ec2:	c2 01       	movw	r24, r4
    2ec4:	82 0d       	add	r24, r2
    2ec6:	93 1d       	adc	r25, r3
    2ec8:	01 97       	sbiw	r24, 0x01	; 1
    2eca:	48 01       	movw	r8, r16
    2ecc:	a1 2c       	mov	r10, r1
    2ece:	b1 2c       	mov	r11, r1
    2ed0:	61 2c       	mov	r6, r1
    2ed2:	71 2c       	mov	r7, r1
    2ed4:	08 17       	cp	r16, r24
    2ed6:	19 07       	cpc	r17, r25
    2ed8:	09 f4       	brne	.+2      	; 0x2edc <get_interpolated_position.isra.0+0x94>
    2eda:	7d c0       	rjmp	.+250    	; 0x2fd6 <get_interpolated_position.isra.0+0x18e>
    2edc:	b8 01       	movw	r22, r16
    2ede:	6f 5f       	subi	r22, 0xFF	; 255
    2ee0:	7f 4f       	sbci	r23, 0xFF	; 255
    2ee2:	c6 01       	movw	r24, r12
    2ee4:	0e 94 c3 16 	call	0x2d86	; 0x2d86 <get_key_delta>
    2ee8:	84 18       	sub	r8, r4
    2eea:	95 08       	sbc	r9, r5
    2eec:	a6 08       	sbc	r10, r6
    2eee:	b7 08       	sbc	r11, r7
    2ef0:	5c e0       	ldi	r21, 0x0C	; 12
    2ef2:	88 0c       	add	r8, r8
    2ef4:	99 1c       	adc	r9, r9
    2ef6:	aa 1c       	adc	r10, r10
    2ef8:	bb 1c       	adc	r11, r11
    2efa:	5a 95       	dec	r21
    2efc:	d1 f7       	brne	.-12     	; 0x2ef2 <get_interpolated_position.isra.0+0xaa>
    2efe:	97 ff       	sbrs	r25, 7
    2f00:	02 c0       	rjmp	.+4      	; 0x2f06 <get_interpolated_position.isra.0+0xbe>
    2f02:	80 e0       	ldi	r24, 0x00	; 0
    2f04:	90 e0       	ldi	r25, 0x00	; 0
    2f06:	e8 16       	cp	r14, r24
    2f08:	f9 06       	cpc	r15, r25
    2f0a:	90 f0       	brcs	.+36     	; 0x2f30 <get_interpolated_position.isra.0+0xe8>
    2f0c:	4c 81       	ldd	r20, Y+4	; 0x04
    2f0e:	5d 81       	ldd	r21, Y+5	; 0x05
    2f10:	48 1b       	sub	r20, r24
    2f12:	59 0b       	sbc	r21, r25
    2f14:	4c 83       	std	Y+4, r20	; 0x04
    2f16:	5d 83       	std	Y+5, r21	; 0x05
    2f18:	ba 01       	movw	r22, r20
    2f1a:	68 1b       	sub	r22, r24
    2f1c:	79 0b       	sbc	r23, r25
    2f1e:	6e 0d       	add	r22, r14
    2f20:	7f 1d       	adc	r23, r15
    2f22:	4c e0       	ldi	r20, 0x0C	; 12
    2f24:	8c 81       	ldd	r24, Y+4	; 0x04
    2f26:	9d 81       	ldd	r25, Y+5	; 0x05
    2f28:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <divide>
    2f2c:	90 51       	subi	r25, 0x10	; 16
    2f2e:	0b c0       	rjmp	.+22     	; 0x2f46 <get_interpolated_position.isra.0+0xfe>
    2f30:	8e 19       	sub	r24, r14
    2f32:	9f 09       	sbc	r25, r15
    2f34:	6c 81       	ldd	r22, Y+4	; 0x04
    2f36:	7d 81       	ldd	r23, Y+5	; 0x05
    2f38:	6e 19       	sub	r22, r14
    2f3a:	7f 09       	sbc	r23, r15
    2f3c:	68 0f       	add	r22, r24
    2f3e:	79 1f       	adc	r23, r25
    2f40:	4c e0       	ldi	r20, 0x0C	; 12
    2f42:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <divide>
    2f46:	a5 01       	movw	r20, r10
    2f48:	94 01       	movw	r18, r8
    2f4a:	28 0f       	add	r18, r24
    2f4c:	39 1f       	adc	r19, r25
    2f4e:	41 1d       	adc	r20, r1
    2f50:	51 1d       	adc	r21, r1
    2f52:	da 01       	movw	r26, r20
    2f54:	c9 01       	movw	r24, r18
    2f56:	3a 81       	ldd	r19, Y+2	; 0x02
    2f58:	33 30       	cpi	r19, 0x03	; 3
    2f5a:	40 f0       	brcs	.+16     	; 0x2f6c <get_interpolated_position.isra.0+0x124>
    2f5c:	b1 01       	movw	r22, r2
    2f5e:	61 50       	subi	r22, 0x01	; 1
    2f60:	71 09       	sbc	r23, r1
    2f62:	40 e0       	ldi	r20, 0x00	; 0
    2f64:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <divide>
    2f68:	a0 e0       	ldi	r26, 0x00	; 0
    2f6a:	b0 e0       	ldi	r27, 0x00	; 0
    2f6c:	81 30       	cpi	r24, 0x01	; 1
    2f6e:	40 e1       	ldi	r20, 0x10	; 16
    2f70:	94 07       	cpc	r25, r20
    2f72:	a1 05       	cpc	r26, r1
    2f74:	b1 05       	cpc	r27, r1
    2f76:	20 f0       	brcs	.+8      	; 0x2f80 <get_interpolated_position.isra.0+0x138>
    2f78:	80 e0       	ldi	r24, 0x00	; 0
    2f7a:	90 e1       	ldi	r25, 0x10	; 16
    2f7c:	a0 e0       	ldi	r26, 0x00	; 0
    2f7e:	b0 e0       	ldi	r27, 0x00	; 0
    2f80:	29 81       	ldd	r18, Y+1	; 0x01
    2f82:	2f 70       	andi	r18, 0x0F	; 15
    2f84:	e9 f0       	breq	.+58     	; 0x2fc0 <get_interpolated_position.isra.0+0x178>
    2f86:	58 e2       	ldi	r21, 0x28	; 40
    2f88:	25 9f       	mul	r18, r21
    2f8a:	90 01       	movw	r18, r0
    2f8c:	11 24       	eor	r1, r1
    2f8e:	a9 01       	movw	r20, r18
    2f90:	60 e0       	ldi	r22, 0x00	; 0
    2f92:	70 e0       	ldi	r23, 0x00	; 0
    2f94:	84 17       	cp	r24, r20
    2f96:	95 07       	cpc	r25, r21
    2f98:	a6 07       	cpc	r26, r22
    2f9a:	b7 07       	cpc	r27, r23
    2f9c:	18 f0       	brcs	.+6      	; 0x2fa4 <get_interpolated_position.isra.0+0x15c>
    2f9e:	82 1b       	sub	r24, r18
    2fa0:	93 0b       	sbc	r25, r19
    2fa2:	03 c0       	rjmp	.+6      	; 0x2faa <get_interpolated_position.isra.0+0x162>
    2fa4:	80 e0       	ldi	r24, 0x00	; 0
    2fa6:	90 e0       	ldi	r25, 0x00	; 0
    2fa8:	dc 01       	movw	r26, r24
    2faa:	22 0f       	add	r18, r18
    2fac:	33 1f       	adc	r19, r19
    2fae:	60 e0       	ldi	r22, 0x00	; 0
    2fb0:	70 e1       	ldi	r23, 0x10	; 16
    2fb2:	62 1b       	sub	r22, r18
    2fb4:	73 0b       	sbc	r23, r19
    2fb6:	4c e0       	ldi	r20, 0x0C	; 12
    2fb8:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <divide>
    2fbc:	a0 e0       	ldi	r26, 0x00	; 0
    2fbe:	b0 e0       	ldi	r27, 0x00	; 0
    2fc0:	81 15       	cp	r24, r1
    2fc2:	e0 e1       	ldi	r30, 0x10	; 16
    2fc4:	9e 07       	cpc	r25, r30
    2fc6:	a1 05       	cpc	r26, r1
    2fc8:	b1 05       	cpc	r27, r1
    2fca:	98 f0       	brcs	.+38     	; 0x2ff2 <get_interpolated_position.isra.0+0x1aa>
    2fcc:	8f ef       	ldi	r24, 0xFF	; 255
    2fce:	9f e0       	ldi	r25, 0x0F	; 15
    2fd0:	a0 e0       	ldi	r26, 0x00	; 0
    2fd2:	b0 e0       	ldi	r27, 0x00	; 0
    2fd4:	0e c0       	rjmp	.+28     	; 0x2ff2 <get_interpolated_position.isra.0+0x1aa>
    2fd6:	84 18       	sub	r8, r4
    2fd8:	95 08       	sbc	r9, r5
    2fda:	a6 08       	sbc	r10, r6
    2fdc:	b7 08       	sbc	r11, r7
    2fde:	8c e0       	ldi	r24, 0x0C	; 12
    2fe0:	88 0c       	add	r8, r8
    2fe2:	99 1c       	adc	r9, r9
    2fe4:	aa 1c       	adc	r10, r10
    2fe6:	bb 1c       	adc	r11, r11
    2fe8:	8a 95       	dec	r24
    2fea:	d1 f7       	brne	.-12     	; 0x2fe0 <get_interpolated_position.isra.0+0x198>
    2fec:	80 e0       	ldi	r24, 0x00	; 0
    2fee:	90 e0       	ldi	r25, 0x00	; 0
    2ff0:	8d cf       	rjmp	.-230    	; 0x2f0c <get_interpolated_position.isra.0+0xc4>
    2ff2:	2c e0       	ldi	r18, 0x0C	; 12
    2ff4:	30 e0       	ldi	r19, 0x00	; 0
    2ff6:	fb 81       	ldd	r31, Y+3	; 0x03
    2ff8:	2f 1b       	sub	r18, r31
    2ffa:	31 09       	sbc	r19, r1
    2ffc:	04 c0       	rjmp	.+8      	; 0x3006 <get_interpolated_position.isra.0+0x1be>
    2ffe:	b6 95       	lsr	r27
    3000:	a7 95       	ror	r26
    3002:	97 95       	ror	r25
    3004:	87 95       	ror	r24
    3006:	2a 95       	dec	r18
    3008:	d2 f7       	brpl	.-12     	; 0x2ffe <get_interpolated_position.isra.0+0x1b6>
    300a:	25 96       	adiw	r28, 0x05	; 5
    300c:	cd bf       	out	0x3d, r28	; 61
    300e:	de bf       	out	0x3e, r29	; 62
    3010:	df 91       	pop	r29
    3012:	cf 91       	pop	r28
    3014:	1f 91       	pop	r17
    3016:	0f 91       	pop	r16
    3018:	ff 90       	pop	r15
    301a:	ef 90       	pop	r14
    301c:	df 90       	pop	r13
    301e:	cf 90       	pop	r12
    3020:	bf 90       	pop	r11
    3022:	af 90       	pop	r10
    3024:	9f 90       	pop	r9
    3026:	8f 90       	pop	r8
    3028:	7f 90       	pop	r7
    302a:	6f 90       	pop	r6
    302c:	5f 90       	pop	r5
    302e:	4f 90       	pop	r4
    3030:	3f 90       	pop	r3
    3032:	2f 90       	pop	r2
    3034:	08 95       	ret

00003036 <qtm_surface_cs_process>:
    3036:	2f 92       	push	r2
    3038:	3f 92       	push	r3
    303a:	4f 92       	push	r4
    303c:	5f 92       	push	r5
    303e:	6f 92       	push	r6
    3040:	7f 92       	push	r7
    3042:	8f 92       	push	r8
    3044:	9f 92       	push	r9
    3046:	af 92       	push	r10
    3048:	bf 92       	push	r11
    304a:	cf 92       	push	r12
    304c:	df 92       	push	r13
    304e:	ef 92       	push	r14
    3050:	ff 92       	push	r15
    3052:	0f 93       	push	r16
    3054:	1f 93       	push	r17
    3056:	cf 93       	push	r28
    3058:	df 93       	push	r29
    305a:	cd b7       	in	r28, 0x3d	; 61
    305c:	de b7       	in	r29, 0x3e	; 62
    305e:	28 97       	sbiw	r28, 0x08	; 8
    3060:	cd bf       	out	0x3d, r28	; 61
    3062:	de bf       	out	0x3e, r29	; 62
    3064:	00 97       	sbiw	r24, 0x00	; 0
    3066:	09 f4       	brne	.+2      	; 0x306a <qtm_surface_cs_process+0x34>
    3068:	00 c1       	rjmp	.+512    	; 0x326a <qtm_surface_cs_process+0x234>
    306a:	dc 01       	movw	r26, r24
    306c:	12 96       	adiw	r26, 0x02	; 2
    306e:	0d 91       	ld	r16, X+
    3070:	1c 91       	ld	r17, X
    3072:	13 97       	sbiw	r26, 0x03	; 3
    3074:	f8 01       	movw	r30, r16
    3076:	26 81       	ldd	r18, Z+6	; 0x06
    3078:	20 3d       	cpi	r18, 0xD0	; 208
    307a:	08 f0       	brcs	.+2      	; 0x307e <qtm_surface_cs_process+0x48>
    307c:	f4 c0       	rjmp	.+488    	; 0x3266 <qtm_surface_cs_process+0x230>
    307e:	2d 91       	ld	r18, X+
    3080:	3c 91       	ld	r19, X
    3082:	2f 83       	std	Y+7, r18	; 0x07
    3084:	38 87       	std	Y+8, r19	; 0x08
    3086:	23 2b       	or	r18, r19
    3088:	09 f4       	brne	.+2      	; 0x308c <qtm_surface_cs_process+0x56>
    308a:	ef c0       	rjmp	.+478    	; 0x326a <qtm_surface_cs_process+0x234>
    308c:	01 15       	cp	r16, r1
    308e:	11 05       	cpc	r17, r1
    3090:	09 f4       	brne	.+2      	; 0x3094 <qtm_surface_cs_process+0x5e>
    3092:	eb c0       	rjmp	.+470    	; 0x326a <qtm_surface_cs_process+0x234>
    3094:	43 84       	ldd	r4, Z+11	; 0x0b
    3096:	54 84       	ldd	r5, Z+12	; 0x0c
    3098:	41 14       	cp	r4, r1
    309a:	51 04       	cpc	r5, r1
    309c:	09 f4       	brne	.+2      	; 0x30a0 <qtm_surface_cs_process+0x6a>
    309e:	e5 c0       	rjmp	.+458    	; 0x326a <qtm_surface_cs_process+0x234>
    30a0:	32 81       	ldd	r19, Z+2	; 0x02
    30a2:	3b 83       	std	Y+3, r19	; 0x03
    30a4:	c0 80       	ld	r12, Z
    30a6:	d1 80       	ldd	r13, Z+1	; 0x01
    30a8:	c6 01       	movw	r24, r12
    30aa:	20 e0       	ldi	r18, 0x00	; 0
    30ac:	a6 01       	movw	r20, r12
    30ae:	43 0f       	add	r20, r19
    30b0:	51 1d       	adc	r21, r1
    30b2:	49 83       	std	Y+1, r20	; 0x01
    30b4:	5a 83       	std	Y+2, r21	; 0x02
    30b6:	36 e0       	ldi	r19, 0x06	; 6
    30b8:	49 81       	ldd	r20, Y+1	; 0x01
    30ba:	5a 81       	ldd	r21, Y+2	; 0x02
    30bc:	84 17       	cp	r24, r20
    30be:	95 07       	cpc	r25, r21
    30c0:	80 f4       	brcc	.+32     	; 0x30e2 <qtm_surface_cs_process+0xac>
    30c2:	38 9f       	mul	r19, r24
    30c4:	f0 01       	movw	r30, r0
    30c6:	39 9f       	mul	r19, r25
    30c8:	f0 0d       	add	r31, r0
    30ca:	11 24       	eor	r1, r1
    30cc:	e4 0d       	add	r30, r4
    30ce:	f5 1d       	adc	r31, r5
    30d0:	60 81       	ld	r22, Z
    30d2:	65 38       	cpi	r22, 0x85	; 133
    30d4:	11 f0       	breq	.+4      	; 0x30da <qtm_surface_cs_process+0xa4>
    30d6:	ac 01       	movw	r20, r24
    30d8:	01 c0       	rjmp	.+2      	; 0x30dc <qtm_surface_cs_process+0xa6>
    30da:	21 e0       	ldi	r18, 0x01	; 1
    30dc:	ca 01       	movw	r24, r20
    30de:	01 96       	adiw	r24, 0x01	; 1
    30e0:	eb cf       	rjmp	.-42     	; 0x30b8 <qtm_surface_cs_process+0x82>
    30e2:	22 23       	and	r18, r18
    30e4:	39 f0       	breq	.+14     	; 0x30f4 <qtm_surface_cs_process+0xbe>
    30e6:	46 01       	movw	r8, r12
    30e8:	aa 24       	eor	r10, r10
    30ea:	aa 94       	dec	r10
    30ec:	ba 2c       	mov	r11, r10
    30ee:	e1 2c       	mov	r14, r1
    30f0:	f1 2c       	mov	r15, r1
    30f2:	34 c0       	rjmp	.+104    	; 0x315c <qtm_surface_cs_process+0x126>
    30f4:	d8 01       	movw	r26, r16
    30f6:	15 96       	adiw	r26, 0x05	; 5
    30f8:	3c 91       	ld	r19, X
    30fa:	15 97       	sbiw	r26, 0x05	; 5
    30fc:	13 96       	adiw	r26, 0x03	; 3
    30fe:	8d 91       	ld	r24, X+
    3100:	9c 91       	ld	r25, X
    3102:	14 97       	sbiw	r26, 0x04	; 4
    3104:	ac 01       	movw	r20, r24
    3106:	43 0f       	add	r20, r19
    3108:	51 1d       	adc	r21, r1
    310a:	36 e0       	ldi	r19, 0x06	; 6
    310c:	ba 01       	movw	r22, r20
    310e:	84 17       	cp	r24, r20
    3110:	95 07       	cpc	r25, r21
    3112:	80 f4       	brcc	.+32     	; 0x3134 <qtm_surface_cs_process+0xfe>
    3114:	38 9f       	mul	r19, r24
    3116:	f0 01       	movw	r30, r0
    3118:	39 9f       	mul	r19, r25
    311a:	f0 0d       	add	r31, r0
    311c:	11 24       	eor	r1, r1
    311e:	e4 0d       	add	r30, r4
    3120:	f5 1d       	adc	r31, r5
    3122:	e0 81       	ld	r30, Z
    3124:	e5 38       	cpi	r30, 0x85	; 133
    3126:	11 f0       	breq	.+4      	; 0x312c <qtm_surface_cs_process+0xf6>
    3128:	bc 01       	movw	r22, r24
    312a:	01 c0       	rjmp	.+2      	; 0x312e <qtm_surface_cs_process+0xf8>
    312c:	21 e0       	ldi	r18, 0x01	; 1
    312e:	cb 01       	movw	r24, r22
    3130:	01 96       	adiw	r24, 0x01	; 1
    3132:	ec cf       	rjmp	.-40     	; 0x310c <qtm_surface_cs_process+0xd6>
    3134:	21 11       	cpse	r18, r1
    3136:	d7 cf       	rjmp	.-82     	; 0x30e6 <qtm_surface_cs_process+0xb0>
    3138:	ef 81       	ldd	r30, Y+7	; 0x07
    313a:	f8 85       	ldd	r31, Y+8	; 0x08
    313c:	80 81       	ld	r24, Z
    313e:	80 fd       	sbrc	r24, 0
    3140:	d2 cf       	rjmp	.-92     	; 0x30e6 <qtm_surface_cs_process+0xb0>
    3142:	11 86       	std	Z+9, r1	; 0x09
    3144:	12 86       	std	Z+10, r1	; 0x0a
    3146:	93 c0       	rjmp	.+294    	; 0x326e <qtm_surface_cs_process+0x238>
    3148:	b4 01       	movw	r22, r8
    314a:	c2 01       	movw	r24, r4
    314c:	0e 94 c3 16 	call	0x2d86	; 0x2d86 <get_key_delta>
    3150:	18 16       	cp	r1, r24
    3152:	19 06       	cpc	r1, r25
    3154:	4c f0       	brlt	.+18     	; 0x3168 <qtm_surface_cs_process+0x132>
    3156:	ff ef       	ldi	r31, 0xFF	; 255
    3158:	8f 1a       	sub	r8, r31
    315a:	9f 0a       	sbc	r9, r31
    315c:	29 81       	ldd	r18, Y+1	; 0x01
    315e:	3a 81       	ldd	r19, Y+2	; 0x02
    3160:	82 16       	cp	r8, r18
    3162:	93 06       	cpc	r9, r19
    3164:	88 f3       	brcs	.-30     	; 0x3148 <qtm_surface_cs_process+0x112>
    3166:	06 c0       	rjmp	.+12     	; 0x3174 <qtm_surface_cs_process+0x13e>
    3168:	e8 16       	cp	r14, r24
    316a:	f9 06       	cpc	r15, r25
    316c:	a4 f7       	brge	.-24     	; 0x3156 <qtm_surface_cs_process+0x120>
    316e:	54 01       	movw	r10, r8
    3170:	7c 01       	movw	r14, r24
    3172:	f1 cf       	rjmp	.-30     	; 0x3156 <qtm_surface_cs_process+0x120>
    3174:	d8 01       	movw	r26, r16
    3176:	15 96       	adiw	r26, 0x05	; 5
    3178:	bc 91       	ld	r27, X
    317a:	bc 83       	std	Y+4, r27	; 0x04
    317c:	f8 01       	movw	r30, r16
    317e:	63 80       	ldd	r6, Z+3	; 0x03
    3180:	74 80       	ldd	r7, Z+4	; 0x04
    3182:	13 01       	movw	r2, r6
    3184:	88 24       	eor	r8, r8
    3186:	8a 94       	dec	r8
    3188:	98 2c       	mov	r9, r8
    318a:	e1 2c       	mov	r14, r1
    318c:	f1 2c       	mov	r15, r1
    318e:	93 01       	movw	r18, r6
    3190:	2b 0f       	add	r18, r27
    3192:	31 1d       	adc	r19, r1
    3194:	2d 83       	std	Y+5, r18	; 0x05
    3196:	3e 83       	std	Y+6, r19	; 0x06
    3198:	6d 81       	ldd	r22, Y+5	; 0x05
    319a:	7e 81       	ldd	r23, Y+6	; 0x06
    319c:	26 16       	cp	r2, r22
    319e:	37 06       	cpc	r3, r23
    31a0:	80 f4       	brcc	.+32     	; 0x31c2 <qtm_surface_cs_process+0x18c>
    31a2:	b1 01       	movw	r22, r2
    31a4:	c2 01       	movw	r24, r4
    31a6:	0e 94 c3 16 	call	0x2d86	; 0x2d86 <get_key_delta>
    31aa:	18 16       	cp	r1, r24
    31ac:	19 06       	cpc	r1, r25
    31ae:	2c f4       	brge	.+10     	; 0x31ba <qtm_surface_cs_process+0x184>
    31b0:	e8 16       	cp	r14, r24
    31b2:	f9 06       	cpc	r15, r25
    31b4:	14 f4       	brge	.+4      	; 0x31ba <qtm_surface_cs_process+0x184>
    31b6:	41 01       	movw	r8, r2
    31b8:	7c 01       	movw	r14, r24
    31ba:	5f ef       	ldi	r21, 0xFF	; 255
    31bc:	25 1a       	sub	r2, r21
    31be:	35 0a       	sbc	r3, r21
    31c0:	eb cf       	rjmp	.-42     	; 0x3198 <qtm_surface_cs_process+0x162>
    31c2:	7f ef       	ldi	r23, 0xFF	; 255
    31c4:	87 16       	cp	r8, r23
    31c6:	97 06       	cpc	r9, r23
    31c8:	21 f0       	breq	.+8      	; 0x31d2 <qtm_surface_cs_process+0x19c>
    31ca:	8f ef       	ldi	r24, 0xFF	; 255
    31cc:	a8 16       	cp	r10, r24
    31ce:	b8 06       	cpc	r11, r24
    31d0:	39 f4       	brne	.+14     	; 0x31e0 <qtm_surface_cs_process+0x1aa>
    31d2:	af 81       	ldd	r26, Y+7	; 0x07
    31d4:	b8 85       	ldd	r27, Y+8	; 0x08
    31d6:	19 96       	adiw	r26, 0x09	; 9
    31d8:	1d 92       	st	X+, r1
    31da:	1c 92       	st	X, r1
    31dc:	1a 97       	sbiw	r26, 0x0a	; 10
    31de:	47 c0       	rjmp	.+142    	; 0x326e <qtm_surface_cs_process+0x238>
    31e0:	ac 14       	cp	r10, r12
    31e2:	bd 04       	cpc	r11, r13
    31e4:	68 f0       	brcs	.+26     	; 0x3200 <qtm_surface_cs_process+0x1ca>
    31e6:	e9 81       	ldd	r30, Y+1	; 0x01
    31e8:	fa 81       	ldd	r31, Y+2	; 0x02
    31ea:	ae 16       	cp	r10, r30
    31ec:	bf 06       	cpc	r11, r31
    31ee:	40 f4       	brcc	.+16     	; 0x3200 <qtm_surface_cs_process+0x1ca>
    31f0:	95 01       	movw	r18, r10
    31f2:	4b 81       	ldd	r20, Y+3	; 0x03
    31f4:	b6 01       	movw	r22, r12
    31f6:	c2 01       	movw	r24, r4
    31f8:	0e 94 d6 16 	call	0x2dac	; 0x2dac <get_axis_contact_size>
    31fc:	7c 01       	movw	r14, r24
    31fe:	02 c0       	rjmp	.+4      	; 0x3204 <qtm_surface_cs_process+0x1ce>
    3200:	e1 2c       	mov	r14, r1
    3202:	f1 2c       	mov	r15, r1
    3204:	86 14       	cp	r8, r6
    3206:	97 04       	cpc	r9, r7
    3208:	70 f0       	brcs	.+28     	; 0x3226 <qtm_surface_cs_process+0x1f0>
    320a:	2d 81       	ldd	r18, Y+5	; 0x05
    320c:	3e 81       	ldd	r19, Y+6	; 0x06
    320e:	82 16       	cp	r8, r18
    3210:	93 06       	cpc	r9, r19
    3212:	48 f4       	brcc	.+18     	; 0x3226 <qtm_surface_cs_process+0x1f0>
    3214:	94 01       	movw	r18, r8
    3216:	4c 81       	ldd	r20, Y+4	; 0x04
    3218:	b3 01       	movw	r22, r6
    321a:	c2 01       	movw	r24, r4
    321c:	0e 94 d6 16 	call	0x2dac	; 0x2dac <get_axis_contact_size>
    3220:	8e 0d       	add	r24, r14
    3222:	9f 1d       	adc	r25, r15
    3224:	02 c0       	rjmp	.+4      	; 0x322a <qtm_surface_cs_process+0x1f4>
    3226:	80 e0       	ldi	r24, 0x00	; 0
    3228:	90 e0       	ldi	r25, 0x00	; 0
    322a:	af 81       	ldd	r26, Y+7	; 0x07
    322c:	b8 85       	ldd	r27, Y+8	; 0x08
    322e:	2c 91       	ld	r18, X
    3230:	32 2f       	mov	r19, r18
    3232:	31 70       	andi	r19, 0x01	; 1
    3234:	20 ff       	sbrs	r18, 0
    3236:	0a c0       	rjmp	.+20     	; 0x324c <qtm_surface_cs_process+0x216>
    3238:	00 97       	sbiw	r24, 0x00	; 0
    323a:	41 f0       	breq	.+16     	; 0x324c <qtm_surface_cs_process+0x216>
    323c:	19 96       	adiw	r26, 0x09	; 9
    323e:	ed 90       	ld	r14, X+
    3240:	fc 90       	ld	r15, X
    3242:	1a 97       	sbiw	r26, 0x0a	; 10
    3244:	8e 0d       	add	r24, r14
    3246:	9f 1d       	adc	r25, r15
    3248:	96 95       	lsr	r25
    324a:	87 95       	ror	r24
    324c:	ef 81       	ldd	r30, Y+7	; 0x07
    324e:	f8 85       	ldd	r31, Y+8	; 0x08
    3250:	81 87       	std	Z+9, r24	; 0x09
    3252:	92 87       	std	Z+10, r25	; 0x0a
    3254:	d8 01       	movw	r26, r16
    3256:	19 96       	adiw	r26, 0x09	; 9
    3258:	4d 91       	ld	r20, X+
    325a:	5c 91       	ld	r21, X
    325c:	1a 97       	sbiw	r26, 0x0a	; 10
    325e:	84 17       	cp	r24, r20
    3260:	95 07       	cpc	r25, r21
    3262:	28 f0       	brcs	.+10     	; 0x326e <qtm_surface_cs_process+0x238>
    3264:	0a c0       	rjmp	.+20     	; 0x327a <qtm_surface_cs_process+0x244>
    3266:	82 e0       	ldi	r24, 0x02	; 2
    3268:	59 c1       	rjmp	.+690    	; 0x351c <qtm_surface_cs_process+0x4e6>
    326a:	8b e0       	ldi	r24, 0x0B	; 11
    326c:	57 c1       	rjmp	.+686    	; 0x351c <qtm_surface_cs_process+0x4e6>
    326e:	80 e0       	ldi	r24, 0x00	; 0
    3270:	ef 81       	ldd	r30, Y+7	; 0x07
    3272:	f8 85       	ldd	r31, Y+8	; 0x08
    3274:	80 83       	st	Z, r24
    3276:	80 e0       	ldi	r24, 0x00	; 0
    3278:	51 c1       	rjmp	.+674    	; 0x351c <qtm_surface_cs_process+0x4e6>
    327a:	31 11       	cpse	r19, r1
    327c:	04 c0       	rjmp	.+8      	; 0x3286 <qtm_surface_cs_process+0x250>
    327e:	81 e0       	ldi	r24, 0x01	; 1
    3280:	80 93 6c 44 	sts	0x446C, r24	; 0x80446c <new_contact_detected>
    3284:	02 c0       	rjmp	.+4      	; 0x328a <qtm_surface_cs_process+0x254>
    3286:	10 92 6c 44 	sts	0x446C, r1	; 0x80446c <new_contact_detected>
    328a:	f8 01       	movw	r30, r16
    328c:	42 81       	ldd	r20, Z+2	; 0x02
    328e:	35 80       	ldd	r3, Z+5	; 0x05
    3290:	80 91 6c 44 	lds	r24, 0x446C	; 0x80446c <new_contact_detected>
    3294:	81 11       	cpse	r24, r1
    3296:	7b c0       	rjmp	.+246    	; 0x338e <qtm_surface_cs_process+0x358>
    3298:	80 85       	ldd	r24, Z+8	; 0x08
    329a:	83 70       	andi	r24, 0x03	; 3
    329c:	28 2e       	mov	r2, r24
    329e:	b1 f4       	brne	.+44     	; 0x32cc <qtm_surface_cs_process+0x296>
    32a0:	95 01       	movw	r18, r10
    32a2:	b6 01       	movw	r22, r12
    32a4:	c8 01       	movw	r24, r16
    32a6:	0e 94 24 17 	call	0x2e48	; 0x2e48 <get_interpolated_position.isra.0>
    32aa:	af 81       	ldd	r26, Y+7	; 0x07
    32ac:	b8 85       	ldd	r27, Y+8	; 0x08
    32ae:	11 96       	adiw	r26, 0x01	; 1
    32b0:	8d 93       	st	X+, r24
    32b2:	9c 93       	st	X, r25
    32b4:	12 97       	sbiw	r26, 0x02	; 2
    32b6:	94 01       	movw	r18, r8
    32b8:	43 2d       	mov	r20, r3
    32ba:	b3 01       	movw	r22, r6
    32bc:	c8 01       	movw	r24, r16
    32be:	0e 94 24 17 	call	0x2e48	; 0x2e48 <get_interpolated_position.isra.0>
    32c2:	ef 81       	ldd	r30, Y+7	; 0x07
    32c4:	f8 85       	ldd	r31, Y+8	; 0x08
    32c6:	85 83       	std	Z+5, r24	; 0x05
    32c8:	96 83       	std	Z+6, r25	; 0x06
    32ca:	99 c0       	rjmp	.+306    	; 0x33fe <qtm_surface_cs_process+0x3c8>
    32cc:	af 81       	ldd	r26, Y+7	; 0x07
    32ce:	b8 85       	ldd	r27, Y+8	; 0x08
    32d0:	11 96       	adiw	r26, 0x01	; 1
    32d2:	ed 90       	ld	r14, X+
    32d4:	fc 90       	ld	r15, X
    32d6:	12 97       	sbiw	r26, 0x02	; 2
    32d8:	15 96       	adiw	r26, 0x05	; 5
    32da:	4d 90       	ld	r4, X+
    32dc:	5c 90       	ld	r5, X
    32de:	16 97       	sbiw	r26, 0x06	; 6
    32e0:	95 01       	movw	r18, r10
    32e2:	b6 01       	movw	r22, r12
    32e4:	c8 01       	movw	r24, r16
    32e6:	0e 94 24 17 	call	0x2e48	; 0x2e48 <get_interpolated_position.isra.0>
    32ea:	6c 01       	movw	r12, r24
    32ec:	94 01       	movw	r18, r8
    32ee:	43 2d       	mov	r20, r3
    32f0:	b3 01       	movw	r22, r6
    32f2:	c8 01       	movw	r24, r16
    32f4:	0e 94 24 17 	call	0x2e48	; 0x2e48 <get_interpolated_position.isra.0>
    32f8:	a7 01       	movw	r20, r14
    32fa:	4c 0d       	add	r20, r12
    32fc:	5d 1d       	adc	r21, r13
    32fe:	92 01       	movw	r18, r4
    3300:	28 0f       	add	r18, r24
    3302:	39 1f       	adc	r19, r25
    3304:	b1 e0       	ldi	r27, 0x01	; 1
    3306:	2b 12       	cpse	r2, r27
    3308:	07 c0       	rjmp	.+14     	; 0x3318 <qtm_surface_cs_process+0x2e2>
    330a:	b6 01       	movw	r22, r12
    330c:	66 0f       	add	r22, r22
    330e:	77 1f       	adc	r23, r23
    3310:	46 0f       	add	r20, r22
    3312:	57 1f       	adc	r21, r23
    3314:	bc 01       	movw	r22, r24
    3316:	0e c0       	rjmp	.+28     	; 0x3334 <qtm_surface_cs_process+0x2fe>
    3318:	e2 e0       	ldi	r30, 0x02	; 2
    331a:	2e 12       	cpse	r2, r30
    331c:	05 c0       	rjmp	.+10     	; 0x3328 <qtm_surface_cs_process+0x2f2>
    331e:	44 0f       	add	r20, r20
    3320:	55 1f       	adc	r21, r21
    3322:	22 0f       	add	r18, r18
    3324:	33 1f       	adc	r19, r19
    3326:	0a c0       	rjmp	.+20     	; 0x333c <qtm_surface_cs_process+0x306>
    3328:	b7 01       	movw	r22, r14
    332a:	66 0f       	add	r22, r22
    332c:	77 1f       	adc	r23, r23
    332e:	46 0f       	add	r20, r22
    3330:	57 1f       	adc	r21, r23
    3332:	b2 01       	movw	r22, r4
    3334:	66 0f       	add	r22, r22
    3336:	77 1f       	adc	r23, r23
    3338:	26 0f       	add	r18, r22
    333a:	37 1f       	adc	r19, r23
    333c:	ec 14       	cp	r14, r12
    333e:	fd 04       	cpc	r15, r13
    3340:	18 f4       	brcc	.+6      	; 0x3348 <qtm_surface_cs_process+0x312>
    3342:	4e 5f       	subi	r20, 0xFE	; 254
    3344:	5f 4f       	sbci	r21, 0xFF	; 255
    3346:	05 c0       	rjmp	.+10     	; 0x3352 <qtm_surface_cs_process+0x31c>
    3348:	ce 14       	cp	r12, r14
    334a:	df 04       	cpc	r13, r15
    334c:	10 f4       	brcc	.+4      	; 0x3352 <qtm_surface_cs_process+0x31c>
    334e:	41 50       	subi	r20, 0x01	; 1
    3350:	51 09       	sbc	r21, r1
    3352:	48 16       	cp	r4, r24
    3354:	59 06       	cpc	r5, r25
    3356:	18 f4       	brcc	.+6      	; 0x335e <qtm_surface_cs_process+0x328>
    3358:	2e 5f       	subi	r18, 0xFE	; 254
    335a:	3f 4f       	sbci	r19, 0xFF	; 255
    335c:	05 c0       	rjmp	.+10     	; 0x3368 <qtm_surface_cs_process+0x332>
    335e:	84 15       	cp	r24, r4
    3360:	95 05       	cpc	r25, r5
    3362:	10 f4       	brcc	.+4      	; 0x3368 <qtm_surface_cs_process+0x332>
    3364:	21 50       	subi	r18, 0x01	; 1
    3366:	31 09       	sbc	r19, r1
    3368:	56 95       	lsr	r21
    336a:	47 95       	ror	r20
    336c:	56 95       	lsr	r21
    336e:	47 95       	ror	r20
    3370:	af 81       	ldd	r26, Y+7	; 0x07
    3372:	b8 85       	ldd	r27, Y+8	; 0x08
    3374:	11 96       	adiw	r26, 0x01	; 1
    3376:	4d 93       	st	X+, r20
    3378:	5c 93       	st	X, r21
    337a:	12 97       	sbiw	r26, 0x02	; 2
    337c:	36 95       	lsr	r19
    337e:	27 95       	ror	r18
    3380:	36 95       	lsr	r19
    3382:	27 95       	ror	r18
    3384:	15 96       	adiw	r26, 0x05	; 5
    3386:	2d 93       	st	X+, r18
    3388:	3c 93       	st	X, r19
    338a:	16 97       	sbiw	r26, 0x06	; 6
    338c:	38 c0       	rjmp	.+112    	; 0x33fe <qtm_surface_cs_process+0x3c8>
    338e:	95 01       	movw	r18, r10
    3390:	b6 01       	movw	r22, r12
    3392:	c8 01       	movw	r24, r16
    3394:	0e 94 24 17 	call	0x2e48	; 0x2e48 <get_interpolated_position.isra.0>
    3398:	7c 01       	movw	r14, r24
    339a:	ef 81       	ldd	r30, Y+7	; 0x07
    339c:	f8 85       	ldd	r31, Y+8	; 0x08
    339e:	81 83       	std	Z+1, r24	; 0x01
    33a0:	92 83       	std	Z+2, r25	; 0x02
    33a2:	94 01       	movw	r18, r8
    33a4:	43 2d       	mov	r20, r3
    33a6:	b3 01       	movw	r22, r6
    33a8:	c8 01       	movw	r24, r16
    33aa:	0e 94 24 17 	call	0x2e48	; 0x2e48 <get_interpolated_position.isra.0>
    33ae:	af 81       	ldd	r26, Y+7	; 0x07
    33b0:	b8 85       	ldd	r27, Y+8	; 0x08
    33b2:	15 96       	adiw	r26, 0x05	; 5
    33b4:	8d 93       	st	X+, r24
    33b6:	9c 93       	st	X, r25
    33b8:	16 97       	sbiw	r26, 0x06	; 6
    33ba:	13 96       	adiw	r26, 0x03	; 3
    33bc:	ed 92       	st	X+, r14
    33be:	fc 92       	st	X, r15
    33c0:	14 97       	sbiw	r26, 0x04	; 4
    33c2:	17 96       	adiw	r26, 0x07	; 7
    33c4:	8d 93       	st	X+, r24
    33c6:	9c 93       	st	X, r25
    33c8:	18 97       	sbiw	r26, 0x08	; 8
    33ca:	e0 92 6d 44 	sts	0x446D, r14	; 0x80446d <median_filter_data_buffer>
    33ce:	f0 92 6e 44 	sts	0x446E, r15	; 0x80446e <median_filter_data_buffer+0x1>
    33d2:	e0 92 6f 44 	sts	0x446F, r14	; 0x80446f <median_filter_data_buffer+0x2>
    33d6:	f0 92 70 44 	sts	0x4470, r15	; 0x804470 <median_filter_data_buffer+0x3>
    33da:	e0 92 71 44 	sts	0x4471, r14	; 0x804471 <median_filter_data_buffer+0x4>
    33de:	f0 92 72 44 	sts	0x4472, r15	; 0x804472 <median_filter_data_buffer+0x5>
    33e2:	80 93 73 44 	sts	0x4473, r24	; 0x804473 <median_filter_data_buffer+0x6>
    33e6:	90 93 74 44 	sts	0x4474, r25	; 0x804474 <median_filter_data_buffer+0x7>
    33ea:	80 93 75 44 	sts	0x4475, r24	; 0x804475 <median_filter_data_buffer+0x8>
    33ee:	90 93 76 44 	sts	0x4476, r25	; 0x804476 <median_filter_data_buffer+0x9>
    33f2:	80 93 77 44 	sts	0x4477, r24	; 0x804477 <median_filter_data_buffer+0xa>
    33f6:	90 93 78 44 	sts	0x4478, r25	; 0x804478 <median_filter_data_buffer+0xb>
    33fa:	81 e8       	ldi	r24, 0x81	; 129
    33fc:	39 cf       	rjmp	.-398    	; 0x3270 <qtm_surface_cs_process+0x23a>
    33fe:	d8 01       	movw	r26, r16
    3400:	18 96       	adiw	r26, 0x08	; 8
    3402:	8c 91       	ld	r24, X
    3404:	ef 81       	ldd	r30, Y+7	; 0x07
    3406:	f8 85       	ldd	r31, Y+8	; 0x08
    3408:	61 81       	ldd	r22, Z+1	; 0x01
    340a:	72 81       	ldd	r23, Z+2	; 0x02
    340c:	f8 2f       	mov	r31, r24
    340e:	f0 71       	andi	r31, 0x10	; 16
    3410:	ef 2e       	mov	r14, r31
    3412:	84 fd       	sbrc	r24, 4
    3414:	02 c0       	rjmp	.+4      	; 0x341a <qtm_surface_cs_process+0x3e4>
    3416:	fb 01       	movw	r30, r22
    3418:	04 c0       	rjmp	.+8      	; 0x3422 <qtm_surface_cs_process+0x3ec>
    341a:	80 e0       	ldi	r24, 0x00	; 0
    341c:	0e 94 91 16 	call	0x2d22	; 0x2d22 <median_filter_update>
    3420:	fc 01       	movw	r30, r24
    3422:	af 81       	ldd	r26, Y+7	; 0x07
    3424:	b8 85       	ldd	r27, Y+8	; 0x08
    3426:	13 96       	adiw	r26, 0x03	; 3
    3428:	2d 91       	ld	r18, X+
    342a:	3c 91       	ld	r19, X
    342c:	14 97       	sbiw	r26, 0x04	; 4
    342e:	9c 91       	ld	r25, X
    3430:	e2 17       	cp	r30, r18
    3432:	f3 07       	cpc	r31, r19
    3434:	b0 f4       	brcc	.+44     	; 0x3462 <qtm_surface_cs_process+0x42c>
    3436:	93 fd       	sbrc	r25, 3
    3438:	0b c0       	rjmp	.+22     	; 0x3450 <qtm_surface_cs_process+0x41a>
    343a:	2e 1b       	sub	r18, r30
    343c:	3f 0b       	sbc	r19, r31
    343e:	d8 01       	movw	r26, r16
    3440:	17 96       	adiw	r26, 0x07	; 7
    3442:	4c 91       	ld	r20, X
    3444:	50 e0       	ldi	r21, 0x00	; 0
    3446:	42 17       	cp	r20, r18
    3448:	53 07       	cpc	r21, r19
    344a:	10 f0       	brcs	.+4      	; 0x3450 <qtm_surface_cs_process+0x41a>
    344c:	94 70       	andi	r25, 0x04	; 4
    344e:	16 c0       	rjmp	.+44     	; 0x347c <qtm_surface_cs_process+0x446>
    3450:	af 81       	ldd	r26, Y+7	; 0x07
    3452:	b8 85       	ldd	r27, Y+8	; 0x08
    3454:	13 96       	adiw	r26, 0x03	; 3
    3456:	ed 93       	st	X+, r30
    3458:	fc 93       	st	X, r31
    345a:	14 97       	sbiw	r26, 0x04	; 4
    345c:	9b e8       	ldi	r25, 0x8B	; 139
    345e:	f9 2e       	mov	r15, r25
    3460:	18 c0       	rjmp	.+48     	; 0x3492 <qtm_surface_cs_process+0x45c>
    3462:	92 fd       	sbrc	r25, 2
    3464:	0e c0       	rjmp	.+28     	; 0x3482 <qtm_surface_cs_process+0x44c>
    3466:	af 01       	movw	r20, r30
    3468:	42 1b       	sub	r20, r18
    346a:	53 0b       	sbc	r21, r19
    346c:	d8 01       	movw	r26, r16
    346e:	17 96       	adiw	r26, 0x07	; 7
    3470:	2c 91       	ld	r18, X
    3472:	30 e0       	ldi	r19, 0x00	; 0
    3474:	24 17       	cp	r18, r20
    3476:	35 07       	cpc	r19, r21
    3478:	20 f0       	brcs	.+8      	; 0x3482 <qtm_surface_cs_process+0x44c>
    347a:	98 70       	andi	r25, 0x08	; 8
    347c:	91 68       	ori	r25, 0x81	; 129
    347e:	f9 2e       	mov	r15, r25
    3480:	08 c0       	rjmp	.+16     	; 0x3492 <qtm_surface_cs_process+0x45c>
    3482:	af 81       	ldd	r26, Y+7	; 0x07
    3484:	b8 85       	ldd	r27, Y+8	; 0x08
    3486:	13 96       	adiw	r26, 0x03	; 3
    3488:	ed 93       	st	X+, r30
    348a:	fc 93       	st	X, r31
    348c:	14 97       	sbiw	r26, 0x04	; 4
    348e:	87 e8       	ldi	r24, 0x87	; 135
    3490:	f8 2e       	mov	r15, r24
    3492:	ef 81       	ldd	r30, Y+7	; 0x07
    3494:	f8 85       	ldd	r31, Y+8	; 0x08
    3496:	65 81       	ldd	r22, Z+5	; 0x05
    3498:	76 81       	ldd	r23, Z+6	; 0x06
    349a:	e1 10       	cpse	r14, r1
    349c:	02 c0       	rjmp	.+4      	; 0x34a2 <qtm_surface_cs_process+0x46c>
    349e:	fb 01       	movw	r30, r22
    34a0:	04 c0       	rjmp	.+8      	; 0x34aa <qtm_surface_cs_process+0x474>
    34a2:	81 e0       	ldi	r24, 0x01	; 1
    34a4:	0e 94 91 16 	call	0x2d22	; 0x2d22 <median_filter_update>
    34a8:	fc 01       	movw	r30, r24
    34aa:	af 81       	ldd	r26, Y+7	; 0x07
    34ac:	b8 85       	ldd	r27, Y+8	; 0x08
    34ae:	17 96       	adiw	r26, 0x07	; 7
    34b0:	2d 91       	ld	r18, X+
    34b2:	3c 91       	ld	r19, X
    34b4:	18 97       	sbiw	r26, 0x08	; 8
    34b6:	9c 91       	ld	r25, X
    34b8:	e2 17       	cp	r30, r18
    34ba:	f3 07       	cpc	r31, r19
    34bc:	b0 f4       	brcc	.+44     	; 0x34ea <qtm_surface_cs_process+0x4b4>
    34be:	95 fd       	sbrc	r25, 5
    34c0:	0b c0       	rjmp	.+22     	; 0x34d8 <qtm_surface_cs_process+0x4a2>
    34c2:	2e 1b       	sub	r18, r30
    34c4:	3f 0b       	sbc	r19, r31
    34c6:	d8 01       	movw	r26, r16
    34c8:	17 96       	adiw	r26, 0x07	; 7
    34ca:	4c 91       	ld	r20, X
    34cc:	50 e0       	ldi	r21, 0x00	; 0
    34ce:	42 17       	cp	r20, r18
    34d0:	53 07       	cpc	r21, r19
    34d2:	10 f0       	brcs	.+4      	; 0x34d8 <qtm_surface_cs_process+0x4a2>
    34d4:	90 71       	andi	r25, 0x10	; 16
    34d6:	16 c0       	rjmp	.+44     	; 0x3504 <qtm_surface_cs_process+0x4ce>
    34d8:	af 81       	ldd	r26, Y+7	; 0x07
    34da:	b8 85       	ldd	r27, Y+8	; 0x08
    34dc:	17 96       	adiw	r26, 0x07	; 7
    34de:	ed 93       	st	X+, r30
    34e0:	fc 93       	st	X, r31
    34e2:	18 97       	sbiw	r26, 0x08	; 8
    34e4:	8f 2d       	mov	r24, r15
    34e6:	82 62       	ori	r24, 0x22	; 34
    34e8:	c3 ce       	rjmp	.-634    	; 0x3270 <qtm_surface_cs_process+0x23a>
    34ea:	94 fd       	sbrc	r25, 4
    34ec:	0e c0       	rjmp	.+28     	; 0x350a <qtm_surface_cs_process+0x4d4>
    34ee:	af 01       	movw	r20, r30
    34f0:	42 1b       	sub	r20, r18
    34f2:	53 0b       	sbc	r21, r19
    34f4:	d8 01       	movw	r26, r16
    34f6:	17 96       	adiw	r26, 0x07	; 7
    34f8:	2c 91       	ld	r18, X
    34fa:	30 e0       	ldi	r19, 0x00	; 0
    34fc:	24 17       	cp	r18, r20
    34fe:	35 07       	cpc	r19, r21
    3500:	20 f0       	brcs	.+8      	; 0x350a <qtm_surface_cs_process+0x4d4>
    3502:	90 72       	andi	r25, 0x20	; 32
    3504:	89 2f       	mov	r24, r25
    3506:	8f 29       	or	r24, r15
    3508:	b3 ce       	rjmp	.-666    	; 0x3270 <qtm_surface_cs_process+0x23a>
    350a:	af 81       	ldd	r26, Y+7	; 0x07
    350c:	b8 85       	ldd	r27, Y+8	; 0x08
    350e:	17 96       	adiw	r26, 0x07	; 7
    3510:	ed 93       	st	X+, r30
    3512:	fc 93       	st	X, r31
    3514:	18 97       	sbiw	r26, 0x08	; 8
    3516:	8f 2d       	mov	r24, r15
    3518:	82 61       	ori	r24, 0x12	; 18
    351a:	aa ce       	rjmp	.-684    	; 0x3270 <qtm_surface_cs_process+0x23a>
    351c:	28 96       	adiw	r28, 0x08	; 8
    351e:	cd bf       	out	0x3d, r28	; 61
    3520:	de bf       	out	0x3e, r29	; 62
    3522:	df 91       	pop	r29
    3524:	cf 91       	pop	r28
    3526:	1f 91       	pop	r17
    3528:	0f 91       	pop	r16
    352a:	ff 90       	pop	r15
    352c:	ef 90       	pop	r14
    352e:	df 90       	pop	r13
    3530:	cf 90       	pop	r12
    3532:	bf 90       	pop	r11
    3534:	af 90       	pop	r10
    3536:	9f 90       	pop	r9
    3538:	8f 90       	pop	r8
    353a:	7f 90       	pop	r7
    353c:	6f 90       	pop	r6
    353e:	5f 90       	pop	r5
    3540:	4f 90       	pop	r4
    3542:	3f 90       	pop	r3
    3544:	2f 90       	pop	r2
    3546:	08 95       	ret

00003548 <qtm_init_surface_cs>:
    3548:	00 97       	sbiw	r24, 0x00	; 0
    354a:	91 f0       	breq	.+36     	; 0x3570 <qtm_init_surface_cs+0x28>
    354c:	dc 01       	movw	r26, r24
    354e:	ed 91       	ld	r30, X+
    3550:	fc 91       	ld	r31, X
    3552:	30 97       	sbiw	r30, 0x00	; 0
    3554:	69 f0       	breq	.+26     	; 0x3570 <qtm_init_surface_cs+0x28>
    3556:	10 82       	st	Z, r1
    3558:	11 82       	std	Z+1, r1	; 0x01
    355a:	12 82       	std	Z+2, r1	; 0x02
    355c:	13 82       	std	Z+3, r1	; 0x03
    355e:	14 82       	std	Z+4, r1	; 0x04
    3560:	15 82       	std	Z+5, r1	; 0x05
    3562:	16 82       	std	Z+6, r1	; 0x06
    3564:	17 82       	std	Z+7, r1	; 0x07
    3566:	10 86       	std	Z+8, r1	; 0x08
    3568:	11 86       	std	Z+9, r1	; 0x09
    356a:	12 86       	std	Z+10, r1	; 0x0a
    356c:	80 e0       	ldi	r24, 0x00	; 0
    356e:	08 95       	ret
    3570:	8b e0       	ldi	r24, 0x0B	; 11
    3572:	08 95       	ret

00003574 <charge_share_test>:
    3574:	a0 91 c6 45 	lds	r26, 0x45C6	; 0x8045c6 <qtm_acquisition_control_working_set_ptr>
    3578:	b0 91 c7 45 	lds	r27, 0x45C7	; 0x8045c7 <qtm_acquisition_control_working_set_ptr+0x1>
    357c:	25 e0       	ldi	r18, 0x05	; 5
    357e:	ac 01       	movw	r20, r24
    3580:	24 9f       	mul	r18, r20
    3582:	c0 01       	movw	r24, r0
    3584:	25 9f       	mul	r18, r21
    3586:	90 0d       	add	r25, r0
    3588:	11 24       	eor	r1, r1
    358a:	14 96       	adiw	r26, 0x04	; 4
    358c:	ed 91       	ld	r30, X+
    358e:	fc 91       	ld	r31, X
    3590:	15 97       	sbiw	r26, 0x05	; 5
    3592:	e8 0f       	add	r30, r24
    3594:	f9 1f       	adc	r31, r25
    3596:	81 81       	ldd	r24, Z+1	; 0x01
    3598:	92 81       	ldd	r25, Z+2	; 0x02
    359a:	86 17       	cp	r24, r22
    359c:	97 07       	cpc	r25, r23
    359e:	81 f1       	breq	.+96     	; 0x3600 <charge_share_test+0x8c>
    35a0:	86 17       	cp	r24, r22
    35a2:	97 07       	cpc	r25, r23
    35a4:	18 f4       	brcc	.+6      	; 0x35ac <charge_share_test+0x38>
    35a6:	68 1b       	sub	r22, r24
    35a8:	79 0b       	sbc	r23, r25
    35aa:	04 c0       	rjmp	.+8      	; 0x35b4 <charge_share_test+0x40>
    35ac:	9c 01       	movw	r18, r24
    35ae:	26 1b       	sub	r18, r22
    35b0:	37 0b       	sbc	r19, r23
    35b2:	b9 01       	movw	r22, r18
    35b4:	ed 91       	ld	r30, X+
    35b6:	fc 91       	ld	r31, X
    35b8:	82 81       	ldd	r24, Z+2	; 0x02
    35ba:	80 34       	cpi	r24, 0x40	; 64
    35bc:	11 f4       	brne	.+4      	; 0x35c2 <charge_share_test+0x4e>
    35be:	76 95       	lsr	r23
    35c0:	67 95       	ror	r22
    35c2:	65 38       	cpi	r22, 0x85	; 133
    35c4:	71 05       	cpc	r23, r1
    35c6:	d0 f4       	brcc	.+52     	; 0x35fc <charge_share_test+0x88>
    35c8:	66 30       	cpi	r22, 0x06	; 6
    35ca:	71 05       	cpc	r23, r1
    35cc:	c8 f0       	brcs	.+50     	; 0x3600 <charge_share_test+0x8c>
    35ce:	e3 81       	ldd	r30, Z+3	; 0x03
    35d0:	e0 73       	andi	r30, 0x30	; 48
    35d2:	f0 e0       	ldi	r31, 0x00	; 0
    35d4:	83 e0       	ldi	r24, 0x03	; 3
    35d6:	f6 95       	lsr	r31
    35d8:	e7 95       	ror	r30
    35da:	8a 95       	dec	r24
    35dc:	e1 f7       	brne	.-8      	; 0x35d6 <charge_share_test+0x62>
    35de:	ed 50       	subi	r30, 0x0D	; 13
    35e0:	fd 4b       	sbci	r31, 0xBD	; 189
    35e2:	80 81       	ld	r24, Z
    35e4:	91 81       	ldd	r25, Z+1	; 0x01
    35e6:	68 9f       	mul	r22, r24
    35e8:	90 01       	movw	r18, r0
    35ea:	69 9f       	mul	r22, r25
    35ec:	30 0d       	add	r19, r0
    35ee:	78 9f       	mul	r23, r24
    35f0:	30 0d       	add	r19, r0
    35f2:	11 24       	eor	r1, r1
    35f4:	81 e0       	ldi	r24, 0x01	; 1
    35f6:	23 2b       	or	r18, r19
    35f8:	21 f4       	brne	.+8      	; 0x3602 <charge_share_test+0x8e>
    35fa:	02 c0       	rjmp	.+4      	; 0x3600 <charge_share_test+0x8c>
    35fc:	81 e0       	ldi	r24, 0x01	; 1
    35fe:	08 95       	ret
    3600:	80 e0       	ldi	r24, 0x00	; 0
    3602:	08 95       	ret

00003604 <select_next_channel_to_measure>:
    3604:	80 91 7e 44 	lds	r24, 0x447E	; 0x80447e <current_measure_channel>
    3608:	90 91 7f 44 	lds	r25, 0x447F	; 0x80447f <current_measure_channel+0x1>
    360c:	a0 91 c6 45 	lds	r26, 0x45C6	; 0x8045c6 <qtm_acquisition_control_working_set_ptr>
    3610:	b0 91 c7 45 	lds	r27, 0x45C7	; 0x8045c7 <qtm_acquisition_control_working_set_ptr+0x1>
    3614:	ed 91       	ld	r30, X+
    3616:	fc 91       	ld	r31, X
    3618:	11 97       	sbiw	r26, 0x01	; 1
    361a:	40 81       	ld	r20, Z
    361c:	51 81       	ldd	r21, Z+1	; 0x01
    361e:	25 e0       	ldi	r18, 0x05	; 5
    3620:	28 9f       	mul	r18, r24
    3622:	b0 01       	movw	r22, r0
    3624:	29 9f       	mul	r18, r25
    3626:	70 0d       	add	r23, r0
    3628:	11 24       	eor	r1, r1
    362a:	20 e0       	ldi	r18, 0x00	; 0
    362c:	30 e0       	ldi	r19, 0x00	; 0
    362e:	84 17       	cp	r24, r20
    3630:	95 07       	cpc	r25, r21
    3632:	a8 f4       	brcc	.+42     	; 0x365e <select_next_channel_to_measure+0x5a>
    3634:	14 96       	adiw	r26, 0x04	; 4
    3636:	ed 91       	ld	r30, X+
    3638:	fc 91       	ld	r31, X
    363a:	15 97       	sbiw	r26, 0x05	; 5
    363c:	e2 0f       	add	r30, r18
    363e:	f3 1f       	adc	r31, r19
    3640:	e6 0f       	add	r30, r22
    3642:	f7 1f       	adc	r31, r23
    3644:	e0 81       	ld	r30, Z
    3646:	2b 5f       	subi	r18, 0xFB	; 251
    3648:	3f 4f       	sbci	r19, 0xFF	; 255
    364a:	e0 fd       	sbrc	r30, 0
    364c:	02 c0       	rjmp	.+4      	; 0x3652 <select_next_channel_to_measure+0x4e>
    364e:	01 96       	adiw	r24, 0x01	; 1
    3650:	ee cf       	rjmp	.-36     	; 0x362e <select_next_channel_to_measure+0x2a>
    3652:	80 93 7e 44 	sts	0x447E, r24	; 0x80447e <current_measure_channel>
    3656:	90 93 7f 44 	sts	0x447F, r25	; 0x80447f <current_measure_channel+0x1>
    365a:	80 e0       	ldi	r24, 0x00	; 0
    365c:	08 95       	ret
    365e:	10 92 7e 44 	sts	0x447E, r1	; 0x80447e <current_measure_channel>
    3662:	10 92 7f 44 	sts	0x447F, r1	; 0x80447f <current_measure_channel+0x1>
    3666:	81 e0       	ldi	r24, 0x01	; 1
    3668:	08 95       	ret

0000366a <qtm_measure_node>:
    366a:	af 92       	push	r10
    366c:	bf 92       	push	r11
    366e:	cf 92       	push	r12
    3670:	df 92       	push	r13
    3672:	ef 92       	push	r14
    3674:	ff 92       	push	r15
    3676:	0f 93       	push	r16
    3678:	1f 93       	push	r17
    367a:	cf 93       	push	r28
    367c:	df 93       	push	r29
    367e:	7c 01       	movw	r14, r24
    3680:	e0 91 c6 45 	lds	r30, 0x45C6	; 0x8045c6 <qtm_acquisition_control_working_set_ptr>
    3684:	f0 91 c7 45 	lds	r31, 0x45C7	; 0x8045c7 <qtm_acquisition_control_working_set_ptr+0x1>
    3688:	84 e1       	ldi	r24, 0x14	; 20
    368a:	8e 9d       	mul	r24, r14
    368c:	e0 01       	movw	r28, r0
    368e:	8f 9d       	mul	r24, r15
    3690:	d0 0d       	add	r29, r0
    3692:	11 24       	eor	r1, r1
    3694:	a2 81       	ldd	r26, Z+2	; 0x02
    3696:	b3 81       	ldd	r27, Z+3	; 0x03
    3698:	ac 0f       	add	r26, r28
    369a:	bd 1f       	adc	r27, r29
    369c:	18 96       	adiw	r26, 0x08	; 8
    369e:	2c 91       	ld	r18, X
    36a0:	18 97       	sbiw	r26, 0x08	; 8
    36a2:	19 96       	adiw	r26, 0x09	; 9
    36a4:	3c 91       	ld	r19, X
    36a6:	19 97       	sbiw	r26, 0x09	; 9
    36a8:	1a 96       	adiw	r26, 0x0a	; 10
    36aa:	4c 91       	ld	r20, X
    36ac:	1a 97       	sbiw	r26, 0x0a	; 10
    36ae:	1b 96       	adiw	r26, 0x0b	; 11
    36b0:	5c 91       	ld	r21, X
    36b2:	1b 97       	sbiw	r26, 0x0b	; 11
    36b4:	1c 96       	adiw	r26, 0x0c	; 12
    36b6:	6c 91       	ld	r22, X
    36b8:	1c 97       	sbiw	r26, 0x0c	; 12
    36ba:	1d 96       	adiw	r26, 0x0d	; 13
    36bc:	7c 91       	ld	r23, X
    36be:	1d 97       	sbiw	r26, 0x0d	; 13
    36c0:	1e 96       	adiw	r26, 0x0e	; 14
    36c2:	8c 91       	ld	r24, X
    36c4:	1e 97       	sbiw	r26, 0x0e	; 14
    36c6:	1f 96       	adiw	r26, 0x0f	; 15
    36c8:	9c 91       	ld	r25, X
    36ca:	20 93 f0 07 	sts	0x07F0, r18	; 0x8007f0 <__TEXT_REGION_LENGTH__+0x7e07f0>
    36ce:	08 e0       	ldi	r16, 0x08	; 8
    36d0:	0e 94 98 21 	call	0x4330	; 0x4330 <__lshrdi3>
    36d4:	20 93 f1 07 	sts	0x07F1, r18	; 0x8007f1 <__TEXT_REGION_LENGTH__+0x7e07f1>
    36d8:	0e 94 98 21 	call	0x4330	; 0x4330 <__lshrdi3>
    36dc:	20 93 f2 07 	sts	0x07F2, r18	; 0x8007f2 <__TEXT_REGION_LENGTH__+0x7e07f2>
    36e0:	0e 94 98 21 	call	0x4330	; 0x4330 <__lshrdi3>
    36e4:	20 93 f3 07 	sts	0x07F3, r18	; 0x8007f3 <__TEXT_REGION_LENGTH__+0x7e07f3>
    36e8:	0e 94 98 21 	call	0x4330	; 0x4330 <__lshrdi3>
    36ec:	20 93 f4 07 	sts	0x07F4, r18	; 0x8007f4 <__TEXT_REGION_LENGTH__+0x7e07f4>
    36f0:	0e 94 98 21 	call	0x4330	; 0x4330 <__lshrdi3>
    36f4:	20 93 f5 07 	sts	0x07F5, r18	; 0x8007f5 <__TEXT_REGION_LENGTH__+0x7e07f5>
    36f8:	10 92 e0 07 	sts	0x07E0, r1	; 0x8007e0 <__TEXT_REGION_LENGTH__+0x7e07e0>
    36fc:	a0 81       	ld	r26, Z
    36fe:	b1 81       	ldd	r27, Z+1	; 0x01
    3700:	12 96       	adiw	r26, 0x02	; 2
    3702:	8c 91       	ld	r24, X
    3704:	80 38       	cpi	r24, 0x80	; 128
    3706:	09 f4       	brne	.+2      	; 0x370a <qtm_measure_node+0xa0>
    3708:	4f c0       	rjmp	.+158    	; 0x37a8 <qtm_measure_node+0x13e>
    370a:	a2 81       	ldd	r26, Z+2	; 0x02
    370c:	b3 81       	ldd	r27, Z+3	; 0x03
    370e:	ac 0f       	add	r26, r28
    3710:	bd 1f       	adc	r27, r29
    3712:	cc 90       	ld	r12, X
    3714:	11 96       	adiw	r26, 0x01	; 1
    3716:	3c 91       	ld	r19, X
    3718:	11 97       	sbiw	r26, 0x01	; 1
    371a:	12 96       	adiw	r26, 0x02	; 2
    371c:	4c 91       	ld	r20, X
    371e:	12 97       	sbiw	r26, 0x02	; 2
    3720:	13 96       	adiw	r26, 0x03	; 3
    3722:	5c 91       	ld	r21, X
    3724:	13 97       	sbiw	r26, 0x03	; 3
    3726:	14 96       	adiw	r26, 0x04	; 4
    3728:	6c 91       	ld	r22, X
    372a:	14 97       	sbiw	r26, 0x04	; 4
    372c:	15 96       	adiw	r26, 0x05	; 5
    372e:	7c 91       	ld	r23, X
    3730:	15 97       	sbiw	r26, 0x05	; 5
    3732:	16 96       	adiw	r26, 0x06	; 6
    3734:	8c 91       	ld	r24, X
    3736:	16 97       	sbiw	r26, 0x06	; 6
    3738:	17 96       	adiw	r26, 0x07	; 7
    373a:	9c 91       	ld	r25, X
    373c:	c0 92 e8 07 	sts	0x07E8, r12	; 0x8007e8 <__TEXT_REGION_LENGTH__+0x7e07e8>
    3740:	2c 2d       	mov	r18, r12
    3742:	0e 94 98 21 	call	0x4330	; 0x4330 <__lshrdi3>
    3746:	d2 2e       	mov	r13, r18
    3748:	20 93 e9 07 	sts	0x07E9, r18	; 0x8007e9 <__TEXT_REGION_LENGTH__+0x7e07e9>
    374c:	0e 94 98 21 	call	0x4330	; 0x4330 <__lshrdi3>
    3750:	12 2f       	mov	r17, r18
    3752:	20 93 ea 07 	sts	0x07EA, r18	; 0x8007ea <__TEXT_REGION_LENGTH__+0x7e07ea>
    3756:	0e 94 98 21 	call	0x4330	; 0x4330 <__lshrdi3>
    375a:	a2 2e       	mov	r10, r18
    375c:	20 93 eb 07 	sts	0x07EB, r18	; 0x8007eb <__TEXT_REGION_LENGTH__+0x7e07eb>
    3760:	0e 94 98 21 	call	0x4330	; 0x4330 <__lshrdi3>
    3764:	b2 2e       	mov	r11, r18
    3766:	20 93 ec 07 	sts	0x07EC, r18	; 0x8007ec <__TEXT_REGION_LENGTH__+0x7e07ec>
    376a:	0e 94 98 21 	call	0x4330	; 0x4330 <__lshrdi3>
    376e:	20 93 ed 07 	sts	0x07ED, r18	; 0x8007ed <__TEXT_REGION_LENGTH__+0x7e07ed>
    3772:	80 81       	ld	r24, Z
    3774:	91 81       	ldd	r25, Z+1	; 0x01
    3776:	dc 01       	movw	r26, r24
    3778:	12 96       	adiw	r26, 0x02	; 2
    377a:	8c 91       	ld	r24, X
    377c:	81 38       	cpi	r24, 0x81	; 129
    377e:	21 f4       	brne	.+8      	; 0x3788 <qtm_measure_node+0x11e>
    3780:	81 e0       	ldi	r24, 0x01	; 1
    3782:	80 93 e0 07 	sts	0x07E0, r24	; 0x8007e0 <__TEXT_REGION_LENGTH__+0x7e07e0>
    3786:	10 c0       	rjmp	.+32     	; 0x37a8 <qtm_measure_node+0x13e>
    3788:	82 38       	cpi	r24, 0x82	; 130
    378a:	71 f4       	brne	.+28     	; 0x37a8 <qtm_measure_node+0x13e>
    378c:	10 92 e0 07 	sts	0x07E0, r1	; 0x8007e0 <__TEXT_REGION_LENGTH__+0x7e07e0>
    3790:	c0 92 f8 07 	sts	0x07F8, r12	; 0x8007f8 <__TEXT_REGION_LENGTH__+0x7e07f8>
    3794:	d0 92 f9 07 	sts	0x07F9, r13	; 0x8007f9 <__TEXT_REGION_LENGTH__+0x7e07f9>
    3798:	10 93 fa 07 	sts	0x07FA, r17	; 0x8007fa <__TEXT_REGION_LENGTH__+0x7e07fa>
    379c:	a0 92 fb 07 	sts	0x07FB, r10	; 0x8007fb <__TEXT_REGION_LENGTH__+0x7e07fb>
    37a0:	b0 92 fc 07 	sts	0x07FC, r11	; 0x8007fc <__TEXT_REGION_LENGTH__+0x7e07fc>
    37a4:	20 93 fd 07 	sts	0x07FD, r18	; 0x8007fd <__TEXT_REGION_LENGTH__+0x7e07fd>
    37a8:	45 e0       	ldi	r20, 0x05	; 5
    37aa:	4e 9d       	mul	r20, r14
    37ac:	c0 01       	movw	r24, r0
    37ae:	4f 9d       	mul	r20, r15
    37b0:	90 0d       	add	r25, r0
    37b2:	11 24       	eor	r1, r1
    37b4:	a4 81       	ldd	r26, Z+4	; 0x04
    37b6:	b5 81       	ldd	r27, Z+5	; 0x05
    37b8:	a8 0f       	add	r26, r24
    37ba:	b9 1f       	adc	r27, r25
    37bc:	13 96       	adiw	r26, 0x03	; 3
    37be:	2d 91       	ld	r18, X+
    37c0:	3c 91       	ld	r19, X
    37c2:	14 97       	sbiw	r26, 0x04	; 4
    37c4:	33 70       	andi	r19, 0x03	; 3
    37c6:	20 93 e4 07 	sts	0x07E4, r18	; 0x8007e4 <__TEXT_REGION_LENGTH__+0x7e07e4>
    37ca:	30 93 e5 07 	sts	0x07E5, r19	; 0x8007e5 <__TEXT_REGION_LENGTH__+0x7e07e5>
    37ce:	a4 81       	ldd	r26, Z+4	; 0x04
    37d0:	b5 81       	ldd	r27, Z+5	; 0x05
    37d2:	a8 0f       	add	r26, r24
    37d4:	b9 1f       	adc	r27, r25
    37d6:	2c 91       	ld	r18, X
    37d8:	21 fd       	sbrc	r18, 1
    37da:	4c 93       	st	X, r20
    37dc:	24 81       	ldd	r18, Z+4	; 0x04
    37de:	35 81       	ldd	r19, Z+5	; 0x05
    37e0:	d9 01       	movw	r26, r18
    37e2:	a8 0f       	add	r26, r24
    37e4:	b9 1f       	adc	r27, r25
    37e6:	8c 91       	ld	r24, X
    37e8:	8c 71       	andi	r24, 0x1C	; 28
    37ea:	69 f4       	brne	.+26     	; 0x3806 <qtm_measure_node+0x19c>
    37ec:	a2 81       	ldd	r26, Z+2	; 0x02
    37ee:	b3 81       	ldd	r27, Z+3	; 0x03
    37f0:	ac 0f       	add	r26, r28
    37f2:	bd 1f       	adc	r27, r29
    37f4:	52 96       	adiw	r26, 0x12	; 18
    37f6:	ac 91       	ld	r26, X
    37f8:	a2 95       	swap	r26
    37fa:	af 70       	andi	r26, 0x0F	; 15
    37fc:	b0 e0       	ldi	r27, 0x00	; 0
    37fe:	a5 50       	subi	r26, 0x05	; 5
    3800:	bd 4b       	sbci	r27, 0xBD	; 189
    3802:	8c 91       	ld	r24, X
    3804:	01 c0       	rjmp	.+2      	; 0x3808 <qtm_measure_node+0x19e>
    3806:	8f e1       	ldi	r24, 0x1F	; 31
    3808:	80 93 e6 07 	sts	0x07E6, r24	; 0x8007e6 <__TEXT_REGION_LENGTH__+0x7e07e6>
    380c:	a2 81       	ldd	r26, Z+2	; 0x02
    380e:	b3 81       	ldd	r27, Z+3	; 0x03
    3810:	ac 0f       	add	r26, r28
    3812:	bd 1f       	adc	r27, r29
    3814:	50 96       	adiw	r26, 0x10	; 16
    3816:	8c 91       	ld	r24, X
    3818:	8b 37       	cpi	r24, 0x7B	; 123
    381a:	10 f4       	brcc	.+4      	; 0x3820 <qtm_measure_node+0x1b6>
    381c:	8c 5f       	subi	r24, 0xFC	; 252
    381e:	01 c0       	rjmp	.+2      	; 0x3822 <qtm_measure_node+0x1b8>
    3820:	8f e7       	ldi	r24, 0x7F	; 127
    3822:	80 93 c4 07 	sts	0x07C4, r24	; 0x8007c4 <__TEXT_REGION_LENGTH__+0x7e07c4>
    3826:	a2 81       	ldd	r26, Z+2	; 0x02
    3828:	b3 81       	ldd	r27, Z+3	; 0x03
    382a:	ac 0f       	add	r26, r28
    382c:	bd 1f       	adc	r27, r29
    382e:	53 96       	adiw	r26, 0x13	; 19
    3830:	8c 91       	ld	r24, X
    3832:	80 93 c7 07 	sts	0x07C7, r24	; 0x8007c7 <__TEXT_REGION_LENGTH__+0x7e07c7>
    3836:	a2 81       	ldd	r26, Z+2	; 0x02
    3838:	b3 81       	ldd	r27, Z+3	; 0x03
    383a:	ac 0f       	add	r26, r28
    383c:	bd 1f       	adc	r27, r29
    383e:	51 96       	adiw	r26, 0x11	; 17
    3840:	8c 91       	ld	r24, X
    3842:	82 95       	swap	r24
    3844:	8f 70       	andi	r24, 0x0F	; 15
    3846:	80 93 c9 07 	sts	0x07C9, r24	; 0x8007c9 <__TEXT_REGION_LENGTH__+0x7e07c9>
    384a:	82 81       	ldd	r24, Z+2	; 0x02
    384c:	93 81       	ldd	r25, Z+3	; 0x03
    384e:	c8 0f       	add	r28, r24
    3850:	d9 1f       	adc	r29, r25
    3852:	89 89       	ldd	r24, Y+17	; 0x11
    3854:	8f 70       	andi	r24, 0x0F	; 15
    3856:	80 68       	ori	r24, 0x80	; 128
    3858:	80 93 c2 07 	sts	0x07C2, r24	; 0x8007c2 <__TEXT_REGION_LENGTH__+0x7e07c2>
    385c:	81 e8       	ldi	r24, 0x81	; 129
    385e:	80 93 c0 07 	sts	0x07C0, r24	; 0x8007c0 <__TEXT_REGION_LENGTH__+0x7e07c0>
    3862:	81 e0       	ldi	r24, 0x01	; 1
    3864:	80 93 d0 07 	sts	0x07D0, r24	; 0x8007d0 <__TEXT_REGION_LENGTH__+0x7e07d0>
    3868:	df 91       	pop	r29
    386a:	cf 91       	pop	r28
    386c:	1f 91       	pop	r17
    386e:	0f 91       	pop	r16
    3870:	ff 90       	pop	r15
    3872:	ef 90       	pop	r14
    3874:	df 90       	pop	r13
    3876:	cf 90       	pop	r12
    3878:	bf 90       	pop	r11
    387a:	af 90       	pop	r10
    387c:	08 95       	ret

0000387e <qtm_acquisition_process>:
    387e:	2f 92       	push	r2
    3880:	3f 92       	push	r3
    3882:	4f 92       	push	r4
    3884:	5f 92       	push	r5
    3886:	6f 92       	push	r6
    3888:	7f 92       	push	r7
    388a:	8f 92       	push	r8
    388c:	9f 92       	push	r9
    388e:	af 92       	push	r10
    3890:	bf 92       	push	r11
    3892:	cf 92       	push	r12
    3894:	df 92       	push	r13
    3896:	ef 92       	push	r14
    3898:	ff 92       	push	r15
    389a:	0f 93       	push	r16
    389c:	1f 93       	push	r17
    389e:	cf 93       	push	r28
    38a0:	df 93       	push	r29
    38a2:	cd b7       	in	r28, 0x3d	; 61
    38a4:	de b7       	in	r29, 0x3e	; 62
    38a6:	25 97       	sbiw	r28, 0x05	; 5
    38a8:	cd bf       	out	0x3d, r28	; 61
    38aa:	de bf       	out	0x3e, r29	; 62
    38ac:	80 91 7d 44 	lds	r24, 0x447D	; 0x80447d <touch_seq_lib_state>
    38b0:	88 23       	and	r24, r24
    38b2:	09 f4       	brne	.+2      	; 0x38b6 <qtm_acquisition_process+0x38>
    38b4:	24 c2       	rjmp	.+1096   	; 0x3cfe <qtm_acquisition_process+0x480>
    38b6:	00 91 c6 45 	lds	r16, 0x45C6	; 0x8045c6 <qtm_acquisition_control_working_set_ptr>
    38ba:	10 91 c7 45 	lds	r17, 0x45C7	; 0x8045c7 <qtm_acquisition_control_working_set_ptr+0x1>
    38be:	20 91 c8 45 	lds	r18, 0x45C8	; 0x8045c8 <qtm_raw_data_measurements_ptr>
    38c2:	30 91 c9 45 	lds	r19, 0x45C9	; 0x8045c9 <qtm_raw_data_measurements_ptr+0x1>
    38c6:	2a 83       	std	Y+2, r18	; 0x02
    38c8:	3b 83       	std	Y+3, r19	; 0x03
    38ca:	c1 2c       	mov	r12, r1
    38cc:	d1 2c       	mov	r13, r1
    38ce:	a1 2c       	mov	r10, r1
    38d0:	b1 2c       	mov	r11, r1
    38d2:	21 2c       	mov	r2, r1
    38d4:	31 2c       	mov	r3, r1
    38d6:	19 82       	std	Y+1, r1	; 0x01
    38d8:	44 24       	eor	r4, r4
    38da:	4a 94       	dec	r4
    38dc:	55 24       	eor	r5, r5
    38de:	53 94       	inc	r5
    38e0:	77 24       	eor	r7, r7
    38e2:	73 94       	inc	r7
    38e4:	d8 01       	movw	r26, r16
    38e6:	8d 90       	ld	r8, X+
    38e8:	9c 90       	ld	r9, X
    38ea:	f4 01       	movw	r30, r8
    38ec:	80 81       	ld	r24, Z
    38ee:	91 81       	ldd	r25, Z+1	; 0x01
    38f0:	28 16       	cp	r2, r24
    38f2:	39 06       	cpc	r3, r25
    38f4:	08 f0       	brcs	.+2      	; 0x38f8 <qtm_acquisition_process+0x7a>
    38f6:	ff c1       	rjmp	.+1022   	; 0x3cf6 <qtm_acquisition_process+0x478>
    38f8:	aa 81       	ldd	r26, Y+2	; 0x02
    38fa:	bb 81       	ldd	r27, Y+3	; 0x03
    38fc:	4d 91       	ld	r20, X+
    38fe:	5d 91       	ld	r21, X+
    3900:	aa 83       	std	Y+2, r26	; 0x02
    3902:	bb 83       	std	Y+3, r27	; 0x03
    3904:	f8 01       	movw	r30, r16
    3906:	e4 80       	ldd	r14, Z+4	; 0x04
    3908:	f5 80       	ldd	r15, Z+5	; 0x05
    390a:	ea 0c       	add	r14, r10
    390c:	fb 1c       	adc	r15, r11
    390e:	d7 01       	movw	r26, r14
    3910:	2c 91       	ld	r18, X
    3912:	82 2f       	mov	r24, r18
    3914:	8c 71       	andi	r24, 0x1C	; 28
    3916:	90 e0       	ldi	r25, 0x00	; 0
    3918:	96 95       	lsr	r25
    391a:	87 95       	ror	r24
    391c:	96 95       	lsr	r25
    391e:	87 95       	ror	r24
    3920:	82 30       	cpi	r24, 0x02	; 2
    3922:	91 05       	cpc	r25, r1
    3924:	09 f4       	brne	.+2      	; 0x3928 <qtm_acquisition_process+0xaa>
    3926:	81 c1       	rjmp	.+770    	; 0x3c2a <qtm_acquisition_process+0x3ac>
    3928:	28 f4       	brcc	.+10     	; 0x3934 <qtm_acquisition_process+0xb6>
    392a:	00 97       	sbiw	r24, 0x00	; 0
    392c:	59 f0       	breq	.+22     	; 0x3944 <qtm_acquisition_process+0xc6>
    392e:	01 97       	sbiw	r24, 0x01	; 1
    3930:	01 f1       	breq	.+64     	; 0x3972 <qtm_acquisition_process+0xf4>
    3932:	d7 c1       	rjmp	.+942    	; 0x3ce2 <qtm_acquisition_process+0x464>
    3934:	83 30       	cpi	r24, 0x03	; 3
    3936:	91 05       	cpc	r25, r1
    3938:	09 f4       	brne	.+2      	; 0x393c <qtm_acquisition_process+0xbe>
    393a:	3a c1       	rjmp	.+628    	; 0x3bb0 <qtm_acquisition_process+0x332>
    393c:	04 97       	sbiw	r24, 0x04	; 4
    393e:	09 f4       	brne	.+2      	; 0x3942 <qtm_acquisition_process+0xc4>
    3940:	c2 c0       	rjmp	.+388    	; 0x3ac6 <qtm_acquisition_process+0x248>
    3942:	cf c1       	rjmp	.+926    	; 0x3ce2 <qtm_acquisition_process+0x464>
    3944:	02 80       	ldd	r0, Z+2	; 0x02
    3946:	f3 81       	ldd	r31, Z+3	; 0x03
    3948:	e0 2d       	mov	r30, r0
    394a:	ec 0d       	add	r30, r12
    394c:	fd 1d       	adc	r31, r13
    394e:	92 89       	ldd	r25, Z+18	; 0x12
    3950:	9f 70       	andi	r25, 0x0F	; 15
    3952:	83 89       	ldd	r24, Z+19	; 0x13
    3954:	98 17       	cp	r25, r24
    3956:	10 f4       	brcc	.+4      	; 0x395c <qtm_acquisition_process+0xde>
    3958:	89 1b       	sub	r24, r25
    395a:	01 c0       	rjmp	.+2      	; 0x395e <qtm_acquisition_process+0xe0>
    395c:	80 e0       	ldi	r24, 0x00	; 0
    395e:	9a 01       	movw	r18, r20
    3960:	02 c0       	rjmp	.+4      	; 0x3966 <qtm_acquisition_process+0xe8>
    3962:	36 95       	lsr	r19
    3964:	27 95       	ror	r18
    3966:	8a 95       	dec	r24
    3968:	e2 f7       	brpl	.-8      	; 0x3962 <qtm_acquisition_process+0xe4>
    396a:	f7 01       	movw	r30, r14
    396c:	21 83       	std	Z+1, r18	; 0x01
    396e:	32 83       	std	Z+2, r19	; 0x02
    3970:	b8 c1       	rjmp	.+880    	; 0x3ce2 <qtm_acquisition_process+0x464>
    3972:	82 81       	ldd	r24, Z+2	; 0x02
    3974:	93 81       	ldd	r25, Z+3	; 0x03
    3976:	fc 01       	movw	r30, r24
    3978:	ec 0d       	add	r30, r12
    397a:	fd 1d       	adc	r31, r13
    397c:	ba 01       	movw	r22, r20
    397e:	03 88       	ldd	r0, Z+19	; 0x13
    3980:	02 c0       	rjmp	.+4      	; 0x3986 <qtm_acquisition_process+0x108>
    3982:	76 95       	lsr	r23
    3984:	67 95       	ror	r22
    3986:	0a 94       	dec	r0
    3988:	e2 f7       	brpl	.-8      	; 0x3982 <qtm_acquisition_process+0x104>
    398a:	6c 83       	std	Y+4, r22	; 0x04
    398c:	7d 83       	std	Y+5, r23	; 0x05
    398e:	d7 01       	movw	r26, r14
    3990:	11 96       	adiw	r26, 0x01	; 1
    3992:	6d 93       	st	X+, r22
    3994:	7c 93       	st	X, r23
    3996:	12 97       	sbiw	r26, 0x02	; 2
    3998:	13 96       	adiw	r26, 0x03	; 3
    399a:	8d 91       	ld	r24, X+
    399c:	9c 91       	ld	r25, X
    399e:	14 97       	sbiw	r26, 0x04	; 4
    39a0:	61 15       	cp	r22, r1
    39a2:	b2 e0       	ldi	r27, 0x02	; 2
    39a4:	7b 07       	cpc	r23, r27
    39a6:	28 f0       	brcs	.+10     	; 0x39b2 <qtm_acquisition_process+0x134>
    39a8:	db 01       	movw	r26, r22
    39aa:	af 5f       	subi	r26, 0xFF	; 255
    39ac:	b1 40       	sbci	r27, 0x01	; 1
    39ae:	31 e0       	ldi	r19, 0x01	; 1
    39b0:	06 c0       	rjmp	.+12     	; 0x39be <qtm_acquisition_process+0x140>
    39b2:	d2 01       	movw	r26, r4
    39b4:	4c 81       	ldd	r20, Y+4	; 0x04
    39b6:	5d 81       	ldd	r21, Y+5	; 0x05
    39b8:	a4 1b       	sub	r26, r20
    39ba:	b5 0b       	sbc	r27, r21
    39bc:	30 e0       	ldi	r19, 0x00	; 0
    39be:	bd 01       	movw	r22, r26
    39c0:	76 95       	lsr	r23
    39c2:	67 95       	ror	r22
    39c4:	d4 01       	movw	r26, r8
    39c6:	12 96       	adiw	r26, 0x02	; 2
    39c8:	4c 91       	ld	r20, X
    39ca:	40 34       	cpi	r20, 0x40	; 64
    39cc:	09 f0       	breq	.+2      	; 0x39d0 <qtm_acquisition_process+0x152>
    39ce:	37 25       	eor	r19, r7
    39d0:	6a 30       	cpi	r22, 0x0A	; 10
    39d2:	71 05       	cpc	r23, r1
    39d4:	08 f0       	brcs	.+2      	; 0x39d8 <qtm_acquisition_process+0x15a>
    39d6:	47 c0       	rjmp	.+142    	; 0x3a66 <qtm_acquisition_process+0x1e8>
    39d8:	26 fd       	sbrc	r18, 6
    39da:	39 c0       	rjmp	.+114    	; 0x3a4e <qtm_acquisition_process+0x1d0>
    39dc:	27 fd       	sbrc	r18, 7
    39de:	39 c0       	rjmp	.+114    	; 0x3a52 <qtm_acquisition_process+0x1d4>
    39e0:	d4 01       	movw	r26, r8
    39e2:	13 96       	adiw	r26, 0x03	; 3
    39e4:	2c 91       	ld	r18, X
    39e6:	23 70       	andi	r18, 0x03	; 3
    39e8:	23 30       	cpi	r18, 0x03	; 3
    39ea:	59 f4       	brne	.+22     	; 0x3a02 <qtm_acquisition_process+0x184>
    39ec:	bf e7       	ldi	r27, 0x7F	; 127
    39ee:	b0 8b       	std	Z+16, r27	; 0x10
    39f0:	d8 01       	movw	r26, r16
    39f2:	14 96       	adiw	r26, 0x04	; 4
    39f4:	ed 91       	ld	r30, X+
    39f6:	fc 91       	ld	r31, X
    39f8:	15 97       	sbiw	r26, 0x05	; 5
    39fa:	ea 0d       	add	r30, r10
    39fc:	fb 1d       	adc	r31, r11
    39fe:	b1 e1       	ldi	r27, 0x11	; 17
    3a00:	24 c0       	rjmp	.+72     	; 0x3a4a <qtm_acquisition_process+0x1cc>
    3a02:	22 30       	cpi	r18, 0x02	; 2
    3a04:	61 f4       	brne	.+24     	; 0x3a1e <qtm_acquisition_process+0x1a0>
    3a06:	21 89       	ldd	r18, Z+17	; 0x11
    3a08:	20 7f       	andi	r18, 0xF0	; 240
    3a0a:	21 8b       	std	Z+17, r18	; 0x11
    3a0c:	d8 01       	movw	r26, r16
    3a0e:	14 96       	adiw	r26, 0x04	; 4
    3a10:	ed 91       	ld	r30, X+
    3a12:	fc 91       	ld	r31, X
    3a14:	15 97       	sbiw	r26, 0x05	; 5
    3a16:	ea 0d       	add	r30, r10
    3a18:	fb 1d       	adc	r31, r11
    3a1a:	b9 e0       	ldi	r27, 0x09	; 9
    3a1c:	16 c0       	rjmp	.+44     	; 0x3a4a <qtm_acquisition_process+0x1cc>
    3a1e:	21 30       	cpi	r18, 0x01	; 1
    3a20:	b1 f4       	brne	.+44     	; 0x3a4e <qtm_acquisition_process+0x1d0>
    3a22:	21 89       	ldd	r18, Z+17	; 0x11
    3a24:	2f 70       	andi	r18, 0x0F	; 15
    3a26:	21 8b       	std	Z+17, r18	; 0x11
    3a28:	d8 01       	movw	r26, r16
    3a2a:	12 96       	adiw	r26, 0x02	; 2
    3a2c:	ed 91       	ld	r30, X+
    3a2e:	fc 91       	ld	r31, X
    3a30:	13 97       	sbiw	r26, 0x03	; 3
    3a32:	ec 0d       	add	r30, r12
    3a34:	fd 1d       	adc	r31, r13
    3a36:	21 89       	ldd	r18, Z+17	; 0x11
    3a38:	20 67       	ori	r18, 0x70	; 112
    3a3a:	21 8b       	std	Z+17, r18	; 0x11
    3a3c:	14 96       	adiw	r26, 0x04	; 4
    3a3e:	ed 91       	ld	r30, X+
    3a40:	fc 91       	ld	r31, X
    3a42:	15 97       	sbiw	r26, 0x05	; 5
    3a44:	ea 0d       	add	r30, r10
    3a46:	fb 1d       	adc	r31, r11
    3a48:	bd e0       	ldi	r27, 0x0D	; 13
    3a4a:	b0 83       	st	Z, r27
    3a4c:	02 c0       	rjmp	.+4      	; 0x3a52 <qtm_acquisition_process+0x1d4>
    3a4e:	f7 01       	movw	r30, r14
    3a50:	70 82       	st	Z, r7
    3a52:	d8 01       	movw	r26, r16
    3a54:	14 96       	adiw	r26, 0x04	; 4
    3a56:	ed 91       	ld	r30, X+
    3a58:	fc 91       	ld	r31, X
    3a5a:	15 97       	sbiw	r26, 0x05	; 5
    3a5c:	ea 0d       	add	r30, r10
    3a5e:	fb 1d       	adc	r31, r11
    3a60:	83 83       	std	Z+3, r24	; 0x03
    3a62:	94 83       	std	Z+4, r25	; 0x04
    3a64:	3e c1       	rjmp	.+636    	; 0x3ce2 <qtm_acquisition_process+0x464>
    3a66:	8f 3f       	cpi	r24, 0xFF	; 255
    3a68:	b3 e0       	ldi	r27, 0x03	; 3
    3a6a:	9b 07       	cpc	r25, r27
    3a6c:	11 f0       	breq	.+4      	; 0x3a72 <qtm_acquisition_process+0x1f4>
    3a6e:	00 97       	sbiw	r24, 0x00	; 0
    3a70:	31 f4       	brne	.+12     	; 0x3a7e <qtm_acquisition_process+0x200>
    3a72:	21 e8       	ldi	r18, 0x81	; 129
    3a74:	f7 01       	movw	r30, r14
    3a76:	20 83       	st	Z, r18
    3a78:	3e e0       	ldi	r19, 0x0E	; 14
    3a7a:	39 83       	std	Y+1, r19	; 0x01
    3a7c:	32 c1       	rjmp	.+612    	; 0x3ce2 <qtm_acquisition_process+0x464>
    3a7e:	33 23       	and	r19, r19
    3a80:	11 f0       	breq	.+4      	; 0x3a86 <qtm_acquisition_process+0x208>
    3a82:	9c 01       	movw	r18, r24
    3a84:	10 c0       	rjmp	.+32     	; 0x3aa6 <qtm_acquisition_process+0x228>
    3a86:	9c 01       	movw	r18, r24
    3a88:	2f 3f       	cpi	r18, 0xFF	; 255
    3a8a:	43 e0       	ldi	r20, 0x03	; 3
    3a8c:	34 07       	cpc	r19, r20
    3a8e:	a8 f4       	brcc	.+42     	; 0x3aba <qtm_acquisition_process+0x23c>
    3a90:	2f 5f       	subi	r18, 0xFF	; 255
    3a92:	3f 4f       	sbci	r19, 0xFF	; 255
    3a94:	61 50       	subi	r22, 0x01	; 1
    3a96:	71 09       	sbc	r23, r1
    3a98:	61 30       	cpi	r22, 0x01	; 1
    3a9a:	71 05       	cpc	r23, r1
    3a9c:	a9 f7       	brne	.-22     	; 0x3a88 <qtm_acquisition_process+0x20a>
    3a9e:	0d c0       	rjmp	.+26     	; 0x3aba <qtm_acquisition_process+0x23c>
    3aa0:	21 15       	cp	r18, r1
    3aa2:	31 05       	cpc	r19, r1
    3aa4:	51 f0       	breq	.+20     	; 0x3aba <qtm_acquisition_process+0x23c>
    3aa6:	21 50       	subi	r18, 0x01	; 1
    3aa8:	31 09       	sbc	r19, r1
    3aaa:	a9 01       	movw	r20, r18
    3aac:	48 1b       	sub	r20, r24
    3aae:	59 0b       	sbc	r21, r25
    3ab0:	46 0f       	add	r20, r22
    3ab2:	57 1f       	adc	r21, r23
    3ab4:	41 30       	cpi	r20, 0x01	; 1
    3ab6:	51 05       	cpc	r21, r1
    3ab8:	99 f7       	brne	.-26     	; 0x3aa0 <qtm_acquisition_process+0x222>
    3aba:	d7 01       	movw	r26, r14
    3abc:	13 96       	adiw	r26, 0x03	; 3
    3abe:	2d 93       	st	X+, r18
    3ac0:	3c 93       	st	X, r19
    3ac2:	14 97       	sbiw	r26, 0x04	; 4
    3ac4:	0e c1       	rjmp	.+540    	; 0x3ce2 <qtm_acquisition_process+0x464>
    3ac6:	f8 01       	movw	r30, r16
    3ac8:	82 80       	ldd	r8, Z+2	; 0x02
    3aca:	93 80       	ldd	r9, Z+3	; 0x03
    3acc:	8c 0c       	add	r8, r12
    3ace:	9d 1c       	adc	r9, r13
    3ad0:	fa 01       	movw	r30, r20
    3ad2:	d4 01       	movw	r26, r8
    3ad4:	53 96       	adiw	r26, 0x13	; 19
    3ad6:	0c 90       	ld	r0, X
    3ad8:	53 97       	sbiw	r26, 0x13	; 19
    3ada:	02 c0       	rjmp	.+4      	; 0x3ae0 <qtm_acquisition_process+0x262>
    3adc:	f6 95       	lsr	r31
    3ade:	e7 95       	ror	r30
    3ae0:	0a 94       	dec	r0
    3ae2:	e2 f7       	brpl	.-8      	; 0x3adc <qtm_acquisition_process+0x25e>
    3ae4:	ec 83       	std	Y+4, r30	; 0x04
    3ae6:	fd 83       	std	Y+5, r31	; 0x05
    3ae8:	50 96       	adiw	r26, 0x10	; 16
    3aea:	6c 90       	ld	r6, X
    3aec:	ff e7       	ldi	r31, 0x7F	; 127
    3aee:	6f 12       	cpse	r6, r31
    3af0:	0f c0       	rjmp	.+30     	; 0x3b10 <qtm_acquisition_process+0x292>
    3af2:	ec 81       	ldd	r30, Y+4	; 0x04
    3af4:	fd 81       	ldd	r31, Y+5	; 0x05
    3af6:	d7 01       	movw	r26, r14
    3af8:	11 96       	adiw	r26, 0x01	; 1
    3afa:	ed 93       	st	X+, r30
    3afc:	fc 93       	st	X, r31
    3afe:	12 97       	sbiw	r26, 0x02	; 2
    3b00:	d4 01       	movw	r26, r8
    3b02:	50 96       	adiw	r26, 0x10	; 16
    3b04:	8c 91       	ld	r24, X
    3b06:	50 97       	sbiw	r26, 0x10	; 16
    3b08:	8f 7b       	andi	r24, 0xBF	; 191
    3b0a:	50 96       	adiw	r26, 0x10	; 16
    3b0c:	8c 93       	st	X, r24
    3b0e:	42 c0       	rjmp	.+132    	; 0x3b94 <qtm_acquisition_process+0x316>
    3b10:	f1 2c       	mov	r15, r1
    3b12:	26 2d       	mov	r18, r6
    3b14:	30 e0       	ldi	r19, 0x00	; 0
    3b16:	c9 01       	movw	r24, r18
    3b18:	0f 2c       	mov	r0, r15
    3b1a:	02 c0       	rjmp	.+4      	; 0x3b20 <qtm_acquisition_process+0x2a2>
    3b1c:	96 95       	lsr	r25
    3b1e:	87 95       	ror	r24
    3b20:	0a 94       	dec	r0
    3b22:	e2 f7       	brpl	.-8      	; 0x3b1c <qtm_acquisition_process+0x29e>
    3b24:	80 ff       	sbrs	r24, 0
    3b26:	03 c0       	rjmp	.+6      	; 0x3b2e <qtm_acquisition_process+0x2b0>
    3b28:	8f 2d       	mov	r24, r15
    3b2a:	f1 2c       	mov	r15, r1
    3b2c:	01 c0       	rjmp	.+2      	; 0x3b30 <qtm_acquisition_process+0x2b2>
    3b2e:	87 e0       	ldi	r24, 0x07	; 7
    3b30:	8f 5f       	subi	r24, 0xFF	; 255
    3b32:	87 30       	cpi	r24, 0x07	; 7
    3b34:	10 f4       	brcc	.+4      	; 0x3b3a <qtm_acquisition_process+0x2bc>
    3b36:	f8 2e       	mov	r15, r24
    3b38:	ee cf       	rjmp	.-36     	; 0x3b16 <qtm_acquisition_process+0x298>
    3b3a:	6c 81       	ldd	r22, Y+4	; 0x04
    3b3c:	7d 81       	ldd	r23, Y+5	; 0x05
    3b3e:	c1 01       	movw	r24, r2
    3b40:	0e 94 ba 1a 	call	0x3574	; 0x3574 <charge_share_test>
    3b44:	88 23       	and	r24, r24
    3b46:	51 f0       	breq	.+20     	; 0x3b5c <qtm_acquisition_process+0x2de>
    3b48:	81 e0       	ldi	r24, 0x01	; 1
    3b4a:	90 e0       	ldi	r25, 0x00	; 0
    3b4c:	0f 2c       	mov	r0, r15
    3b4e:	01 c0       	rjmp	.+2      	; 0x3b52 <qtm_acquisition_process+0x2d4>
    3b50:	88 0f       	add	r24, r24
    3b52:	0a 94       	dec	r0
    3b54:	ea f7       	brpl	.-6      	; 0x3b50 <qtm_acquisition_process+0x2d2>
    3b56:	86 29       	or	r24, r6
    3b58:	f4 01       	movw	r30, r8
    3b5a:	80 8b       	std	Z+16, r24	; 0x10
    3b5c:	d8 01       	movw	r26, r16
    3b5e:	ff 20       	and	r15, r15
    3b60:	91 f0       	breq	.+36     	; 0x3b86 <qtm_acquisition_process+0x308>
    3b62:	12 96       	adiw	r26, 0x02	; 2
    3b64:	ed 91       	ld	r30, X+
    3b66:	fc 91       	ld	r31, X
    3b68:	13 97       	sbiw	r26, 0x03	; 3
    3b6a:	ec 0d       	add	r30, r12
    3b6c:	fd 1d       	adc	r31, r13
    3b6e:	fa 94       	dec	r15
    3b70:	81 e0       	ldi	r24, 0x01	; 1
    3b72:	90 e0       	ldi	r25, 0x00	; 0
    3b74:	01 c0       	rjmp	.+2      	; 0x3b78 <qtm_acquisition_process+0x2fa>
    3b76:	88 0f       	add	r24, r24
    3b78:	fa 94       	dec	r15
    3b7a:	ea f7       	brpl	.-6      	; 0x3b76 <qtm_acquisition_process+0x2f8>
    3b7c:	80 95       	com	r24
    3b7e:	90 89       	ldd	r25, Z+16	; 0x10
    3b80:	89 23       	and	r24, r25
    3b82:	80 8b       	std	Z+16, r24	; 0x10
    3b84:	07 c0       	rjmp	.+14     	; 0x3b94 <qtm_acquisition_process+0x316>
    3b86:	14 96       	adiw	r26, 0x04	; 4
    3b88:	ed 91       	ld	r30, X+
    3b8a:	fc 91       	ld	r31, X
    3b8c:	15 97       	sbiw	r26, 0x05	; 5
    3b8e:	ea 0d       	add	r30, r10
    3b90:	fb 1d       	adc	r31, r11
    3b92:	70 82       	st	Z, r7
    3b94:	d8 01       	movw	r26, r16
    3b96:	14 96       	adiw	r26, 0x04	; 4
    3b98:	ed 91       	ld	r30, X+
    3b9a:	fc 91       	ld	r31, X
    3b9c:	15 97       	sbiw	r26, 0x05	; 5
    3b9e:	ea 0d       	add	r30, r10
    3ba0:	fb 1d       	adc	r31, r11
    3ba2:	80 81       	ld	r24, Z
    3ba4:	81 30       	cpi	r24, 0x01	; 1
    3ba6:	09 f0       	breq	.+2      	; 0x3baa <qtm_acquisition_process+0x32c>
    3ba8:	9c c0       	rjmp	.+312    	; 0x3ce2 <qtm_acquisition_process+0x464>
    3baa:	2c 81       	ldd	r18, Y+4	; 0x04
    3bac:	3d 81       	ldd	r19, Y+5	; 0x05
    3bae:	83 c0       	rjmp	.+262    	; 0x3cb6 <qtm_acquisition_process+0x438>
    3bb0:	02 80       	ldd	r0, Z+2	; 0x02
    3bb2:	f3 81       	ldd	r31, Z+3	; 0x03
    3bb4:	e0 2d       	mov	r30, r0
    3bb6:	ec 0d       	add	r30, r12
    3bb8:	fd 1d       	adc	r31, r13
    3bba:	9a 01       	movw	r18, r20
    3bbc:	03 88       	ldd	r0, Z+19	; 0x13
    3bbe:	02 c0       	rjmp	.+4      	; 0x3bc4 <qtm_acquisition_process+0x346>
    3bc0:	36 95       	lsr	r19
    3bc2:	27 95       	ror	r18
    3bc4:	0a 94       	dec	r0
    3bc6:	e2 f7       	brpl	.-8      	; 0x3bc0 <qtm_acquisition_process+0x342>
    3bc8:	2c 83       	std	Y+4, r18	; 0x04
    3bca:	3d 83       	std	Y+5, r19	; 0x05
    3bcc:	91 88       	ldd	r9, Z+17	; 0x11
    3bce:	92 94       	swap	r9
    3bd0:	2f e0       	ldi	r18, 0x0F	; 15
    3bd2:	92 22       	and	r9, r18
    3bd4:	37 e0       	ldi	r19, 0x07	; 7
    3bd6:	93 16       	cp	r9, r19
    3bd8:	91 f0       	breq	.+36     	; 0x3bfe <qtm_acquisition_process+0x380>
    3bda:	6c 81       	ldd	r22, Y+4	; 0x04
    3bdc:	7d 81       	ldd	r23, Y+5	; 0x05
    3bde:	c1 01       	movw	r24, r2
    3be0:	0e 94 ba 1a 	call	0x3574	; 0x3574 <charge_share_test>
    3be4:	81 11       	cpse	r24, r1
    3be6:	04 c0       	rjmp	.+8      	; 0x3bf0 <qtm_acquisition_process+0x372>
    3be8:	93 94       	inc	r9
    3bea:	d7 01       	movw	r26, r14
    3bec:	7c 92       	st	X, r7
    3bee:	09 c0       	rjmp	.+18     	; 0x3c02 <qtm_acquisition_process+0x384>
    3bf0:	91 10       	cpse	r9, r1
    3bf2:	03 c0       	rjmp	.+6      	; 0x3bfa <qtm_acquisition_process+0x37c>
    3bf4:	f7 01       	movw	r30, r14
    3bf6:	70 82       	st	Z, r7
    3bf8:	04 c0       	rjmp	.+8      	; 0x3c02 <qtm_acquisition_process+0x384>
    3bfa:	9a 94       	dec	r9
    3bfc:	02 c0       	rjmp	.+4      	; 0x3c02 <qtm_acquisition_process+0x384>
    3bfe:	96 e0       	ldi	r25, 0x06	; 6
    3c00:	99 2e       	mov	r9, r25
    3c02:	d8 01       	movw	r26, r16
    3c04:	12 96       	adiw	r26, 0x02	; 2
    3c06:	ed 91       	ld	r30, X+
    3c08:	fc 91       	ld	r31, X
    3c0a:	13 97       	sbiw	r26, 0x03	; 3
    3c0c:	ec 0d       	add	r30, r12
    3c0e:	fd 1d       	adc	r31, r13
    3c10:	81 89       	ldd	r24, Z+17	; 0x11
    3c12:	8f 70       	andi	r24, 0x0F	; 15
    3c14:	81 8b       	std	Z+17, r24	; 0x11
    3c16:	12 96       	adiw	r26, 0x02	; 2
    3c18:	ed 91       	ld	r30, X+
    3c1a:	fc 91       	ld	r31, X
    3c1c:	13 97       	sbiw	r26, 0x03	; 3
    3c1e:	ec 0d       	add	r30, r12
    3c20:	fd 1d       	adc	r31, r13
    3c22:	92 94       	swap	r9
    3c24:	80 ef       	ldi	r24, 0xF0	; 240
    3c26:	98 22       	and	r9, r24
    3c28:	36 c0       	rjmp	.+108    	; 0x3c96 <qtm_acquisition_process+0x418>
    3c2a:	02 80       	ldd	r0, Z+2	; 0x02
    3c2c:	f3 81       	ldd	r31, Z+3	; 0x03
    3c2e:	e0 2d       	mov	r30, r0
    3c30:	ec 0d       	add	r30, r12
    3c32:	fd 1d       	adc	r31, r13
    3c34:	9a 01       	movw	r18, r20
    3c36:	03 88       	ldd	r0, Z+19	; 0x13
    3c38:	02 c0       	rjmp	.+4      	; 0x3c3e <qtm_acquisition_process+0x3c0>
    3c3a:	36 95       	lsr	r19
    3c3c:	27 95       	ror	r18
    3c3e:	0a 94       	dec	r0
    3c40:	e2 f7       	brpl	.-8      	; 0x3c3a <qtm_acquisition_process+0x3bc>
    3c42:	2c 83       	std	Y+4, r18	; 0x04
    3c44:	3d 83       	std	Y+5, r19	; 0x05
    3c46:	81 89       	ldd	r24, Z+17	; 0x11
    3c48:	8f 70       	andi	r24, 0x0F	; 15
    3c4a:	98 2e       	mov	r9, r24
    3c4c:	91 f0       	breq	.+36     	; 0x3c72 <qtm_acquisition_process+0x3f4>
    3c4e:	b9 01       	movw	r22, r18
    3c50:	c1 01       	movw	r24, r2
    3c52:	0e 94 ba 1a 	call	0x3574	; 0x3574 <charge_share_test>
    3c56:	81 11       	cpse	r24, r1
    3c58:	04 c0       	rjmp	.+8      	; 0x3c62 <qtm_acquisition_process+0x3e4>
    3c5a:	9a 94       	dec	r9
    3c5c:	d7 01       	movw	r26, r14
    3c5e:	7c 92       	st	X, r7
    3c60:	0a c0       	rjmp	.+20     	; 0x3c76 <qtm_acquisition_process+0x3f8>
    3c62:	b7 e0       	ldi	r27, 0x07	; 7
    3c64:	9b 12       	cpse	r9, r27
    3c66:	03 c0       	rjmp	.+6      	; 0x3c6e <qtm_acquisition_process+0x3f0>
    3c68:	f7 01       	movw	r30, r14
    3c6a:	70 82       	st	Z, r7
    3c6c:	04 c0       	rjmp	.+8      	; 0x3c76 <qtm_acquisition_process+0x3f8>
    3c6e:	93 94       	inc	r9
    3c70:	02 c0       	rjmp	.+4      	; 0x3c76 <qtm_acquisition_process+0x3f8>
    3c72:	99 24       	eor	r9, r9
    3c74:	93 94       	inc	r9
    3c76:	d8 01       	movw	r26, r16
    3c78:	12 96       	adiw	r26, 0x02	; 2
    3c7a:	ed 91       	ld	r30, X+
    3c7c:	fc 91       	ld	r31, X
    3c7e:	13 97       	sbiw	r26, 0x03	; 3
    3c80:	ec 0d       	add	r30, r12
    3c82:	fd 1d       	adc	r31, r13
    3c84:	81 89       	ldd	r24, Z+17	; 0x11
    3c86:	80 7f       	andi	r24, 0xF0	; 240
    3c88:	81 8b       	std	Z+17, r24	; 0x11
    3c8a:	12 96       	adiw	r26, 0x02	; 2
    3c8c:	ed 91       	ld	r30, X+
    3c8e:	fc 91       	ld	r31, X
    3c90:	13 97       	sbiw	r26, 0x03	; 3
    3c92:	ec 0d       	add	r30, r12
    3c94:	fd 1d       	adc	r31, r13
    3c96:	81 89       	ldd	r24, Z+17	; 0x11
    3c98:	98 2a       	or	r9, r24
    3c9a:	91 8a       	std	Z+17, r9	; 0x11
    3c9c:	14 96       	adiw	r26, 0x04	; 4
    3c9e:	ed 91       	ld	r30, X+
    3ca0:	fc 91       	ld	r31, X
    3ca2:	15 97       	sbiw	r26, 0x05	; 5
    3ca4:	ea 0d       	add	r30, r10
    3ca6:	fb 1d       	adc	r31, r11
    3ca8:	2c 81       	ldd	r18, Y+4	; 0x04
    3caa:	3d 81       	ldd	r19, Y+5	; 0x05
    3cac:	21 83       	std	Z+1, r18	; 0x01
    3cae:	32 83       	std	Z+2, r19	; 0x02
    3cb0:	80 81       	ld	r24, Z
    3cb2:	81 30       	cpi	r24, 0x01	; 1
    3cb4:	b1 f4       	brne	.+44     	; 0x3ce2 <qtm_acquisition_process+0x464>
    3cb6:	21 15       	cp	r18, r1
    3cb8:	42 e0       	ldi	r20, 0x02	; 2
    3cba:	34 07       	cpc	r19, r20
    3cbc:	28 f0       	brcs	.+10     	; 0x3cc8 <qtm_acquisition_process+0x44a>
    3cbe:	2f 5f       	subi	r18, 0xFF	; 255
    3cc0:	31 40       	sbci	r19, 0x01	; 1
    3cc2:	2c 83       	std	Y+4, r18	; 0x04
    3cc4:	3d 83       	std	Y+5, r19	; 0x05
    3cc6:	07 c0       	rjmp	.+14     	; 0x3cd6 <qtm_acquisition_process+0x458>
    3cc8:	b2 01       	movw	r22, r4
    3cca:	8c 81       	ldd	r24, Y+4	; 0x04
    3ccc:	9d 81       	ldd	r25, Y+5	; 0x05
    3cce:	68 1b       	sub	r22, r24
    3cd0:	79 0b       	sbc	r23, r25
    3cd2:	6c 83       	std	Y+4, r22	; 0x04
    3cd4:	7d 83       	std	Y+5, r23	; 0x05
    3cd6:	ac 81       	ldd	r26, Y+4	; 0x04
    3cd8:	bd 81       	ldd	r27, Y+5	; 0x05
    3cda:	1b 97       	sbiw	r26, 0x0b	; 11
    3cdc:	10 f0       	brcs	.+4      	; 0x3ce2 <qtm_acquisition_process+0x464>
    3cde:	b5 e4       	ldi	r27, 0x45	; 69
    3ce0:	b0 83       	st	Z, r27
    3ce2:	ef ef       	ldi	r30, 0xFF	; 255
    3ce4:	2e 1a       	sub	r2, r30
    3ce6:	3e 0a       	sbc	r3, r30
    3ce8:	f5 e0       	ldi	r31, 0x05	; 5
    3cea:	af 0e       	add	r10, r31
    3cec:	b1 1c       	adc	r11, r1
    3cee:	24 e1       	ldi	r18, 0x14	; 20
    3cf0:	c2 0e       	add	r12, r18
    3cf2:	d1 1c       	adc	r13, r1
    3cf4:	f7 cd       	rjmp	.-1042   	; 0x38e4 <qtm_acquisition_process+0x66>
    3cf6:	82 e0       	ldi	r24, 0x02	; 2
    3cf8:	80 93 7d 44 	sts	0x447D, r24	; 0x80447d <touch_seq_lib_state>
    3cfc:	02 c0       	rjmp	.+4      	; 0x3d02 <qtm_acquisition_process+0x484>
    3cfe:	f3 e0       	ldi	r31, 0x03	; 3
    3d00:	f9 83       	std	Y+1, r31	; 0x01
    3d02:	89 81       	ldd	r24, Y+1	; 0x01
    3d04:	25 96       	adiw	r28, 0x05	; 5
    3d06:	cd bf       	out	0x3d, r28	; 61
    3d08:	de bf       	out	0x3e, r29	; 62
    3d0a:	df 91       	pop	r29
    3d0c:	cf 91       	pop	r28
    3d0e:	1f 91       	pop	r17
    3d10:	0f 91       	pop	r16
    3d12:	ff 90       	pop	r15
    3d14:	ef 90       	pop	r14
    3d16:	df 90       	pop	r13
    3d18:	cf 90       	pop	r12
    3d1a:	bf 90       	pop	r11
    3d1c:	af 90       	pop	r10
    3d1e:	9f 90       	pop	r9
    3d20:	8f 90       	pop	r8
    3d22:	7f 90       	pop	r7
    3d24:	6f 90       	pop	r6
    3d26:	5f 90       	pop	r5
    3d28:	4f 90       	pop	r4
    3d2a:	3f 90       	pop	r3
    3d2c:	2f 90       	pop	r2
    3d2e:	08 95       	ret

00003d30 <qtm_ptc_init_acquisition_module>:
    3d30:	5f 92       	push	r5
    3d32:	6f 92       	push	r6
    3d34:	7f 92       	push	r7
    3d36:	8f 92       	push	r8
    3d38:	9f 92       	push	r9
    3d3a:	af 92       	push	r10
    3d3c:	bf 92       	push	r11
    3d3e:	cf 92       	push	r12
    3d40:	df 92       	push	r13
    3d42:	ef 92       	push	r14
    3d44:	ff 92       	push	r15
    3d46:	0f 93       	push	r16
    3d48:	1f 93       	push	r17
    3d4a:	cf 93       	push	r28
    3d4c:	df 93       	push	r29
    3d4e:	00 97       	sbiw	r24, 0x00	; 0
    3d50:	09 f4       	brne	.+2      	; 0x3d54 <qtm_ptc_init_acquisition_module+0x24>
    3d52:	92 c0       	rjmp	.+292    	; 0x3e78 <qtm_ptc_init_acquisition_module+0x148>
    3d54:	dc 01       	movw	r26, r24
    3d56:	ed 91       	ld	r30, X+
    3d58:	fc 91       	ld	r31, X
    3d5a:	60 81       	ld	r22, Z
    3d5c:	71 81       	ldd	r23, Z+1	; 0x01
    3d5e:	40 e0       	ldi	r20, 0x00	; 0
    3d60:	50 e0       	ldi	r21, 0x00	; 0
    3d62:	20 e0       	ldi	r18, 0x00	; 0
    3d64:	30 e0       	ldi	r19, 0x00	; 0
    3d66:	b0 e0       	ldi	r27, 0x00	; 0
    3d68:	10 e0       	ldi	r17, 0x00	; 0
    3d6a:	f1 2c       	mov	r15, r1
    3d6c:	e1 2c       	mov	r14, r1
    3d6e:	91 2c       	mov	r9, r1
    3d70:	81 2c       	mov	r8, r1
    3d72:	71 2c       	mov	r7, r1
    3d74:	61 2c       	mov	r6, r1
    3d76:	26 17       	cp	r18, r22
    3d78:	37 07       	cpc	r19, r23
    3d7a:	51 f1       	breq	.+84     	; 0x3dd0 <qtm_ptc_init_acquisition_module+0xa0>
    3d7c:	ec 01       	movw	r28, r24
    3d7e:	ea 81       	ldd	r30, Y+2	; 0x02
    3d80:	fb 81       	ldd	r31, Y+3	; 0x03
    3d82:	e4 0f       	add	r30, r20
    3d84:	f5 1f       	adc	r31, r21
    3d86:	a0 80       	ld	r10, Z
    3d88:	a0 85       	ldd	r26, Z+8	; 0x08
    3d8a:	aa 2a       	or	r10, r26
    3d8c:	b1 80       	ldd	r11, Z+1	; 0x01
    3d8e:	a1 85       	ldd	r26, Z+9	; 0x09
    3d90:	ba 2a       	or	r11, r26
    3d92:	c2 80       	ldd	r12, Z+2	; 0x02
    3d94:	a2 85       	ldd	r26, Z+10	; 0x0a
    3d96:	ca 2a       	or	r12, r26
    3d98:	d3 80       	ldd	r13, Z+3	; 0x03
    3d9a:	a3 85       	ldd	r26, Z+11	; 0x0b
    3d9c:	da 2a       	or	r13, r26
    3d9e:	d4 81       	ldd	r29, Z+4	; 0x04
    3da0:	a4 85       	ldd	r26, Z+12	; 0x0c
    3da2:	da 2b       	or	r29, r26
    3da4:	c5 81       	ldd	r28, Z+5	; 0x05
    3da6:	a5 85       	ldd	r26, Z+13	; 0x0d
    3da8:	ca 2b       	or	r28, r26
    3daa:	56 80       	ldd	r5, Z+6	; 0x06
    3dac:	a6 85       	ldd	r26, Z+14	; 0x0e
    3dae:	a5 29       	or	r26, r5
    3db0:	57 80       	ldd	r5, Z+7	; 0x07
    3db2:	e7 85       	ldd	r30, Z+15	; 0x0f
    3db4:	e5 29       	or	r30, r5
    3db6:	ba 29       	or	r27, r10
    3db8:	1b 29       	or	r17, r11
    3dba:	fc 28       	or	r15, r12
    3dbc:	ed 28       	or	r14, r13
    3dbe:	9d 2a       	or	r9, r29
    3dc0:	8c 2a       	or	r8, r28
    3dc2:	7a 2a       	or	r7, r26
    3dc4:	6e 2a       	or	r6, r30
    3dc6:	2f 5f       	subi	r18, 0xFF	; 255
    3dc8:	3f 4f       	sbci	r19, 0xFF	; 255
    3dca:	4c 5e       	subi	r20, 0xEC	; 236
    3dcc:	5f 4f       	sbci	r21, 0xFF	; 255
    3dce:	d3 cf       	rjmp	.-90     	; 0x3d76 <qtm_ptc_init_acquisition_module+0x46>
    3dd0:	2b 2f       	mov	r18, r27
    3dd2:	31 2f       	mov	r19, r17
    3dd4:	4f 2d       	mov	r20, r15
    3dd6:	5e 2d       	mov	r21, r14
    3dd8:	69 2d       	mov	r22, r9
    3dda:	78 2d       	mov	r23, r8
    3ddc:	87 2d       	mov	r24, r7
    3dde:	96 2d       	mov	r25, r6
    3de0:	a0 e0       	ldi	r26, 0x00	; 0
    3de2:	0e 94 b4 21 	call	0x4368	; 0x4368 <__cmpdi2_s8>
    3de6:	09 f4       	brne	.+2      	; 0x3dea <qtm_ptc_init_acquisition_module+0xba>
    3de8:	49 c0       	rjmp	.+146    	; 0x3e7c <qtm_ptc_init_acquisition_module+0x14c>
    3dea:	81 e0       	ldi	r24, 0x01	; 1
    3dec:	80 93 7d 44 	sts	0x447D, r24	; 0x80447d <touch_seq_lib_state>
    3df0:	2e e0       	ldi	r18, 0x0E	; 14
    3df2:	c2 2e       	mov	r12, r18
    3df4:	23 e4       	ldi	r18, 0x43	; 67
    3df6:	d2 2e       	mov	r13, r18
    3df8:	c0 e0       	ldi	r28, 0x00	; 0
    3dfa:	d0 e0       	ldi	r29, 0x00	; 0
    3dfc:	aa 24       	eor	r10, r10
    3dfe:	a3 94       	inc	r10
    3e00:	b1 2c       	mov	r11, r1
    3e02:	4c e0       	ldi	r20, 0x0C	; 12
    3e04:	54 2e       	mov	r5, r20
    3e06:	2b 2f       	mov	r18, r27
    3e08:	31 2f       	mov	r19, r17
    3e0a:	4f 2d       	mov	r20, r15
    3e0c:	5e 2d       	mov	r21, r14
    3e0e:	69 2d       	mov	r22, r9
    3e10:	78 2d       	mov	r23, r8
    3e12:	87 2d       	mov	r24, r7
    3e14:	96 2d       	mov	r25, r6
    3e16:	0c 2f       	mov	r16, r28
    3e18:	0e 94 98 21 	call	0x4330	; 0x4330 <__lshrdi3>
    3e1c:	21 70       	andi	r18, 0x01	; 1
    3e1e:	30 e0       	ldi	r19, 0x00	; 0
    3e20:	40 e0       	ldi	r20, 0x00	; 0
    3e22:	50 e0       	ldi	r21, 0x00	; 0
    3e24:	60 e0       	ldi	r22, 0x00	; 0
    3e26:	70 e0       	ldi	r23, 0x00	; 0
    3e28:	80 e0       	ldi	r24, 0x00	; 0
    3e2a:	90 e0       	ldi	r25, 0x00	; 0
    3e2c:	a0 e0       	ldi	r26, 0x00	; 0
    3e2e:	0e 94 b4 21 	call	0x4368	; 0x4368 <__cmpdi2_s8>
    3e32:	c9 f0       	breq	.+50     	; 0x3e66 <qtm_ptc_init_acquisition_module+0x136>
    3e34:	f6 01       	movw	r30, r12
    3e36:	80 81       	ld	r24, Z
    3e38:	e8 2f       	mov	r30, r24
    3e3a:	e2 95       	swap	r30
    3e3c:	e6 95       	lsr	r30
    3e3e:	e7 70       	andi	r30, 0x07	; 7
    3e40:	f0 e0       	ldi	r31, 0x00	; 0
    3e42:	ee 0f       	add	r30, r30
    3e44:	ff 1f       	adc	r31, r31
    3e46:	e0 50       	subi	r30, 0x00	; 0
    3e48:	fd 4b       	sbci	r31, 0xBD	; 189
    3e4a:	01 90       	ld	r0, Z+
    3e4c:	f0 81       	ld	r31, Z
    3e4e:	e0 2d       	mov	r30, r0
    3e50:	8f 71       	andi	r24, 0x1F	; 31
    3e52:	95 01       	movw	r18, r10
    3e54:	02 c0       	rjmp	.+4      	; 0x3e5a <qtm_ptc_init_acquisition_module+0x12a>
    3e56:	22 0f       	add	r18, r18
    3e58:	33 1f       	adc	r19, r19
    3e5a:	8a 95       	dec	r24
    3e5c:	e2 f7       	brpl	.-8      	; 0x3e56 <qtm_ptc_init_acquisition_module+0x126>
    3e5e:	22 83       	std	Z+2, r18	; 0x02
    3e60:	26 83       	std	Z+6, r18	; 0x06
    3e62:	53 86       	std	Z+11, r5	; 0x0b
    3e64:	25 87       	std	Z+13, r18	; 0x0d
    3e66:	21 96       	adiw	r28, 0x01	; 1
    3e68:	3f ef       	ldi	r19, 0xFF	; 255
    3e6a:	c3 1a       	sub	r12, r19
    3e6c:	d3 0a       	sbc	r13, r19
    3e6e:	c0 33       	cpi	r28, 0x30	; 48
    3e70:	d1 05       	cpc	r29, r1
    3e72:	49 f6       	brne	.-110    	; 0x3e06 <qtm_ptc_init_acquisition_module+0xd6>
    3e74:	80 e0       	ldi	r24, 0x00	; 0
    3e76:	03 c0       	rjmp	.+6      	; 0x3e7e <qtm_ptc_init_acquisition_module+0x14e>
    3e78:	8b e0       	ldi	r24, 0x0B	; 11
    3e7a:	01 c0       	rjmp	.+2      	; 0x3e7e <qtm_ptc_init_acquisition_module+0x14e>
    3e7c:	82 e0       	ldi	r24, 0x02	; 2
    3e7e:	df 91       	pop	r29
    3e80:	cf 91       	pop	r28
    3e82:	1f 91       	pop	r17
    3e84:	0f 91       	pop	r16
    3e86:	ff 90       	pop	r15
    3e88:	ef 90       	pop	r14
    3e8a:	df 90       	pop	r13
    3e8c:	cf 90       	pop	r12
    3e8e:	bf 90       	pop	r11
    3e90:	af 90       	pop	r10
    3e92:	9f 90       	pop	r9
    3e94:	8f 90       	pop	r8
    3e96:	7f 90       	pop	r7
    3e98:	6f 90       	pop	r6
    3e9a:	5f 90       	pop	r5
    3e9c:	08 95       	ret

00003e9e <qtm_ptc_qtlib_assign_signal_memory>:
    3e9e:	00 97       	sbiw	r24, 0x00	; 0
    3ea0:	31 f0       	breq	.+12     	; 0x3eae <qtm_ptc_qtlib_assign_signal_memory+0x10>
    3ea2:	80 93 c8 45 	sts	0x45C8, r24	; 0x8045c8 <qtm_raw_data_measurements_ptr>
    3ea6:	90 93 c9 45 	sts	0x45C9, r25	; 0x8045c9 <qtm_raw_data_measurements_ptr+0x1>
    3eaa:	80 e0       	ldi	r24, 0x00	; 0
    3eac:	08 95       	ret
    3eae:	8b e0       	ldi	r24, 0x0B	; 11
    3eb0:	08 95       	ret

00003eb2 <qtm_ptc_start_measurement_seq>:
    3eb2:	61 15       	cp	r22, r1
    3eb4:	71 05       	cpc	r23, r1
    3eb6:	61 f1       	breq	.+88     	; 0x3f10 <qtm_ptc_start_measurement_seq+0x5e>
    3eb8:	00 97       	sbiw	r24, 0x00	; 0
    3eba:	51 f1       	breq	.+84     	; 0x3f10 <qtm_ptc_start_measurement_seq+0x5e>
    3ebc:	20 91 7d 44 	lds	r18, 0x447D	; 0x80447d <touch_seq_lib_state>
    3ec0:	22 23       	and	r18, r18
    3ec2:	41 f1       	breq	.+80     	; 0x3f14 <qtm_ptc_start_measurement_seq+0x62>
    3ec4:	24 30       	cpi	r18, 0x04	; 4
    3ec6:	41 f1       	breq	.+80     	; 0x3f18 <qtm_ptc_start_measurement_seq+0x66>
    3ec8:	80 93 c6 45 	sts	0x45C6, r24	; 0x8045c6 <qtm_acquisition_control_working_set_ptr>
    3ecc:	90 93 c7 45 	sts	0x45C7, r25	; 0x8045c7 <qtm_acquisition_control_working_set_ptr+0x1>
    3ed0:	60 93 7b 44 	sts	0x447B, r22	; 0x80447b <ptc_seq_measure_complete_pointer>
    3ed4:	70 93 7c 44 	sts	0x447C, r23	; 0x80447c <ptc_seq_measure_complete_pointer+0x1>
    3ed8:	dc 01       	movw	r26, r24
    3eda:	ed 91       	ld	r30, X+
    3edc:	fc 91       	ld	r31, X
    3ede:	22 81       	ldd	r18, Z+2	; 0x02
    3ee0:	20 34       	cpi	r18, 0x40	; 64
    3ee2:	19 f4       	brne	.+6      	; 0x3eea <qtm_ptc_start_measurement_seq+0x38>
    3ee4:	10 92 c1 07 	sts	0x07C1, r1	; 0x8007c1 <__TEXT_REGION_LENGTH__+0x7e07c1>
    3ee8:	07 c0       	rjmp	.+14     	; 0x3ef8 <qtm_ptc_start_measurement_seq+0x46>
    3eea:	20 38       	cpi	r18, 0x80	; 128
    3eec:	11 f0       	breq	.+4      	; 0x3ef2 <qtm_ptc_start_measurement_seq+0x40>
    3eee:	21 38       	cpi	r18, 0x81	; 129
    3ef0:	31 f4       	brne	.+12     	; 0x3efe <qtm_ptc_start_measurement_seq+0x4c>
    3ef2:	21 e0       	ldi	r18, 0x01	; 1
    3ef4:	20 93 c1 07 	sts	0x07C1, r18	; 0x8007c1 <__TEXT_REGION_LENGTH__+0x7e07c1>
    3ef8:	10 92 cb 07 	sts	0x07CB, r1	; 0x8007cb <__TEXT_REGION_LENGTH__+0x7e07cb>
    3efc:	11 c0       	rjmp	.+34     	; 0x3f20 <qtm_ptc_start_measurement_seq+0x6e>
    3efe:	22 38       	cpi	r18, 0x82	; 130
    3f00:	69 f4       	brne	.+26     	; 0x3f1c <qtm_ptc_start_measurement_seq+0x6a>
    3f02:	21 e0       	ldi	r18, 0x01	; 1
    3f04:	20 93 c1 07 	sts	0x07C1, r18	; 0x8007c1 <__TEXT_REGION_LENGTH__+0x7e07c1>
    3f08:	29 e0       	ldi	r18, 0x09	; 9
    3f0a:	20 93 cb 07 	sts	0x07CB, r18	; 0x8007cb <__TEXT_REGION_LENGTH__+0x7e07cb>
    3f0e:	08 c0       	rjmp	.+16     	; 0x3f20 <qtm_ptc_start_measurement_seq+0x6e>
    3f10:	8b e0       	ldi	r24, 0x0B	; 11
    3f12:	08 95       	ret
    3f14:	83 e0       	ldi	r24, 0x03	; 3
    3f16:	08 95       	ret
    3f18:	81 e0       	ldi	r24, 0x01	; 1
    3f1a:	08 95       	ret
    3f1c:	82 e0       	ldi	r24, 0x02	; 2
    3f1e:	08 95       	ret
    3f20:	10 92 c0 07 	sts	0x07C0, r1	; 0x8007c0 <__TEXT_REGION_LENGTH__+0x7e07c0>
    3f24:	dc 01       	movw	r26, r24
    3f26:	ed 91       	ld	r30, X+
    3f28:	fc 91       	ld	r31, X
    3f2a:	84 81       	ldd	r24, Z+4	; 0x04
    3f2c:	92 81       	ldd	r25, Z+2	; 0x02
    3f2e:	90 34       	cpi	r25, 0x40	; 64
    3f30:	51 f4       	brne	.+20     	; 0x3f46 <qtm_ptc_start_measurement_seq+0x94>
    3f32:	10 92 c5 07 	sts	0x07C5, r1	; 0x8007c5 <__TEXT_REGION_LENGTH__+0x7e07c5>
    3f36:	80 31       	cpi	r24, 0x10	; 16
    3f38:	10 f4       	brcc	.+4      	; 0x3f3e <qtm_ptc_start_measurement_seq+0x8c>
    3f3a:	80 62       	ori	r24, 0x20	; 32
    3f3c:	01 c0       	rjmp	.+2      	; 0x3f40 <qtm_ptc_start_measurement_seq+0x8e>
    3f3e:	8f e2       	ldi	r24, 0x2F	; 47
    3f40:	80 93 c3 07 	sts	0x07C3, r24	; 0x8007c3 <__TEXT_REGION_LENGTH__+0x7e07c3>
    3f44:	08 c0       	rjmp	.+16     	; 0x3f56 <qtm_ptc_start_measurement_seq+0xa4>
    3f46:	90 e2       	ldi	r25, 0x20	; 32
    3f48:	90 93 c3 07 	sts	0x07C3, r25	; 0x8007c3 <__TEXT_REGION_LENGTH__+0x7e07c3>
    3f4c:	8f 30       	cpi	r24, 0x0F	; 15
    3f4e:	08 f0       	brcs	.+2      	; 0x3f52 <qtm_ptc_start_measurement_seq+0xa0>
    3f50:	8f e0       	ldi	r24, 0x0F	; 15
    3f52:	80 93 c5 07 	sts	0x07C5, r24	; 0x8007c5 <__TEXT_REGION_LENGTH__+0x7e07c5>
    3f56:	81 e0       	ldi	r24, 0x01	; 1
    3f58:	80 93 d3 07 	sts	0x07D3, r24	; 0x8007d3 <__TEXT_REGION_LENGTH__+0x7e07d3>
    3f5c:	80 93 d2 07 	sts	0x07D2, r24	; 0x8007d2 <__TEXT_REGION_LENGTH__+0x7e07d2>
    3f60:	80 93 7e 41 	sts	0x417E, r24	; 0x80417e <qtm_which_mode_current>
    3f64:	10 92 7e 44 	sts	0x447E, r1	; 0x80447e <current_measure_channel>
    3f68:	10 92 7f 44 	sts	0x447F, r1	; 0x80447f <current_measure_channel+0x1>
    3f6c:	0e 94 02 1b 	call	0x3604	; 0x3604 <select_next_channel_to_measure>
    3f70:	81 11       	cpse	r24, r1
    3f72:	0b c0       	rjmp	.+22     	; 0x3f8a <qtm_ptc_start_measurement_seq+0xd8>
    3f74:	84 e0       	ldi	r24, 0x04	; 4
    3f76:	80 93 7d 44 	sts	0x447D, r24	; 0x80447d <touch_seq_lib_state>
    3f7a:	80 91 7e 44 	lds	r24, 0x447E	; 0x80447e <current_measure_channel>
    3f7e:	90 91 7f 44 	lds	r25, 0x447F	; 0x80447f <current_measure_channel+0x1>
    3f82:	0e 94 35 1b 	call	0x366a	; 0x366a <qtm_measure_node>
    3f86:	80 e0       	ldi	r24, 0x00	; 0
    3f88:	08 95       	ret
    3f8a:	82 e0       	ldi	r24, 0x02	; 2
    3f8c:	80 93 7d 44 	sts	0x447D, r24	; 0x80447d <touch_seq_lib_state>
    3f90:	08 95       	ret

00003f92 <qtm_enable_sensor_node>:
    3f92:	00 97       	sbiw	r24, 0x00	; 0
    3f94:	c9 f0       	breq	.+50     	; 0x3fc8 <qtm_enable_sensor_node+0x36>
    3f96:	dc 01       	movw	r26, r24
    3f98:	ed 91       	ld	r30, X+
    3f9a:	fc 91       	ld	r31, X
    3f9c:	11 97       	sbiw	r26, 0x01	; 1
    3f9e:	20 81       	ld	r18, Z
    3fa0:	31 81       	ldd	r19, Z+1	; 0x01
    3fa2:	26 17       	cp	r18, r22
    3fa4:	37 07       	cpc	r19, r23
    3fa6:	90 f0       	brcs	.+36     	; 0x3fcc <qtm_enable_sensor_node+0x3a>
    3fa8:	45 e0       	ldi	r20, 0x05	; 5
    3faa:	46 9f       	mul	r20, r22
    3fac:	90 01       	movw	r18, r0
    3fae:	47 9f       	mul	r20, r23
    3fb0:	30 0d       	add	r19, r0
    3fb2:	11 24       	eor	r1, r1
    3fb4:	14 96       	adiw	r26, 0x04	; 4
    3fb6:	ed 91       	ld	r30, X+
    3fb8:	fc 91       	ld	r31, X
    3fba:	15 97       	sbiw	r26, 0x05	; 5
    3fbc:	e2 0f       	add	r30, r18
    3fbe:	f3 1f       	adc	r31, r19
    3fc0:	81 e0       	ldi	r24, 0x01	; 1
    3fc2:	80 83       	st	Z, r24
    3fc4:	80 e0       	ldi	r24, 0x00	; 0
    3fc6:	08 95       	ret
    3fc8:	8b e0       	ldi	r24, 0x0B	; 11
    3fca:	08 95       	ret
    3fcc:	82 e0       	ldi	r24, 0x02	; 2
    3fce:	08 95       	ret

00003fd0 <qtm_calibrate_sensor_node>:
    3fd0:	fc 01       	movw	r30, r24
    3fd2:	89 2b       	or	r24, r25
    3fd4:	d1 f1       	breq	.+116    	; 0x404a <__DATA_REGION_LENGTH__+0x4a>
    3fd6:	a0 81       	ld	r26, Z
    3fd8:	b1 81       	ldd	r27, Z+1	; 0x01
    3fda:	8d 91       	ld	r24, X+
    3fdc:	9c 91       	ld	r25, X
    3fde:	11 97       	sbiw	r26, 0x01	; 1
    3fe0:	86 17       	cp	r24, r22
    3fe2:	97 07       	cpc	r25, r23
    3fe4:	a0 f1       	brcs	.+104    	; 0x404e <__DATA_REGION_LENGTH__+0x4e>
    3fe6:	12 96       	adiw	r26, 0x02	; 2
    3fe8:	9c 91       	ld	r25, X
    3fea:	04 80       	ldd	r0, Z+4	; 0x04
    3fec:	f5 81       	ldd	r31, Z+5	; 0x05
    3fee:	e0 2d       	mov	r30, r0
    3ff0:	90 34       	cpi	r25, 0x40	; 64
    3ff2:	59 f4       	brne	.+22     	; 0x400a <__DATA_REGION_LENGTH__+0xa>
    3ff4:	85 e0       	ldi	r24, 0x05	; 5
    3ff6:	86 9f       	mul	r24, r22
    3ff8:	d0 01       	movw	r26, r0
    3ffa:	87 9f       	mul	r24, r23
    3ffc:	b0 0d       	add	r27, r0
    3ffe:	11 24       	eor	r1, r1
    4000:	ae 0f       	add	r26, r30
    4002:	bf 1f       	adc	r27, r31
    4004:	80 ea       	ldi	r24, 0xA0	; 160
    4006:	90 e0       	ldi	r25, 0x00	; 0
    4008:	0d c0       	rjmp	.+26     	; 0x4024 <__DATA_REGION_LENGTH__+0x24>
    400a:	90 58       	subi	r25, 0x80	; 128
    400c:	92 30       	cpi	r25, 0x02	; 2
    400e:	80 f4       	brcc	.+32     	; 0x4030 <__DATA_REGION_LENGTH__+0x30>
    4010:	85 e0       	ldi	r24, 0x05	; 5
    4012:	86 9f       	mul	r24, r22
    4014:	d0 01       	movw	r26, r0
    4016:	87 9f       	mul	r24, r23
    4018:	b0 0d       	add	r27, r0
    401a:	11 24       	eor	r1, r1
    401c:	ae 0f       	add	r26, r30
    401e:	bf 1f       	adc	r27, r31
    4020:	80 ef       	ldi	r24, 0xF0	; 240
    4022:	90 e0       	ldi	r25, 0x00	; 0
    4024:	13 96       	adiw	r26, 0x03	; 3
    4026:	8d 93       	st	X+, r24
    4028:	9c 93       	st	X, r25
    402a:	14 97       	sbiw	r26, 0x04	; 4
    402c:	80 e0       	ldi	r24, 0x00	; 0
    402e:	01 c0       	rjmp	.+2      	; 0x4032 <__DATA_REGION_LENGTH__+0x32>
    4030:	82 e0       	ldi	r24, 0x02	; 2
    4032:	95 e0       	ldi	r25, 0x05	; 5
    4034:	96 9f       	mul	r25, r22
    4036:	90 01       	movw	r18, r0
    4038:	97 9f       	mul	r25, r23
    403a:	30 0d       	add	r19, r0
    403c:	11 24       	eor	r1, r1
    403e:	e2 0f       	add	r30, r18
    4040:	f3 1f       	adc	r31, r19
    4042:	90 81       	ld	r25, Z
    4044:	92 60       	ori	r25, 0x02	; 2
    4046:	90 83       	st	Z, r25
    4048:	08 95       	ret
    404a:	8b e0       	ldi	r24, 0x0B	; 11
    404c:	08 95       	ret
    404e:	82 e0       	ldi	r24, 0x02	; 2
    4050:	08 95       	ret

00004052 <qtm_autoscan_sensor_node>:
    4052:	ef 92       	push	r14
    4054:	ff 92       	push	r15
    4056:	1f 93       	push	r17
    4058:	cf 93       	push	r28
    405a:	df 93       	push	r29
    405c:	00 97       	sbiw	r24, 0x00	; 0
    405e:	09 f4       	brne	.+2      	; 0x4062 <qtm_autoscan_sensor_node+0x10>
    4060:	77 c0       	rjmp	.+238    	; 0x4150 <qtm_autoscan_sensor_node+0xfe>
    4062:	dc 01       	movw	r26, r24
    4064:	ed 91       	ld	r30, X+
    4066:	fc 91       	ld	r31, X
    4068:	11 97       	sbiw	r26, 0x01	; 1
    406a:	30 97       	sbiw	r30, 0x00	; 0
    406c:	09 f4       	brne	.+2      	; 0x4070 <qtm_autoscan_sensor_node+0x1e>
    406e:	70 c0       	rjmp	.+224    	; 0x4150 <qtm_autoscan_sensor_node+0xfe>
    4070:	61 15       	cp	r22, r1
    4072:	71 05       	cpc	r23, r1
    4074:	09 f4       	brne	.+2      	; 0x4078 <qtm_autoscan_sensor_node+0x26>
    4076:	6c c0       	rjmp	.+216    	; 0x4150 <qtm_autoscan_sensor_node+0xfe>
    4078:	01 90       	ld	r0, Z+
    407a:	f0 81       	ld	r31, Z
    407c:	e0 2d       	mov	r30, r0
    407e:	12 96       	adiw	r26, 0x02	; 2
    4080:	4d 91       	ld	r20, X+
    4082:	5c 91       	ld	r21, X
    4084:	13 97       	sbiw	r26, 0x03	; 3
    4086:	20 81       	ld	r18, Z
    4088:	31 81       	ldd	r19, Z+1	; 0x01
    408a:	42 17       	cp	r20, r18
    408c:	53 07       	cpc	r21, r19
    408e:	08 f0       	brcs	.+2      	; 0x4092 <qtm_autoscan_sensor_node+0x40>
    4090:	61 c0       	rjmp	.+194    	; 0x4154 <qtm_autoscan_sensor_node+0x102>
    4092:	fc 01       	movw	r30, r24
    4094:	10 92 c0 07 	sts	0x07C0, r1	; 0x8007c0 <__TEXT_REGION_LENGTH__+0x7e07c0>
    4098:	60 93 79 44 	sts	0x4479, r22	; 0x804479 <ptc_wcomp_happened_pointer>
    409c:	70 93 7a 44 	sts	0x447A, r23	; 0x80447a <ptc_wcomp_happened_pointer+0x1>
    40a0:	12 e0       	ldi	r17, 0x02	; 2
    40a2:	10 93 7e 41 	sts	0x417E, r17	; 0x80417e <qtm_which_mode_current>
    40a6:	82 81       	ldd	r24, Z+2	; 0x02
    40a8:	93 81       	ldd	r25, Z+3	; 0x03
    40aa:	80 93 7e 44 	sts	0x447E, r24	; 0x80447e <current_measure_channel>
    40ae:	90 93 7f 44 	sts	0x447F, r25	; 0x80447f <current_measure_channel+0x1>
    40b2:	c0 81       	ld	r28, Z
    40b4:	d1 81       	ldd	r29, Z+1	; 0x01
    40b6:	c0 93 c6 45 	sts	0x45C6, r28	; 0x8045c6 <qtm_acquisition_control_working_set_ptr>
    40ba:	d0 93 c7 45 	sts	0x45C7, r29	; 0x8045c7 <qtm_acquisition_control_working_set_ptr+0x1>
    40be:	45 e0       	ldi	r20, 0x05	; 5
    40c0:	48 9f       	mul	r20, r24
    40c2:	90 01       	movw	r18, r0
    40c4:	49 9f       	mul	r20, r25
    40c6:	30 0d       	add	r19, r0
    40c8:	11 24       	eor	r1, r1
    40ca:	ac 81       	ldd	r26, Y+4	; 0x04
    40cc:	bd 81       	ldd	r27, Y+5	; 0x05
    40ce:	a2 0f       	add	r26, r18
    40d0:	b3 1f       	adc	r27, r19
    40d2:	11 96       	adiw	r26, 0x01	; 1
    40d4:	2d 91       	ld	r18, X+
    40d6:	3c 91       	ld	r19, X
    40d8:	12 97       	sbiw	r26, 0x02	; 2
    40da:	64 81       	ldd	r22, Z+4	; 0x04
    40dc:	70 e0       	ldi	r23, 0x00	; 0
    40de:	d9 01       	movw	r26, r18
    40e0:	a6 0f       	add	r26, r22
    40e2:	b7 1f       	adc	r27, r23
    40e4:	79 01       	movw	r14, r18
    40e6:	e6 1a       	sub	r14, r22
    40e8:	f7 0a       	sbc	r15, r23
    40ea:	24 e1       	ldi	r18, 0x14	; 20
    40ec:	28 9f       	mul	r18, r24
    40ee:	b0 01       	movw	r22, r0
    40f0:	29 9f       	mul	r18, r25
    40f2:	70 0d       	add	r23, r0
    40f4:	11 24       	eor	r1, r1
    40f6:	ea 81       	ldd	r30, Y+2	; 0x02
    40f8:	fb 81       	ldd	r31, Y+3	; 0x03
    40fa:	e6 0f       	add	r30, r22
    40fc:	f7 1f       	adc	r31, r23
    40fe:	52 89       	ldd	r21, Z+18	; 0x12
    4100:	5f 70       	andi	r21, 0x0F	; 15
    4102:	33 89       	ldd	r19, Z+19	; 0x13
    4104:	35 1b       	sub	r19, r21
    4106:	ad 01       	movw	r20, r26
    4108:	03 2e       	mov	r0, r19
    410a:	02 c0       	rjmp	.+4      	; 0x4110 <qtm_autoscan_sensor_node+0xbe>
    410c:	44 0f       	add	r20, r20
    410e:	55 1f       	adc	r21, r21
    4110:	0a 94       	dec	r0
    4112:	e2 f7       	brpl	.-8      	; 0x410c <qtm_autoscan_sensor_node+0xba>
    4114:	b7 01       	movw	r22, r14
    4116:	02 c0       	rjmp	.+4      	; 0x411c <qtm_autoscan_sensor_node+0xca>
    4118:	66 0f       	add	r22, r22
    411a:	77 1f       	adc	r23, r23
    411c:	3a 95       	dec	r19
    411e:	e2 f7       	brpl	.-8      	; 0x4118 <qtm_autoscan_sensor_node+0xc6>
    4120:	9b 01       	movw	r18, r22
    4122:	40 93 de 07 	sts	0x07DE, r20	; 0x8007de <__TEXT_REGION_LENGTH__+0x7e07de>
    4126:	50 93 df 07 	sts	0x07DF, r21	; 0x8007df <__TEXT_REGION_LENGTH__+0x7e07df>
    412a:	60 93 dc 07 	sts	0x07DC, r22	; 0x8007dc <__TEXT_REGION_LENGTH__+0x7e07dc>
    412e:	30 93 dd 07 	sts	0x07DD, r19	; 0x8007dd <__TEXT_REGION_LENGTH__+0x7e07dd>
    4132:	24 e0       	ldi	r18, 0x04	; 4
    4134:	20 93 c8 07 	sts	0x07C8, r18	; 0x8007c8 <__TEXT_REGION_LENGTH__+0x7e07c8>
    4138:	23 e0       	ldi	r18, 0x03	; 3
    413a:	20 93 d3 07 	sts	0x07D3, r18	; 0x8007d3 <__TEXT_REGION_LENGTH__+0x7e07d3>
    413e:	10 93 d2 07 	sts	0x07D2, r17	; 0x8007d2 <__TEXT_REGION_LENGTH__+0x7e07d2>
    4142:	21 e0       	ldi	r18, 0x01	; 1
    4144:	20 93 d1 07 	sts	0x07D1, r18	; 0x8007d1 <__TEXT_REGION_LENGTH__+0x7e07d1>
    4148:	0e 94 35 1b 	call	0x366a	; 0x366a <qtm_measure_node>
    414c:	80 e0       	ldi	r24, 0x00	; 0
    414e:	03 c0       	rjmp	.+6      	; 0x4156 <qtm_autoscan_sensor_node+0x104>
    4150:	8b e0       	ldi	r24, 0x0B	; 11
    4152:	01 c0       	rjmp	.+2      	; 0x4156 <qtm_autoscan_sensor_node+0x104>
    4154:	82 e0       	ldi	r24, 0x02	; 2
    4156:	df 91       	pop	r29
    4158:	cf 91       	pop	r28
    415a:	1f 91       	pop	r17
    415c:	ff 90       	pop	r15
    415e:	ef 90       	pop	r14
    4160:	08 95       	ret

00004162 <qtm_autoscan_node_cancel>:
    4162:	80 91 7e 41 	lds	r24, 0x417E	; 0x80417e <qtm_which_mode_current>
    4166:	82 30       	cpi	r24, 0x02	; 2
    4168:	49 f4       	brne	.+18     	; 0x417c <qtm_autoscan_node_cancel+0x1a>
    416a:	81 e0       	ldi	r24, 0x01	; 1
    416c:	80 93 7e 41 	sts	0x417E, r24	; 0x80417e <qtm_which_mode_current>
    4170:	10 92 c0 07 	sts	0x07C0, r1	; 0x8007c0 <__TEXT_REGION_LENGTH__+0x7e07c0>
    4174:	10 92 d1 07 	sts	0x07D1, r1	; 0x8007d1 <__TEXT_REGION_LENGTH__+0x7e07d1>
    4178:	80 e0       	ldi	r24, 0x00	; 0
    417a:	08 95       	ret
    417c:	83 e0       	ldi	r24, 0x03	; 3
    417e:	08 95       	ret

00004180 <qtm_avr_da_ptc_handler_wcomp>:
    4180:	20 91 da 07 	lds	r18, 0x07DA	; 0x8007da <__TEXT_REGION_LENGTH__+0x7e07da>
    4184:	30 91 db 07 	lds	r19, 0x07DB	; 0x8007db <__TEXT_REGION_LENGTH__+0x7e07db>
    4188:	60 91 7e 44 	lds	r22, 0x447E	; 0x80447e <current_measure_channel>
    418c:	70 91 7f 44 	lds	r23, 0x447F	; 0x80447f <current_measure_channel+0x1>
    4190:	cb 01       	movw	r24, r22
    4192:	88 0f       	add	r24, r24
    4194:	99 1f       	adc	r25, r25
    4196:	e0 91 c8 45 	lds	r30, 0x45C8	; 0x8045c8 <qtm_raw_data_measurements_ptr>
    419a:	f0 91 c9 45 	lds	r31, 0x45C9	; 0x8045c9 <qtm_raw_data_measurements_ptr+0x1>
    419e:	e8 0f       	add	r30, r24
    41a0:	f9 1f       	adc	r31, r25
    41a2:	20 83       	st	Z, r18
    41a4:	31 83       	std	Z+1, r19	; 0x01
    41a6:	a0 91 c6 45 	lds	r26, 0x45C6	; 0x8045c6 <qtm_acquisition_control_working_set_ptr>
    41aa:	b0 91 c7 45 	lds	r27, 0x45C7	; 0x8045c7 <qtm_acquisition_control_working_set_ptr+0x1>
    41ae:	44 e1       	ldi	r20, 0x14	; 20
    41b0:	46 9f       	mul	r20, r22
    41b2:	c0 01       	movw	r24, r0
    41b4:	47 9f       	mul	r20, r23
    41b6:	90 0d       	add	r25, r0
    41b8:	11 24       	eor	r1, r1
    41ba:	12 96       	adiw	r26, 0x02	; 2
    41bc:	ed 91       	ld	r30, X+
    41be:	fc 91       	ld	r31, X
    41c0:	13 97       	sbiw	r26, 0x03	; 3
    41c2:	e8 0f       	add	r30, r24
    41c4:	f9 1f       	adc	r31, r25
    41c6:	92 89       	ldd	r25, Z+18	; 0x12
    41c8:	9f 70       	andi	r25, 0x0F	; 15
    41ca:	83 89       	ldd	r24, Z+19	; 0x13
    41cc:	98 17       	cp	r25, r24
    41ce:	10 f4       	brcc	.+4      	; 0x41d4 <qtm_avr_da_ptc_handler_wcomp+0x54>
    41d0:	89 1b       	sub	r24, r25
    41d2:	01 c0       	rjmp	.+2      	; 0x41d6 <qtm_avr_da_ptc_handler_wcomp+0x56>
    41d4:	80 e0       	ldi	r24, 0x00	; 0
    41d6:	95 e0       	ldi	r25, 0x05	; 5
    41d8:	96 9f       	mul	r25, r22
    41da:	a0 01       	movw	r20, r0
    41dc:	97 9f       	mul	r25, r23
    41de:	50 0d       	add	r21, r0
    41e0:	11 24       	eor	r1, r1
    41e2:	14 96       	adiw	r26, 0x04	; 4
    41e4:	ed 91       	ld	r30, X+
    41e6:	fc 91       	ld	r31, X
    41e8:	15 97       	sbiw	r26, 0x05	; 5
    41ea:	e4 0f       	add	r30, r20
    41ec:	f5 1f       	adc	r31, r21
    41ee:	02 c0       	rjmp	.+4      	; 0x41f4 <qtm_avr_da_ptc_handler_wcomp+0x74>
    41f0:	36 95       	lsr	r19
    41f2:	27 95       	ror	r18
    41f4:	8a 95       	dec	r24
    41f6:	e2 f7       	brpl	.-8      	; 0x41f0 <qtm_avr_da_ptc_handler_wcomp+0x70>
    41f8:	21 83       	std	Z+1, r18	; 0x01
    41fa:	32 83       	std	Z+2, r19	; 0x02
    41fc:	82 e0       	ldi	r24, 0x02	; 2
    41fe:	80 93 7d 44 	sts	0x447D, r24	; 0x80447d <touch_seq_lib_state>
    4202:	e0 91 79 44 	lds	r30, 0x4479	; 0x804479 <ptc_wcomp_happened_pointer>
    4206:	f0 91 7a 44 	lds	r31, 0x447A	; 0x80447a <ptc_wcomp_happened_pointer+0x1>
    420a:	09 94       	ijmp

0000420c <qtm_avr_da_ptc_handler_eoc>:
    420c:	10 92 c0 07 	sts	0x07C0, r1	; 0x8007c0 <__TEXT_REGION_LENGTH__+0x7e07c0>
    4210:	80 91 7e 41 	lds	r24, 0x417E	; 0x80417e <qtm_which_mode_current>
    4214:	81 30       	cpi	r24, 0x01	; 1
    4216:	09 f0       	breq	.+2      	; 0x421a <qtm_avr_da_ptc_handler_eoc+0xe>
    4218:	4e c0       	rjmp	.+156    	; 0x42b6 <qtm_avr_da_ptc_handler_eoc+0xaa>
    421a:	40 91 da 07 	lds	r20, 0x07DA	; 0x8007da <__TEXT_REGION_LENGTH__+0x7e07da>
    421e:	50 91 db 07 	lds	r21, 0x07DB	; 0x8007db <__TEXT_REGION_LENGTH__+0x7e07db>
    4222:	80 91 7e 44 	lds	r24, 0x447E	; 0x80447e <current_measure_channel>
    4226:	90 91 7f 44 	lds	r25, 0x447F	; 0x80447f <current_measure_channel+0x1>
    422a:	9c 01       	movw	r18, r24
    422c:	22 0f       	add	r18, r18
    422e:	33 1f       	adc	r19, r19
    4230:	e0 91 c8 45 	lds	r30, 0x45C8	; 0x8045c8 <qtm_raw_data_measurements_ptr>
    4234:	f0 91 c9 45 	lds	r31, 0x45C9	; 0x8045c9 <qtm_raw_data_measurements_ptr+0x1>
    4238:	e2 0f       	add	r30, r18
    423a:	f3 1f       	adc	r31, r19
    423c:	40 83       	st	Z, r20
    423e:	51 83       	std	Z+1, r21	; 0x01
    4240:	01 96       	adiw	r24, 0x01	; 1
    4242:	80 93 7e 44 	sts	0x447E, r24	; 0x80447e <current_measure_channel>
    4246:	90 93 7f 44 	sts	0x447F, r25	; 0x80447f <current_measure_channel+0x1>
    424a:	0e 94 02 1b 	call	0x3604	; 0x3604 <select_next_channel_to_measure>
    424e:	81 11       	cpse	r24, r1
    4250:	09 c0       	rjmp	.+18     	; 0x4264 <qtm_avr_da_ptc_handler_eoc+0x58>
    4252:	84 e0       	ldi	r24, 0x04	; 4
    4254:	80 93 7d 44 	sts	0x447D, r24	; 0x80447d <touch_seq_lib_state>
    4258:	80 91 7e 44 	lds	r24, 0x447E	; 0x80447e <current_measure_channel>
    425c:	90 91 7f 44 	lds	r25, 0x447F	; 0x80447f <current_measure_channel+0x1>
    4260:	0c 94 35 1b 	jmp	0x366a	; 0x366a <qtm_measure_node>
    4264:	10 92 e8 07 	sts	0x07E8, r1	; 0x8007e8 <__TEXT_REGION_LENGTH__+0x7e07e8>
    4268:	10 92 e9 07 	sts	0x07E9, r1	; 0x8007e9 <__TEXT_REGION_LENGTH__+0x7e07e9>
    426c:	10 92 ea 07 	sts	0x07EA, r1	; 0x8007ea <__TEXT_REGION_LENGTH__+0x7e07ea>
    4270:	10 92 eb 07 	sts	0x07EB, r1	; 0x8007eb <__TEXT_REGION_LENGTH__+0x7e07eb>
    4274:	10 92 ec 07 	sts	0x07EC, r1	; 0x8007ec <__TEXT_REGION_LENGTH__+0x7e07ec>
    4278:	10 92 ed 07 	sts	0x07ED, r1	; 0x8007ed <__TEXT_REGION_LENGTH__+0x7e07ed>
    427c:	10 92 f0 07 	sts	0x07F0, r1	; 0x8007f0 <__TEXT_REGION_LENGTH__+0x7e07f0>
    4280:	10 92 f1 07 	sts	0x07F1, r1	; 0x8007f1 <__TEXT_REGION_LENGTH__+0x7e07f1>
    4284:	10 92 f2 07 	sts	0x07F2, r1	; 0x8007f2 <__TEXT_REGION_LENGTH__+0x7e07f2>
    4288:	10 92 f3 07 	sts	0x07F3, r1	; 0x8007f3 <__TEXT_REGION_LENGTH__+0x7e07f3>
    428c:	10 92 f4 07 	sts	0x07F4, r1	; 0x8007f4 <__TEXT_REGION_LENGTH__+0x7e07f4>
    4290:	10 92 f5 07 	sts	0x07F5, r1	; 0x8007f5 <__TEXT_REGION_LENGTH__+0x7e07f5>
    4294:	10 92 f8 07 	sts	0x07F8, r1	; 0x8007f8 <__TEXT_REGION_LENGTH__+0x7e07f8>
    4298:	10 92 f9 07 	sts	0x07F9, r1	; 0x8007f9 <__TEXT_REGION_LENGTH__+0x7e07f9>
    429c:	10 92 fa 07 	sts	0x07FA, r1	; 0x8007fa <__TEXT_REGION_LENGTH__+0x7e07fa>
    42a0:	10 92 fb 07 	sts	0x07FB, r1	; 0x8007fb <__TEXT_REGION_LENGTH__+0x7e07fb>
    42a4:	10 92 fc 07 	sts	0x07FC, r1	; 0x8007fc <__TEXT_REGION_LENGTH__+0x7e07fc>
    42a8:	10 92 fd 07 	sts	0x07FD, r1	; 0x8007fd <__TEXT_REGION_LENGTH__+0x7e07fd>
    42ac:	e0 91 7b 44 	lds	r30, 0x447B	; 0x80447b <ptc_seq_measure_complete_pointer>
    42b0:	f0 91 7c 44 	lds	r31, 0x447C	; 0x80447c <ptc_seq_measure_complete_pointer+0x1>
    42b4:	09 94       	ijmp
    42b6:	0c 94 c0 20 	jmp	0x4180	; 0x4180 <qtm_avr_da_ptc_handler_wcomp>

000042ba <__divmodsi4>:
    42ba:	05 2e       	mov	r0, r21
    42bc:	97 fb       	bst	r25, 7
    42be:	1e f4       	brtc	.+6      	; 0x42c6 <__divmodsi4+0xc>
    42c0:	00 94       	com	r0
    42c2:	0e 94 74 21 	call	0x42e8	; 0x42e8 <__negsi2>
    42c6:	57 fd       	sbrc	r21, 7
    42c8:	07 d0       	rcall	.+14     	; 0x42d8 <__divmodsi4_neg2>
    42ca:	0e 94 c0 21 	call	0x4380	; 0x4380 <__udivmodsi4>
    42ce:	07 fc       	sbrc	r0, 7
    42d0:	03 d0       	rcall	.+6      	; 0x42d8 <__divmodsi4_neg2>
    42d2:	4e f4       	brtc	.+18     	; 0x42e6 <__divmodsi4_exit>
    42d4:	0c 94 74 21 	jmp	0x42e8	; 0x42e8 <__negsi2>

000042d8 <__divmodsi4_neg2>:
    42d8:	50 95       	com	r21
    42da:	40 95       	com	r20
    42dc:	30 95       	com	r19
    42de:	21 95       	neg	r18
    42e0:	3f 4f       	sbci	r19, 0xFF	; 255
    42e2:	4f 4f       	sbci	r20, 0xFF	; 255
    42e4:	5f 4f       	sbci	r21, 0xFF	; 255

000042e6 <__divmodsi4_exit>:
    42e6:	08 95       	ret

000042e8 <__negsi2>:
    42e8:	90 95       	com	r25
    42ea:	80 95       	com	r24
    42ec:	70 95       	com	r23
    42ee:	61 95       	neg	r22
    42f0:	7f 4f       	sbci	r23, 0xFF	; 255
    42f2:	8f 4f       	sbci	r24, 0xFF	; 255
    42f4:	9f 4f       	sbci	r25, 0xFF	; 255
    42f6:	08 95       	ret

000042f8 <__umulhisi3>:
    42f8:	a2 9f       	mul	r26, r18
    42fa:	b0 01       	movw	r22, r0
    42fc:	b3 9f       	mul	r27, r19
    42fe:	c0 01       	movw	r24, r0
    4300:	a3 9f       	mul	r26, r19
    4302:	70 0d       	add	r23, r0
    4304:	81 1d       	adc	r24, r1
    4306:	11 24       	eor	r1, r1
    4308:	91 1d       	adc	r25, r1
    430a:	b2 9f       	mul	r27, r18
    430c:	70 0d       	add	r23, r0
    430e:	81 1d       	adc	r24, r1
    4310:	11 24       	eor	r1, r1
    4312:	91 1d       	adc	r25, r1
    4314:	08 95       	ret

00004316 <__muluhisi3>:
    4316:	0e 94 7c 21 	call	0x42f8	; 0x42f8 <__umulhisi3>
    431a:	a5 9f       	mul	r26, r21
    431c:	90 0d       	add	r25, r0
    431e:	b4 9f       	mul	r27, r20
    4320:	90 0d       	add	r25, r0
    4322:	a4 9f       	mul	r26, r20
    4324:	80 0d       	add	r24, r0
    4326:	91 1d       	adc	r25, r1
    4328:	11 24       	eor	r1, r1
    432a:	08 95       	ret

0000432c <__ashrdi3>:
    432c:	97 fb       	bst	r25, 7
    432e:	10 f8       	bld	r1, 0

00004330 <__lshrdi3>:
    4330:	16 94       	lsr	r1
    4332:	00 08       	sbc	r0, r0
    4334:	0f 93       	push	r16
    4336:	08 30       	cpi	r16, 0x08	; 8
    4338:	98 f0       	brcs	.+38     	; 0x4360 <__lshrdi3+0x30>
    433a:	08 50       	subi	r16, 0x08	; 8
    433c:	23 2f       	mov	r18, r19
    433e:	34 2f       	mov	r19, r20
    4340:	45 2f       	mov	r20, r21
    4342:	56 2f       	mov	r21, r22
    4344:	67 2f       	mov	r22, r23
    4346:	78 2f       	mov	r23, r24
    4348:	89 2f       	mov	r24, r25
    434a:	90 2d       	mov	r25, r0
    434c:	f4 cf       	rjmp	.-24     	; 0x4336 <__lshrdi3+0x6>
    434e:	05 94       	asr	r0
    4350:	97 95       	ror	r25
    4352:	87 95       	ror	r24
    4354:	77 95       	ror	r23
    4356:	67 95       	ror	r22
    4358:	57 95       	ror	r21
    435a:	47 95       	ror	r20
    435c:	37 95       	ror	r19
    435e:	27 95       	ror	r18
    4360:	0a 95       	dec	r16
    4362:	aa f7       	brpl	.-22     	; 0x434e <__lshrdi3+0x1e>
    4364:	0f 91       	pop	r16
    4366:	08 95       	ret

00004368 <__cmpdi2_s8>:
    4368:	00 24       	eor	r0, r0
    436a:	a7 fd       	sbrc	r26, 7
    436c:	00 94       	com	r0
    436e:	2a 17       	cp	r18, r26
    4370:	30 05       	cpc	r19, r0
    4372:	40 05       	cpc	r20, r0
    4374:	50 05       	cpc	r21, r0
    4376:	60 05       	cpc	r22, r0
    4378:	70 05       	cpc	r23, r0
    437a:	80 05       	cpc	r24, r0
    437c:	90 05       	cpc	r25, r0
    437e:	08 95       	ret

00004380 <__udivmodsi4>:
    4380:	a1 e2       	ldi	r26, 0x21	; 33
    4382:	1a 2e       	mov	r1, r26
    4384:	aa 1b       	sub	r26, r26
    4386:	bb 1b       	sub	r27, r27
    4388:	fd 01       	movw	r30, r26
    438a:	0d c0       	rjmp	.+26     	; 0x43a6 <__udivmodsi4_ep>

0000438c <__udivmodsi4_loop>:
    438c:	aa 1f       	adc	r26, r26
    438e:	bb 1f       	adc	r27, r27
    4390:	ee 1f       	adc	r30, r30
    4392:	ff 1f       	adc	r31, r31
    4394:	a2 17       	cp	r26, r18
    4396:	b3 07       	cpc	r27, r19
    4398:	e4 07       	cpc	r30, r20
    439a:	f5 07       	cpc	r31, r21
    439c:	20 f0       	brcs	.+8      	; 0x43a6 <__udivmodsi4_ep>
    439e:	a2 1b       	sub	r26, r18
    43a0:	b3 0b       	sbc	r27, r19
    43a2:	e4 0b       	sbc	r30, r20
    43a4:	f5 0b       	sbc	r31, r21

000043a6 <__udivmodsi4_ep>:
    43a6:	66 1f       	adc	r22, r22
    43a8:	77 1f       	adc	r23, r23
    43aa:	88 1f       	adc	r24, r24
    43ac:	99 1f       	adc	r25, r25
    43ae:	1a 94       	dec	r1
    43b0:	69 f7       	brne	.-38     	; 0x438c <__udivmodsi4_loop>
    43b2:	60 95       	com	r22
    43b4:	70 95       	com	r23
    43b6:	80 95       	com	r24
    43b8:	90 95       	com	r25
    43ba:	9b 01       	movw	r18, r22
    43bc:	ac 01       	movw	r20, r24
    43be:	bd 01       	movw	r22, r26
    43c0:	cf 01       	movw	r24, r30
    43c2:	08 95       	ret

000043c4 <random_r>:
    43c4:	8f 92       	push	r8
    43c6:	9f 92       	push	r9
    43c8:	af 92       	push	r10
    43ca:	bf 92       	push	r11
    43cc:	cf 92       	push	r12
    43ce:	df 92       	push	r13
    43d0:	ef 92       	push	r14
    43d2:	ff 92       	push	r15
    43d4:	cf 93       	push	r28
    43d6:	df 93       	push	r29
    43d8:	ec 01       	movw	r28, r24
    43da:	68 81       	ld	r22, Y
    43dc:	79 81       	ldd	r23, Y+1	; 0x01
    43de:	8a 81       	ldd	r24, Y+2	; 0x02
    43e0:	9b 81       	ldd	r25, Y+3	; 0x03
    43e2:	61 15       	cp	r22, r1
    43e4:	71 05       	cpc	r23, r1
    43e6:	81 05       	cpc	r24, r1
    43e8:	91 05       	cpc	r25, r1
    43ea:	21 f4       	brne	.+8      	; 0x43f4 <random_r+0x30>
    43ec:	64 e2       	ldi	r22, 0x24	; 36
    43ee:	79 ed       	ldi	r23, 0xD9	; 217
    43f0:	8b e5       	ldi	r24, 0x5B	; 91
    43f2:	97 e0       	ldi	r25, 0x07	; 7
    43f4:	2d e1       	ldi	r18, 0x1D	; 29
    43f6:	33 ef       	ldi	r19, 0xF3	; 243
    43f8:	41 e0       	ldi	r20, 0x01	; 1
    43fa:	50 e0       	ldi	r21, 0x00	; 0
    43fc:	0e 94 5d 21 	call	0x42ba	; 0x42ba <__divmodsi4>
    4400:	49 01       	movw	r8, r18
    4402:	5a 01       	movw	r10, r20
    4404:	9b 01       	movw	r18, r22
    4406:	ac 01       	movw	r20, r24
    4408:	a7 ea       	ldi	r26, 0xA7	; 167
    440a:	b1 e4       	ldi	r27, 0x41	; 65
    440c:	0e 94 8b 21 	call	0x4316	; 0x4316 <__muluhisi3>
    4410:	6b 01       	movw	r12, r22
    4412:	7c 01       	movw	r14, r24
    4414:	ac ee       	ldi	r26, 0xEC	; 236
    4416:	b4 ef       	ldi	r27, 0xF4	; 244
    4418:	a5 01       	movw	r20, r10
    441a:	94 01       	movw	r18, r8
    441c:	0e 94 87 22 	call	0x450e	; 0x450e <__mulohisi3>
    4420:	dc 01       	movw	r26, r24
    4422:	cb 01       	movw	r24, r22
    4424:	8c 0d       	add	r24, r12
    4426:	9d 1d       	adc	r25, r13
    4428:	ae 1d       	adc	r26, r14
    442a:	bf 1d       	adc	r27, r15
    442c:	b7 ff       	sbrs	r27, 7
    442e:	03 c0       	rjmp	.+6      	; 0x4436 <random_r+0x72>
    4430:	01 97       	sbiw	r24, 0x01	; 1
    4432:	a1 09       	sbc	r26, r1
    4434:	b0 48       	sbci	r27, 0x80	; 128
    4436:	88 83       	st	Y, r24
    4438:	99 83       	std	Y+1, r25	; 0x01
    443a:	aa 83       	std	Y+2, r26	; 0x02
    443c:	bb 83       	std	Y+3, r27	; 0x03
    443e:	bc 01       	movw	r22, r24
    4440:	cd 01       	movw	r24, r26
    4442:	9f 77       	andi	r25, 0x7F	; 127
    4444:	df 91       	pop	r29
    4446:	cf 91       	pop	r28
    4448:	ff 90       	pop	r15
    444a:	ef 90       	pop	r14
    444c:	df 90       	pop	r13
    444e:	cf 90       	pop	r12
    4450:	bf 90       	pop	r11
    4452:	af 90       	pop	r10
    4454:	9f 90       	pop	r9
    4456:	8f 90       	pop	r8
    4458:	08 95       	ret

0000445a <random>:
    445a:	8f 92       	push	r8
    445c:	9f 92       	push	r9
    445e:	af 92       	push	r10
    4460:	bf 92       	push	r11
    4462:	cf 92       	push	r12
    4464:	df 92       	push	r13
    4466:	ef 92       	push	r14
    4468:	ff 92       	push	r15
    446a:	60 91 00 40 	lds	r22, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
    446e:	70 91 01 40 	lds	r23, 0x4001	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
    4472:	80 91 02 40 	lds	r24, 0x4002	; 0x804002 <__DATA_REGION_ORIGIN__+0x2>
    4476:	90 91 03 40 	lds	r25, 0x4003	; 0x804003 <__DATA_REGION_ORIGIN__+0x3>
    447a:	61 15       	cp	r22, r1
    447c:	71 05       	cpc	r23, r1
    447e:	81 05       	cpc	r24, r1
    4480:	91 05       	cpc	r25, r1
    4482:	21 f4       	brne	.+8      	; 0x448c <random+0x32>
    4484:	64 e2       	ldi	r22, 0x24	; 36
    4486:	79 ed       	ldi	r23, 0xD9	; 217
    4488:	8b e5       	ldi	r24, 0x5B	; 91
    448a:	97 e0       	ldi	r25, 0x07	; 7
    448c:	2d e1       	ldi	r18, 0x1D	; 29
    448e:	33 ef       	ldi	r19, 0xF3	; 243
    4490:	41 e0       	ldi	r20, 0x01	; 1
    4492:	50 e0       	ldi	r21, 0x00	; 0
    4494:	0e 94 5d 21 	call	0x42ba	; 0x42ba <__divmodsi4>
    4498:	49 01       	movw	r8, r18
    449a:	5a 01       	movw	r10, r20
    449c:	9b 01       	movw	r18, r22
    449e:	ac 01       	movw	r20, r24
    44a0:	a7 ea       	ldi	r26, 0xA7	; 167
    44a2:	b1 e4       	ldi	r27, 0x41	; 65
    44a4:	0e 94 8b 21 	call	0x4316	; 0x4316 <__muluhisi3>
    44a8:	6b 01       	movw	r12, r22
    44aa:	7c 01       	movw	r14, r24
    44ac:	ac ee       	ldi	r26, 0xEC	; 236
    44ae:	b4 ef       	ldi	r27, 0xF4	; 244
    44b0:	a5 01       	movw	r20, r10
    44b2:	94 01       	movw	r18, r8
    44b4:	0e 94 87 22 	call	0x450e	; 0x450e <__mulohisi3>
    44b8:	dc 01       	movw	r26, r24
    44ba:	cb 01       	movw	r24, r22
    44bc:	8c 0d       	add	r24, r12
    44be:	9d 1d       	adc	r25, r13
    44c0:	ae 1d       	adc	r26, r14
    44c2:	bf 1d       	adc	r27, r15
    44c4:	b7 ff       	sbrs	r27, 7
    44c6:	03 c0       	rjmp	.+6      	; 0x44ce <random+0x74>
    44c8:	01 97       	sbiw	r24, 0x01	; 1
    44ca:	a1 09       	sbc	r26, r1
    44cc:	b0 48       	sbci	r27, 0x80	; 128
    44ce:	80 93 00 40 	sts	0x4000, r24	; 0x804000 <__DATA_REGION_ORIGIN__>
    44d2:	90 93 01 40 	sts	0x4001, r25	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
    44d6:	a0 93 02 40 	sts	0x4002, r26	; 0x804002 <__DATA_REGION_ORIGIN__+0x2>
    44da:	b0 93 03 40 	sts	0x4003, r27	; 0x804003 <__DATA_REGION_ORIGIN__+0x3>
    44de:	bc 01       	movw	r22, r24
    44e0:	cd 01       	movw	r24, r26
    44e2:	9f 77       	andi	r25, 0x7F	; 127
    44e4:	ff 90       	pop	r15
    44e6:	ef 90       	pop	r14
    44e8:	df 90       	pop	r13
    44ea:	cf 90       	pop	r12
    44ec:	bf 90       	pop	r11
    44ee:	af 90       	pop	r10
    44f0:	9f 90       	pop	r9
    44f2:	8f 90       	pop	r8
    44f4:	08 95       	ret

000044f6 <srandom>:
    44f6:	60 93 00 40 	sts	0x4000, r22	; 0x804000 <__DATA_REGION_ORIGIN__>
    44fa:	70 93 01 40 	sts	0x4001, r23	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
    44fe:	80 93 02 40 	sts	0x4002, r24	; 0x804002 <__DATA_REGION_ORIGIN__+0x2>
    4502:	90 93 03 40 	sts	0x4003, r25	; 0x804003 <__DATA_REGION_ORIGIN__+0x3>
    4506:	08 95       	ret

00004508 <__mulshisi3>:
    4508:	b7 ff       	sbrs	r27, 7
    450a:	0c 94 8b 21 	jmp	0x4316	; 0x4316 <__muluhisi3>

0000450e <__mulohisi3>:
    450e:	0e 94 8b 21 	call	0x4316	; 0x4316 <__muluhisi3>
    4512:	82 1b       	sub	r24, r18
    4514:	93 0b       	sbc	r25, r19
    4516:	08 95       	ret

00004518 <_exit>:
    4518:	f8 94       	cli

0000451a <__stop_program>:
    451a:	ff cf       	rjmp	.-2      	; 0x451a <__stop_program>
